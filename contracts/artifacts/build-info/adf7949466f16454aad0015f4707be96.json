{
	"id": "adf7949466f16454aad0015f4707be96",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NFTCollection.sol": {
				"content": "\n\n\npragma solidity ^0.8.0;\n\n// SPDX-License-Identifier: MIT\n\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\";\n// import \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\n// import \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\";\nimport \"./interface/IERC2981.sol\";\n// import \"@openzeppelin/contracts/access/Ownable.sol\";\n\n// import \"OpenZeppelin/openzeppelin-contracts/contracts/access/Ownable.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\";\n\n/**\n * @title Sample NFT contract\n * @dev Extends ERC-721 NFT contract and implements ERC-2981\n */\n\ncontract Token is Ownable, ERC721Enumerable, ERC721URIStorage {\n\n    // Keep a mapping of token ids and corresponding IPFS hashes\n    mapping(string => uint8) hashes;\n    // Maximum amounts of mintable tokens\n    uint256 public constant MAX_SUPPLY = 7777;\n    // Address of the royalties recipient\n    address private _royaltiesReceiver;\n    // Percentage of each sale to pay as royalties 2.5 = 250 in bips\n    uint256 public  royaltiesPercentageInBips ;\n\n    // Events\n    event Mint(uint256 tokenId, address recipient);\n\nconstructor(address initialRoyaltiesReceiver, uint _royaltiesPercentageInBips) ERC721(\"Sample NFT\", \"NFT\") {\n        royaltiesPercentageInBips = _royaltiesPercentageInBips;\n        _royaltiesReceiver = initialRoyaltiesReceiver;\n    }\n\n    /** Overrides ERC-721's _baseURI function */\n    function _baseURI() internal view override returns (string memory) {\n        return \"https://gateway.pinata.cloud/ipfs/\";\n    }\n\n    function _beforeTokenTransfer(address from, address to, uint256 amount)\n    internal override(ERC721, ERC721Enumerable) {\n        super._beforeTokenTransfer(from, to, amount);\n    }\n\n    function _burn(uint256 tokenId)\n    internal override(ERC721, ERC721URIStorage) {\n        super._burn(tokenId);\n    }\n\n    /// @notice Getter function for _royaltiesReceiver\n    /// @return the address of the royalties recipient\n    function royaltiesReceiver() external returns(address) {\n        return _royaltiesReceiver;\n    }\n\n    /// @notice Changes the royalties' recipient address (in case rights are\n    ///         transferred for instance)\n    /// @param newRoyaltiesReceiver - address of the new royalties recipient\n    function setRoyaltiesReceiver(address newRoyaltiesReceiver)\n    external onlyOwner {\n        require(newRoyaltiesReceiver != _royaltiesReceiver); // dev: Same address\n        _royaltiesReceiver = newRoyaltiesReceiver;\n    }\n\n    /// @notice Returns a token's URI\n    /// @dev See {IERC721Metadata-tokenURI}.\n    /// @param tokenId - the id of the token whose URI to return\n    /// @return a string containing an URI pointing to the token's ressource\n    function tokenURI(uint256 tokenId)\n    public view override(ERC721, ERC721URIStorage)\n    returns (string memory) {\n        return super.tokenURI(tokenId);\n    }\n\n    /// @notice Informs callers that this contract supports ERC2981\n    function supportsInterface(bytes4 interfaceId)\n    public view override(ERC721, ERC721Enumerable)\n    returns (bool) {\n        return interfaceId == type(IERC2981).interfaceId ||\n        super.supportsInterface(interfaceId);\n    }\n\n\n    /// @notice Returns all the tokens owned by an address\n    /// @param _owner - the address to query\n    /// @return ownerTokens - an array containing the ids of all tokens\n    ///         owned by the address\n    function tokensOfOwner(address _owner) external view\n    returns(uint256[] memory ownerTokens ) {\n        uint256 tokenCount = balanceOf(_owner);\n        uint256[] memory result = new uint256[](tokenCount);\n\n        if (tokenCount == 0) {\n            return new uint256[](0);\n        } else {\n            for (uint256 i=0; i<tokenCount; i++) {\n                result[i] = tokenOfOwnerByIndex(_owner, i);\n            }\n            return result;\n        }\n    }\n\n    /// @notice Called with the sale price to determine how much royalty\n    //          is owed and to whom.\n    /// @param _tokenId - the NFT asset queried for royalty information\n    /// @param _salePrice - sale price of the NFT asset specified by _tokenId\n    /// @return receiver - address of who should be sent the royalty payment\n    /// @return royaltyAmount - the royalty payment amount for _value sale price\n    function royaltyInfo(uint256 _tokenId, uint256 _salePrice) external view\n    returns (address receiver, uint256 royaltyAmount) {\n        uint256 _royalties = (_salePrice * royaltiesPercentageInBips) / 100 ;\n        return (_royaltiesReceiver, _royalties);\n    }\n\n\n    /// @notice Mints tokens\n    /// @param recipient - the address to which the token will be transfered\n    /// @param hash - the IPFS hash of the token's resource\n    /// @return tokenId - the id of the token\n    function mint(address recipient, string memory hash)\n    external onlyOwner\n    returns (uint256 tokenId)\n    {\n        require(totalSupply() <= MAX_SUPPLY, \"All tokens minted\");\n        require(bytes(hash).length > 0); // dev: Hash can not be empty!\n        require(hashes[hash] != 1); // dev: Can't use the same hash twice\n        hashes[hash] = 1;\n        uint256 newItemId = totalSupply() + 1;\n        _safeMint(recipient, newItemId);\n        _setTokenURI(newItemId, hash);\n        emit Mint(newItemId, recipient);\n        return newItemId;\n    }\n\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/interface/IERC2981.sol": {
				"content": "pragma solidity ^0.8.0;\n// SPDX-License-Identifier: MIT\n\n// import \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\";\n// import \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/common/ERC2981.sol\";\n//import \"./ERC165/IERC165.sol\";\n///\n/// @dev Interface for the NFT Royalty Standard\n///\ninterface IERC2981  {\n    /// ERC165 bytes to add to interface array - set in parent contract\n    /// implementing this standard\n    ///\n    /// bytes4(keccak256(\"royaltyInfo(uint256,uint256)\")) == 0x2a55205a\n    /// bytes4 private constant _INTERFACE_ID_ERC2981 = 0x2a55205a;\n    /// _registerInterface(_INTERFACE_ID_ERC2981);\n\n    /// @notice Called with the sale price to determine how much royalty\n    //          is owed and to whom.\n    /// @param _tokenId - the NFT asset queried for royalty information\n    /// @param _salePrice - the sale price of the NFT asset specified by _tokenId\n    /// @return receiver - address of who should be sent the royalty payment\n    /// @return royaltyAmount - the royalty payment amount for _salePrice\n    function royaltyInfo(\n        uint256 _tokenId,\n        uint256 _salePrice\n    ) external view returns (\n        address receiver,\n        uint256 royaltyAmount\n    );\n\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/ERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\nimport \"./IERC721Enumerable.sol\";\n\n/**\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds\n * enumerability of all the token ids in the contract as well as all token ids owned by each\n * account.\n */\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\n    // Mapping from owner to list of owned token IDs\n    mapping(address => mapping(uint256 => uint256)) private _ownedTokens;\n\n    // Mapping from token ID to index of the owner tokens list\n    mapping(uint256 => uint256) private _ownedTokensIndex;\n\n    // Array with all token ids, used for enumeration\n    uint256[] private _allTokens;\n\n    // Mapping from token id to position in the allTokens array\n    mapping(uint256 => uint256) private _allTokensIndex;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {\n        require(index < ERC721.balanceOf(owner), \"ERC721Enumerable: owner index out of bounds\");\n        return _ownedTokens[owner][index];\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _allTokens.length;\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenByIndex}.\n     */\n    function tokenByIndex(uint256 index) public view virtual override returns (uint256) {\n        require(index < ERC721Enumerable.totalSupply(), \"ERC721Enumerable: global index out of bounds\");\n        return _allTokens[index];\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual override {\n        super._beforeTokenTransfer(from, to, tokenId);\n\n        if (from == address(0)) {\n            _addTokenToAllTokensEnumeration(tokenId);\n        } else if (from != to) {\n            _removeTokenFromOwnerEnumeration(from, tokenId);\n        }\n        if (to == address(0)) {\n            _removeTokenFromAllTokensEnumeration(tokenId);\n        } else if (to != from) {\n            _addTokenToOwnerEnumeration(to, tokenId);\n        }\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\n     * @param to address representing the new owner of the given token ID\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\n     */\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\n        uint256 length = ERC721.balanceOf(to);\n        _ownedTokens[to][length] = tokenId;\n        _ownedTokensIndex[tokenId] = length;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's token tracking data structures.\n     * @param tokenId uint256 ID of the token to be added to the tokens list\n     */\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\n        _allTokensIndex[tokenId] = _allTokens.length;\n        _allTokens.push(tokenId);\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\n     * @param from address representing the previous owner of the given token ID\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\n     */\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = ERC721.balanceOf(from) - 1;\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary\n        if (tokenIndex != lastTokenIndex) {\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\n\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n        }\n\n        // This also deletes the contents at the last position of the array\n        delete _ownedTokensIndex[tokenId];\n        delete _ownedTokens[from][lastTokenIndex];\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's token tracking data structures.\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\n     */\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = _allTokens.length - 1;\n        uint256 tokenIndex = _allTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\n\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n\n        // This also deletes the contents at the last position of the array\n        delete _allTokensIndex[tokenId];\n        _allTokens.pop();\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is ERC721 {\n    using Strings for uint256;\n\n    // Optional mapping for token URIs\n    mapping(uint256 => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721URIStorage: URI query for nonexistent token\");\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\n        if (bytes(_tokenURI).length > 0) {\n            return string(abi.encodePacked(base, _tokenURI));\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\");\n        _tokenURIs[tokenId] = _tokenURI;\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual override {\n        super._burn(tokenId);\n\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\n            delete _tokenURIs[tokenId];\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: owner query for nonexistent token\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, _data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/NFTCollection.sol": {
				"Token": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialRoyaltiesReceiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_royaltiesPercentageInBips",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "MAX_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "hash",
									"type": "string"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "royaltiesPercentageInBips",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "royaltiesReceiver",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_salePrice",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "royaltyAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newRoyaltiesReceiver",
									"type": "address"
								}
							],
							"name": "setRoyaltiesReceiver",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "tokensOfOwner",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "ownerTokens",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extends ERC-721 NFT contract and implements ERC-2981",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"mint(address,string)": {
								"params": {
									"hash": "- the IPFS hash of the token's resource",
									"recipient": "- the address to which the token will be transfered"
								},
								"returns": {
									"tokenId": "- the id of the token"
								}
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"royaltiesReceiver()": {
								"returns": {
									"_0": "the address of the royalties recipient"
								}
							},
							"royaltyInfo(uint256,uint256)": {
								"params": {
									"_salePrice": "- sale price of the NFT asset specified by _tokenId",
									"_tokenId": "- the NFT asset queried for royalty information"
								},
								"returns": {
									"receiver": "- address of who should be sent the royalty payment",
									"royaltyAmount": "- the royalty payment amount for _value sale price"
								}
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"setRoyaltiesReceiver(address)": {
								"params": {
									"newRoyaltiesReceiver": "- address of the new royalties recipient"
								}
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenByIndex(uint256)": {
								"details": "See {IERC721Enumerable-tokenByIndex}."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}.",
								"params": {
									"tokenId": "- the id of the token whose URI to return"
								},
								"returns": {
									"_0": "a string containing an URI pointing to the token's ressource"
								}
							},
							"tokensOfOwner(address)": {
								"params": {
									"_owner": "- the address to query"
								},
								"returns": {
									"ownerTokens": "- an array containing the ids of all tokens         owned by the address"
								}
							},
							"totalSupply()": {
								"details": "See {IERC721Enumerable-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "Sample NFT contract",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTCollection.sol\":866:5585  contract Token is Ownable, ERC721Enumerable, ERC721URIStorage {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/NFTCollection.sol\":1389:1622  constructor(address initialRoyaltiesReceiver, uint _royaltiesPercentageInBips) ERC721(\"Sample NFT\", \"NFT\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xb2, 0x14d85b5c1b1948139195)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xea, 0x139195)\n  dup2\n  mstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_9\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_10)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_11\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_8:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1456:1469  _name = name_ */\n  dup2\n  mload\n  tag_13\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1456:1461  _name */\n  0x01\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1456:1469  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1479:1496  _symbol = symbol_ */\n  dup1\n  mload\n  tag_15\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1479:1486  _symbol */\n  0x02\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1479:1496  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_14\n  jump\t// in\ntag_15:\n  pop\n  pop\n  pop\n    /* \"contracts/NFTCollection.sol\":1506:1531  royaltiesPercentageInBips */\n  0x0e\n    /* \"contracts/NFTCollection.sol\":1506:1560  royaltiesPercentageInBips = _royaltiesPercentageInBips */\n  sstore\n    /* \"contracts/NFTCollection.sol\":1570:1588  _royaltiesReceiver */\n  0x0d\n    /* \"contracts/NFTCollection.sol\":1570:1615  _royaltiesReceiver = initialRoyaltiesReceiver */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/NFTCollection.sol\":866:5585  contract Token is Ownable, ERC721Enumerable, ERC721URIStorage {... */\n  jump(tag_31)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_10:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/NFTCollection.sol\":866:5585  contract Token is Ownable, ERC721Enumerable, ERC721URIStorage {... */\ntag_14:\n  dup3\n  dup1\n  sload\n  tag_20\n  swap1\n  tag_21\n  jump\t// in\ntag_20:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_23\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_26)\ntag_23:\n  dup3\n  0x1f\n  lt\n  tag_24\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_26)\ntag_24:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_26\n  jumpi\n  swap2\n  dup3\n  add\ntag_25:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_26\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_25)\ntag_26:\n  pop\n  tag_27\n  swap3\n  swap2\n  pop\n  tag_28\n  jump\t// in\ntag_27:\n  pop\n  swap1\n  jump\t// out\ntag_28:\ntag_29:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_27\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_29)\n    /* \"#utility.yul\":14:365   */\ntag_3:\n    /* \"#utility.yul\":93:99   */\n  0x00\n    /* \"#utility.yul\":101:107   */\n  dup1\n    /* \"#utility.yul\":154:156   */\n  0x40\n    /* \"#utility.yul\":142:151   */\n  dup4\n    /* \"#utility.yul\":133:140   */\n  dup6\n    /* \"#utility.yul\":129:152   */\n  sub\n    /* \"#utility.yul\":125:157   */\n  slt\n    /* \"#utility.yul\":122:174   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":170:171   */\n  0x00\n    /* \"#utility.yul\":167:168   */\n  dup1\n    /* \"#utility.yul\":160:172   */\n  revert\n    /* \"#utility.yul\":122:174   */\ntag_33:\n    /* \"#utility.yul\":196:212   */\n  dup3\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":241:272   */\n  dup2\n  and\n    /* \"#utility.yul\":231:273   */\n  dup2\n  eq\n    /* \"#utility.yul\":221:291   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":287:288   */\n  0x00\n    /* \"#utility.yul\":284:285   */\n  dup1\n    /* \"#utility.yul\":277:289   */\n  revert\n    /* \"#utility.yul\":221:291   */\ntag_34:\n    /* \"#utility.yul\":355:357   */\n  0x20\n    /* \"#utility.yul\":340:358   */\n  swap4\n  swap1\n  swap4\n  add\n    /* \"#utility.yul\":334:359   */\n  mload\n    /* \"#utility.yul\":310:315   */\n  swap3\n  swap5\n    /* \"#utility.yul\":334:359   */\n  swap3\n  swap4\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":14:365   */\n  jump\t// out\n    /* \"#utility.yul\":370:750   */\ntag_21:\n    /* \"#utility.yul\":449:450   */\n  0x01\n    /* \"#utility.yul\":445:457   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":492:504   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":513:574   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":567:571   */\n  0x7f\n    /* \"#utility.yul\":559:565   */\n  dup3\n    /* \"#utility.yul\":555:572   */\n  and\n    /* \"#utility.yul\":545:572   */\n  swap2\n  pop\n    /* \"#utility.yul\":513:574   */\ntag_36:\n    /* \"#utility.yul\":620:622   */\n  0x20\n    /* \"#utility.yul\":612:618   */\n  dup3\n    /* \"#utility.yul\":609:623   */\n  lt\n    /* \"#utility.yul\":589:607   */\n  dup2\n    /* \"#utility.yul\":586:624   */\n  sub\n    /* \"#utility.yul\":583:744   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":666:676   */\n  0x4e487b71\n    /* \"#utility.yul\":661:664   */\n  0xe0\n    /* \"#utility.yul\":657:677   */\n  shl\n    /* \"#utility.yul\":654:655   */\n  0x00\n    /* \"#utility.yul\":647:678   */\n  mstore\n    /* \"#utility.yul\":701:705   */\n  0x22\n    /* \"#utility.yul\":698:699   */\n  0x04\n    /* \"#utility.yul\":691:706   */\n  mstore\n    /* \"#utility.yul\":729:733   */\n  0x24\n    /* \"#utility.yul\":726:727   */\n  0x00\n    /* \"#utility.yul\":719:734   */\n  revert\n    /* \"#utility.yul\":583:744   */\ntag_37:\n  pop\n    /* \"#utility.yul\":370:750   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_31:\n    /* \"contracts/NFTCollection.sol\":866:5585  contract Token is Ownable, ERC721Enumerable, ERC721URIStorage {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTCollection.sol\":866:5585  contract Token is Ownable, ERC721Enumerable, ERC721URIStorage {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xa3a51bd5\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xc87b56dd\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xd0def521\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0xa3a51bd5\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xb5143715\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup1\n      0x70a08231\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8462151c\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      0x23b872dd\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x32cb6b0c\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x32cb6b0c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x4f6ccce7\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2a55205a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x2f745c59\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2175c990\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/NFTCollection.sol\":3218:3448  function supportsInterface(bytes4 interfaceId)... */\n    tag_3:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"contracts/NFTCollection.sol\":3218:3448  function supportsInterface(bytes4 interfaceId)... */\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2488:2586  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4000:4217  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_5:\n      tag_44\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1692:1724   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1674:1725   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1662:1664   */\n      0x20\n        /* \"#utility.yul\":1647:1665   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4000:4217  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_38\n        /* \"#utility.yul\":1528:1731   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3538:3939  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_6:\n      tag_50\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1615:1726  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_7:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1702:1712  _allTokens */\n      0x09\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1702:1719  _allTokens.length */\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1615:1726  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_54:\n      mload(0x40)\n        /* \"#utility.yul\":2319:2344   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2307:2309   */\n      0x20\n        /* \"#utility.yul\":2292:2310   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1615:1726  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_38\n        /* \"#utility.yul\":2173:2350   */\n      jump\n        /* \"contracts/NFTCollection.sol\":1277:1318  uint256 public  royaltiesPercentageInBips */\n    tag_8:\n      tag_54\n      sload(0x0e)\n      dup2\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4727:5057  function transferFrom(... */\n    tag_9:\n      tag_50\n      tag_62\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n        /* \"contracts/NFTCollection.sol\":4552:4813  function royaltyInfo(uint256 _tokenId, uint256 _salePrice) external view... */\n    tag_10:\n      tag_65\n      tag_66\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3133:3165   */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":3115:3166   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3197:3199   */\n      0x20\n        /* \"#utility.yul\":3182:3200   */\n      dup4\n      add\n        /* \"#utility.yul\":3175:3209   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3088:3106   */\n      add\n        /* \"contracts/NFTCollection.sol\":4552:4813  function royaltyInfo(uint256 _tokenId, uint256 _salePrice) external view... */\n      tag_38\n        /* \"#utility.yul\":2941:3215   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1291:1544  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {... */\n    tag_11:\n      tag_54\n      tag_72\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"contracts/NFTCollection.sol\":1079:1120  uint256 public constant MAX_SUPPLY = 7777 */\n    tag_12:\n      tag_54\n        /* \"contracts/NFTCollection.sol\":1116:1120  7777 */\n      0x1e61\n        /* \"contracts/NFTCollection.sol\":1079:1120  uint256 public constant MAX_SUPPLY = 7777 */\n      dup2\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5123:5302  function safeTransferFrom(... */\n    tag_13:\n      tag_50\n      tag_79\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1798:2028  function tokenByIndex(uint256 index) public view virtual override returns (uint256) {... */\n    tag_14:\n      tag_54\n      tag_82\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2191:2426  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_15:\n      tag_44\n      tag_86\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1929:2134  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_16:\n      tag_54\n      tag_90\n      calldatasize\n      0x04\n      tag_91\n      jump\t// in\n    tag_90:\n      tag_92\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n      tag_50\n      tag_95\n      jump\t// in\n        /* \"contracts/NFTCollection.sol\":3668:4128  function tokensOfOwner(address _owner) external view... */\n    tag_18:\n      tag_96\n      tag_97\n      calldatasize\n      0x04\n      tag_91\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_19:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      jump(tag_44)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2650:2752  function symbol() public view virtual override returns (string memory) {... */\n    tag_20:\n      tag_40\n      tag_105\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4284:4437  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_21:\n      tag_50\n      tag_108\n      calldatasize\n      0x04\n      tag_109\n      jump\t// in\n    tag_108:\n      tag_110\n      jump\t// in\n        /* \"contracts/NFTCollection.sol\":2230:2327  function royaltiesReceiver() external returns(address) {... */\n    tag_22:\n        /* \"contracts/NFTCollection.sol\":2302:2320  _royaltiesReceiver */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0d))\n        /* \"contracts/NFTCollection.sol\":2230:2327  function royaltiesReceiver() external returns(address) {... */\n      jump(tag_44)\n        /* \"contracts/NFTCollection.sol\":2529:2752  function setRoyaltiesReceiver(address newRoyaltiesReceiver)... */\n    tag_23:\n      tag_50\n      tag_115\n      calldatasize\n      0x04\n      tag_91\n      jump\t// in\n    tag_115:\n      tag_116\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5368:5688  function safeTransferFrom(... */\n    tag_24:\n      tag_50\n      tag_118\n      calldatasize\n      0x04\n      tag_119\n      jump\t// in\n    tag_118:\n      tag_120\n      jump\t// in\n        /* \"contracts/NFTCollection.sol\":2983:3144  function tokenURI(uint256 tokenId)... */\n    tag_25:\n      tag_40\n      tag_122\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_122:\n      tag_123\n      jump\t// in\n        /* \"contracts/NFTCollection.sol\":5032:5582  function mint(address recipient, string memory hash)... */\n    tag_26:\n      tag_54\n      tag_126\n      calldatasize\n      0x04\n      tag_127\n      jump\t// in\n    tag_126:\n      tag_128\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4503:4665  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_27:\n      tag_34\n      tag_131\n      calldatasize\n      0x04\n      tag_132\n      jump\t// in\n    tag_131:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4600:4604  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4623:4641  _operatorApprovals */\n      0x06\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4623:4658  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4503:4665  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_28:\n      tag_50\n      tag_136\n      calldatasize\n      0x04\n      tag_91\n      jump\t// in\n    tag_136:\n      tag_137\n      jump\t// in\n        /* \"contracts/NFTCollection.sol\":3218:3448  function supportsInterface(bytes4 interfaceId)... */\n    tag_37:\n        /* \"contracts/NFTCollection.sol\":3329:3333  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/NFTCollection.sol\":3352:3393  interfaceId == type(IERC2981).interfaceId */\n      dup3\n      and\n      shl(0xe1, 0x152a902d)\n      eq\n      dup1\n        /* \"contracts/NFTCollection.sol\":3352:3441  interfaceId == type(IERC2981).interfaceId ||... */\n      tag_140\n      jumpi\n      pop\n        /* \"contracts/NFTCollection.sol\":3405:3441  super.supportsInterface(interfaceId) */\n      tag_140\n        /* \"contracts/NFTCollection.sol\":3429:3440  interfaceId */\n      dup3\n        /* \"contracts/NFTCollection.sol\":3405:3428  super.supportsInterface */\n      tag_141\n        /* \"contracts/NFTCollection.sol\":3405:3441  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_140:\n        /* \"contracts/NFTCollection.sol\":3345:3441  return interfaceId == type(IERC2981).interfaceId ||... */\n      swap3\n        /* \"contracts/NFTCollection.sol\":3218:3448  function supportsInterface(bytes4 interfaceId)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2488:2586  function name() public view virtual override returns (string memory) {... */\n    tag_41:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2542:2555  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2574:2579  _name */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2567:2579  return _name */\n      dup1\n      sload\n      tag_143\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_145\n      swap1\n      tag_144\n      jump\t// in\n    tag_145:\n      dup1\n      iszero\n      tag_146\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_147\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_146)\n    tag_147:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_148:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_148\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_146:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2488:2586  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4000:4217  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_47:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4076:4083  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4103:4119  _exists(tokenId) */\n      tag_150\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4111:4118  tokenId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4103:4110  _exists */\n      tag_151\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4103:4119  _exists(tokenId) */\n      jump\t// in\n    tag_150:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4095:4168  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7220:7222   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4095:4168  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7202:7223   */\n      mstore\n        /* \"#utility.yul\":7259:7261   */\n      0x2c\n        /* \"#utility.yul\":7239:7257   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7232:7262   */\n      mstore\n        /* \"#utility.yul\":7298:7332   */\n      0x4552433732313a20617070726f76656420717565727920666f72206e6f6e6578\n        /* \"#utility.yul\":7278:7296   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7271:7333   */\n      mstore\n      shl(0xa1, 0x34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":7349:7367   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7342:7384   */\n      mstore\n        /* \"#utility.yul\":7401:7420   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4095:4168  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4186:4210  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4186:4201  _tokenApprovals */\n      0x05\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4186:4210  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4000:4217  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3538:3939  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_53:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3618:3631  address owner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3634:3657  ERC721.ownerOf(tokenId) */\n      tag_156\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3649:3656  tokenId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3634:3648  ERC721.ownerOf */\n      tag_87\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3634:3657  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_156:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3618:3657  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3681:3686  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3675:3686  to != owner */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3675:3677  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3675:3686  to != owner */\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3667:3724  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7633:7635   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3667:3724  require(to != owner, \"ERC721: approval to current owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7615:7636   */\n      mstore\n        /* \"#utility.yul\":7672:7674   */\n      0x21\n        /* \"#utility.yul\":7652:7670   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7645:7675   */\n      mstore\n        /* \"#utility.yul\":7711:7745   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":7691:7709   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7684:7746   */\n      mstore\n      shl(0xf9, 0x39)\n        /* \"#utility.yul\":7762:7780   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7755:7786   */\n      mstore\n        /* \"#utility.yul\":7803:7822   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3667:3724  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_153\n        /* \"#utility.yul\":7431:7828   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3667:3724  require(to != owner, \"ERC721: approval to current owner\") */\n    tag_157:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3756:3777  _msgSender() == owner */\n      dup3\n      and\n      eq\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3756:3818  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      tag_163\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3781:3818  isApprovedForAll(owner, _msgSender()) */\n      tag_163\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3798:3803  owner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4503:4665  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_131\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3781:3818  isApprovedForAll(owner, _msgSender()) */\n    tag_163:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3735:3900  require(... */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8035:8037   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3735:3900  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8017:8038   */\n      mstore\n        /* \"#utility.yul\":8074:8076   */\n      0x38\n        /* \"#utility.yul\":8054:8072   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8047:8077   */\n      mstore\n        /* \"#utility.yul\":8113:8147   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77\n        /* \"#utility.yul\":8093:8111   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8086:8148   */\n      mstore\n        /* \"#utility.yul\":8184:8210   */\n      0x6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000\n        /* \"#utility.yul\":8164:8182   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8157:8211   */\n      mstore\n        /* \"#utility.yul\":8228:8247   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3735:3900  require(... */\n      tag_153\n        /* \"#utility.yul\":7833:8253   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3735:3900  require(... */\n    tag_165:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3911:3932  _approve(to, tokenId) */\n      tag_168\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3920:3922  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3924:3931  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3911:3919  _approve */\n      tag_169\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3911:3932  _approve(to, tokenId) */\n      jump\t// in\n    tag_168:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3608:3939  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3538:3939  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4727:5057  function transferFrom(... */\n    tag_64:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4916:4957  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_172\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4949:4956  tokenId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4916:4934  _isApprovedOrOwner */\n      tag_174\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4916:4957  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_172:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4908:5011  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_177\n      jump\t// in\n    tag_175:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5022:5050  _transfer(from, to, tokenId) */\n      tag_168\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5032:5036  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5038:5040  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5042:5049  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5022:5031  _transfer */\n      tag_179\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5022:5050  _transfer(from, to, tokenId) */\n      jump\t// in\n        /* \"contracts/NFTCollection.sol\":4552:4813  function royaltyInfo(uint256 _tokenId, uint256 _salePrice) external view... */\n    tag_68:\n        /* \"contracts/NFTCollection.sol\":4638:4654  address receiver */\n      0x00\n        /* \"contracts/NFTCollection.sol\":4656:4677  uint256 royaltyAmount */\n      dup1\n        /* \"contracts/NFTCollection.sol\":4689:4707  uint256 _royalties */\n      0x00\n        /* \"contracts/NFTCollection.sol\":4753:4756  100 */\n      0x64\n        /* \"contracts/NFTCollection.sol\":4724:4749  royaltiesPercentageInBips */\n      sload(0x0e)\n        /* \"contracts/NFTCollection.sol\":4711:4721  _salePrice */\n      dup6\n        /* \"contracts/NFTCollection.sol\":4711:4749  _salePrice * royaltiesPercentageInBips */\n      tag_181\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n        /* \"contracts/NFTCollection.sol\":4710:4756  (_salePrice * royaltiesPercentageInBips) / 100 */\n      tag_183\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n        /* \"contracts/NFTCollection.sol\":4775:4793  _royaltiesReceiver */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0d))\n      swap7\n        /* \"contracts/NFTCollection.sol\":4689:4756  uint256 _royalties = (_salePrice * royaltiesPercentageInBips) / 100 */\n      swap1\n      swap6\n      pop\n        /* \"contracts/NFTCollection.sol\":4552:4813  function royaltyInfo(uint256 _tokenId, uint256 _salePrice) external view... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1291:1544  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {... */\n    tag_73:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1388:1395  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1423:1446  ERC721.balanceOf(owner) */\n      tag_186\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1440:1445  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1423:1439  ERC721.balanceOf */\n      tag_92\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1423:1446  ERC721.balanceOf(owner) */\n      jump\t// in\n    tag_186:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1415:1420  index */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1415:1446  index < ERC721.balanceOf(owner) */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1407:1494  require(index < ERC721.balanceOf(owner), \"ERC721Enumerable: owner index out of bounds\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9440:9442   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1407:1494  require(index < ERC721.balanceOf(owner), \"ERC721Enumerable: owner index out of bounds\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9422:9443   */\n      mstore\n        /* \"#utility.yul\":9479:9481   */\n      0x2b\n        /* \"#utility.yul\":9459:9477   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9452:9482   */\n      mstore\n        /* \"#utility.yul\":9518:9552   */\n      0x455243373231456e756d657261626c653a206f776e657220696e646578206f75\n        /* \"#utility.yul\":9498:9516   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9491:9553   */\n      mstore\n      shl(0xa8, 0x74206f6620626f756e6473)\n        /* \"#utility.yul\":9569:9587   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9562:9603   */\n      mstore\n        /* \"#utility.yul\":9620:9639   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1407:1494  require(index < ERC721.balanceOf(owner), \"ERC721Enumerable: owner index out of bounds\") */\n      tag_153\n        /* \"#utility.yul\":9238:9645   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1407:1494  require(index < ERC721.balanceOf(owner), \"ERC721Enumerable: owner index out of bounds\") */\n    tag_187:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1511:1530  _ownedTokens[owner] */\n      swap2\n      swap1\n      swap2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1511:1523  _ownedTokens */\n      0x07\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1511:1530  _ownedTokens[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1511:1537  _ownedTokens[owner][index] */\n      swap4\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1291:1544  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5123:5302  function safeTransferFrom(... */\n    tag_80:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5256:5295  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_168\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5273:5277  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5279:5281  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5283:5290  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5256:5295  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5256:5272  safeTransferFrom */\n      tag_120\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5256:5295  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1798:2028  function tokenByIndex(uint256 index) public view virtual override returns (uint256) {... */\n    tag_83:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1873:1880  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1908:1938  ERC721Enumerable.totalSupply() */\n      tag_193\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1702:1712  _allTokens */\n      0x09\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1702:1719  _allTokens.length */\n      sload\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1615:1726  function totalSupply() public view virtual override returns (uint256) {... */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1908:1938  ERC721Enumerable.totalSupply() */\n    tag_193:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1900:1905  index */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1900:1938  index < ERC721Enumerable.totalSupply() */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1892:1987  require(index < ERC721Enumerable.totalSupply(), \"ERC721Enumerable: global index out of bounds\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9852:9854   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1892:1987  require(index < ERC721Enumerable.totalSupply(), \"ERC721Enumerable: global index out of bounds\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9834:9855   */\n      mstore\n        /* \"#utility.yul\":9891:9893   */\n      0x2c\n        /* \"#utility.yul\":9871:9889   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9864:9894   */\n      mstore\n        /* \"#utility.yul\":9930:9964   */\n      0x455243373231456e756d657261626c653a20676c6f62616c20696e646578206f\n        /* \"#utility.yul\":9910:9928   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9903:9965   */\n      mstore\n      shl(0xa0, 0x7574206f6620626f756e6473)\n        /* \"#utility.yul\":9981:9999   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9974:10016   */\n      mstore\n        /* \"#utility.yul\":10033:10052   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1892:1987  require(index < ERC721Enumerable.totalSupply(), \"ERC721Enumerable: global index out of bounds\") */\n      tag_153\n        /* \"#utility.yul\":9650:10058   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1892:1987  require(index < ERC721Enumerable.totalSupply(), \"ERC721Enumerable: global index out of bounds\") */\n    tag_194:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2004:2014  _allTokens */\n      0x09\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2015:2020  index */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2004:2021  _allTokens[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_198\n      jumpi\n      tag_198\n      tag_199\n      jump\t// in\n    tag_198:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1997:2021  return _allTokens[index] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1798:2028  function tokenByIndex(uint256 index) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2191:2426  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_87:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2263:2270  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2298:2314  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2298:2305  _owners */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2298:2314  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2324:2397  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10397:10399   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2324:2397  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10379:10400   */\n      mstore\n        /* \"#utility.yul\":10436:10438   */\n      0x29\n        /* \"#utility.yul\":10416:10434   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10409:10439   */\n      mstore\n        /* \"#utility.yul\":10475:10509   */\n      0x4552433732313a206f776e657220717565727920666f72206e6f6e6578697374\n        /* \"#utility.yul\":10455:10473   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10448:10510   */\n      mstore\n      shl(0xb9, 0x32b73a103a37b5b2b7)\n        /* \"#utility.yul\":10526:10544   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10519:10558   */\n      mstore\n        /* \"#utility.yul\":10575:10594   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2324:2397  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      tag_153\n        /* \"#utility.yul\":10195:10600   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1929:2134  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_92:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2001:2008  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2028:2047  owner != address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2020:2094  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10807:10809   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2020:2094  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10789:10810   */\n      mstore\n        /* \"#utility.yul\":10846:10848   */\n      0x2a\n        /* \"#utility.yul\":10826:10844   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10819:10849   */\n      mstore\n        /* \"#utility.yul\":10885:10919   */\n      0x4552433732313a2062616c616e636520717565727920666f7220746865207a65\n        /* \"#utility.yul\":10865:10883   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10858:10920   */\n      mstore\n      shl(0xb0, 0x726f2061646472657373)\n        /* \"#utility.yul\":10936:10954   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10929:10969   */\n      mstore\n        /* \"#utility.yul\":10986:11005   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2020:2094  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      tag_153\n        /* \"#utility.yul\":10605:11011   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2020:2094  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n    tag_206:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2111:2127  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2111:2120  _balances */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2111:2127  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1929:2134  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_95:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_212\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_214\n      jump\t// in\n    tag_212:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_216\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_217\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_216:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/NFTCollection.sol\":3668:4128  function tokensOfOwner(address _owner) external view... */\n    tag_98:\n        /* \"contracts/NFTCollection.sol\":3733:3761  uint256[] memory ownerTokens */\n      0x60\n        /* \"contracts/NFTCollection.sol\":3774:3792  uint256 tokenCount */\n      0x00\n        /* \"contracts/NFTCollection.sol\":3795:3812  balanceOf(_owner) */\n      tag_219\n        /* \"contracts/NFTCollection.sol\":3805:3811  _owner */\n      dup4\n        /* \"contracts/NFTCollection.sol\":3795:3804  balanceOf */\n      tag_92\n        /* \"contracts/NFTCollection.sol\":3795:3812  balanceOf(_owner) */\n      jump\t// in\n    tag_219:\n        /* \"contracts/NFTCollection.sol\":3774:3812  uint256 tokenCount = balanceOf(_owner) */\n      swap1\n      pop\n        /* \"contracts/NFTCollection.sol\":3822:3845  uint256[] memory result */\n      0x00\n        /* \"contracts/NFTCollection.sol\":3862:3872  tokenCount */\n      dup2\n        /* \"contracts/NFTCollection.sol\":3848:3873  new uint256[](tokenCount) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_221\n      jumpi\n      tag_221\n      tag_222\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_223\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_223:\n      pop\n        /* \"contracts/NFTCollection.sol\":3822:3873  uint256[] memory result = new uint256[](tokenCount) */\n      swap1\n      pop\n        /* \"contracts/NFTCollection.sol\":3888:3898  tokenCount */\n      dup2\n        /* \"contracts/NFTCollection.sol\":3902:3903  0 */\n      0x00\n        /* \"contracts/NFTCollection.sol\":3888:3903  tokenCount == 0 */\n      sub\n        /* \"contracts/NFTCollection.sol\":3884:4122  if (tokenCount == 0) {... */\n      tag_224\n      jumpi\n      pop\n      pop\n        /* \"contracts/NFTCollection.sol\":3926:3942  new uint256[](0) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/NFTCollection.sol\":3940:3941  0 */\n      0x00\n        /* \"contracts/NFTCollection.sol\":3926:3942  new uint256[](0) */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      swap3\n        /* \"contracts/NFTCollection.sol\":3919:3942  return new uint256[](0) */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTCollection.sol\":3668:4128  function tokensOfOwner(address _owner) external view... */\n      jump\t// out\n        /* \"contracts/NFTCollection.sol\":3884:4122  if (tokenCount == 0) {... */\n    tag_224:\n        /* \"contracts/NFTCollection.sol\":3978:3987  uint256 i */\n      0x00\n        /* \"contracts/NFTCollection.sol\":3973:4085  for (uint256 i=0; i<tokenCount; i++) {... */\n    tag_229:\n        /* \"contracts/NFTCollection.sol\":3993:4003  tokenCount */\n      dup3\n        /* \"contracts/NFTCollection.sol\":3991:3992  i */\n      dup2\n        /* \"contracts/NFTCollection.sol\":3991:4003  i<tokenCount */\n      lt\n        /* \"contracts/NFTCollection.sol\":3973:4085  for (uint256 i=0; i<tokenCount; i++) {... */\n      iszero\n      tag_230\n      jumpi\n        /* \"contracts/NFTCollection.sol\":4040:4070  tokenOfOwnerByIndex(_owner, i) */\n      tag_232\n        /* \"contracts/NFTCollection.sol\":4060:4066  _owner */\n      dup6\n        /* \"contracts/NFTCollection.sol\":4068:4069  i */\n      dup3\n        /* \"contracts/NFTCollection.sol\":4040:4059  tokenOfOwnerByIndex */\n      tag_73\n        /* \"contracts/NFTCollection.sol\":4040:4070  tokenOfOwnerByIndex(_owner, i) */\n      jump\t// in\n    tag_232:\n        /* \"contracts/NFTCollection.sol\":4028:4034  result */\n      dup3\n        /* \"contracts/NFTCollection.sol\":4035:4036  i */\n      dup3\n        /* \"contracts/NFTCollection.sol\":4028:4037  result[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_234\n      jumpi\n      tag_234\n      tag_199\n      jump\t// in\n    tag_234:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/NFTCollection.sol\":4028:4070  result[i] = tokenOfOwnerByIndex(_owner, i) */\n      mstore\n        /* \"contracts/NFTCollection.sol\":4005:4008  i++ */\n      dup1\n      tag_235\n      dup2\n      tag_236\n      jump\t// in\n    tag_235:\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTCollection.sol\":3973:4085  for (uint256 i=0; i<tokenCount; i++) {... */\n      jump(tag_229)\n    tag_230:\n      pop\n        /* \"contracts/NFTCollection.sol\":4105:4111  result */\n      swap4\n        /* \"contracts/NFTCollection.sol\":3668:4128  function tokensOfOwner(address _owner) external view... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2650:2752  function symbol() public view virtual override returns (string memory) {... */\n    tag_105:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2706:2719  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2738:2745  _symbol */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2731:2745  return _symbol */\n      dup1\n      sload\n      tag_143\n      swap1\n      tag_144\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4284:4437  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_110:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4378:4430  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_245\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4411:4419  operator */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4421:4429  approved */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4378:4396  _setApprovalForAll */\n      tag_247\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4378:4430  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_245:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4284:4437  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTCollection.sol\":2529:2752  function setRoyaltiesReceiver(address newRoyaltiesReceiver)... */\n    tag_116:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_252\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_214\n      jump\t// in\n    tag_252:\n        /* \"contracts/NFTCollection.sol\":2654:2672  _royaltiesReceiver */\n      sload(0x0d)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/NFTCollection.sol\":2630:2672  newRoyaltiesReceiver != _royaltiesReceiver */\n      swap1\n      dup3\n      and\n      sub\n        /* \"contracts/NFTCollection.sol\":2622:2673  require(newRoyaltiesReceiver != _royaltiesReceiver) */\n      tag_255\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_255:\n        /* \"contracts/NFTCollection.sol\":2704:2722  _royaltiesReceiver */\n      0x0d\n        /* \"contracts/NFTCollection.sol\":2704:2745  _royaltiesReceiver = newRoyaltiesReceiver */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/NFTCollection.sol\":2529:2752  function setRoyaltiesReceiver(address newRoyaltiesReceiver)... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5368:5688  function safeTransferFrom(... */\n    tag_120:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5537:5578  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_257\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5570:5577  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5537:5555  _isApprovedOrOwner */\n      tag_174\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5537:5578  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_257:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5529:5632  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\") */\n      tag_259\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_177\n      jump\t// in\n    tag_259:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5642:5681  _safeTransfer(from, to, tokenId, _data) */\n      tag_261\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5656:5660  from */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5662:5664  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5666:5673  tokenId */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5675:5680  _data */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5642:5655  _safeTransfer */\n      tag_262\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5642:5681  _safeTransfer(from, to, tokenId, _data) */\n      jump\t// in\n    tag_261:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5368:5688  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTCollection.sol\":2983:3144  function tokenURI(uint256 tokenId)... */\n    tag_123:\n        /* \"contracts/NFTCollection.sol\":3082:3095  string memory */\n      0x60\n        /* \"contracts/NFTCollection.sol\":3114:3137  super.tokenURI(tokenId) */\n      tag_140\n        /* \"contracts/NFTCollection.sol\":3129:3136  tokenId */\n      dup3\n        /* \"contracts/NFTCollection.sol\":3114:3128  super.tokenURI */\n      tag_265\n        /* \"contracts/NFTCollection.sol\":3114:3137  super.tokenURI(tokenId) */\n      jump\t// in\n        /* \"contracts/NFTCollection.sol\":5032:5582  function mint(address recipient, string memory hash)... */\n    tag_128:\n        /* \"contracts/NFTCollection.sol\":5121:5136  uint256 tokenId */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1108:1114  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_269\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_214\n      jump\t// in\n    tag_269:\n        /* \"contracts/NFTCollection.sol\":1116:1120  7777 */\n      0x1e61\n        /* \"contracts/NFTCollection.sol\":5160:5173  totalSupply() */\n      tag_272\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1702:1712  _allTokens */\n      0x09\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1702:1719  _allTokens.length */\n      sload\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1615:1726  function totalSupply() public view virtual override returns (uint256) {... */\n      jump\n        /* \"contracts/NFTCollection.sol\":5160:5173  totalSupply() */\n    tag_272:\n        /* \"contracts/NFTCollection.sol\":5160:5187  totalSupply() <= MAX_SUPPLY */\n      gt\n      iszero\n        /* \"contracts/NFTCollection.sol\":5152:5209  require(totalSupply() <= MAX_SUPPLY, \"All tokens minted\") */\n      tag_273\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11719:11721   */\n      0x20\n        /* \"contracts/NFTCollection.sol\":5152:5209  require(totalSupply() <= MAX_SUPPLY, \"All tokens minted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11701:11722   */\n      mstore\n        /* \"#utility.yul\":11758:11760   */\n      0x11\n        /* \"#utility.yul\":11738:11756   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11731:11761   */\n      mstore\n      shl(0x7a, 0x105b1b081d1bdad95b9cc81b5a5b9d1959)\n        /* \"#utility.yul\":11777:11795   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11770:11817   */\n      mstore\n        /* \"#utility.yul\":11834:11852   */\n      0x64\n      add\n        /* \"contracts/NFTCollection.sol\":5152:5209  require(totalSupply() <= MAX_SUPPLY, \"All tokens minted\") */\n      tag_153\n        /* \"#utility.yul\":11517:11858   */\n      jump\n        /* \"contracts/NFTCollection.sol\":5152:5209  require(totalSupply() <= MAX_SUPPLY, \"All tokens minted\") */\n    tag_273:\n        /* \"contracts/NFTCollection.sol\":5248:5249  0 */\n      0x00\n        /* \"contracts/NFTCollection.sol\":5233:5237  hash */\n      dup3\n        /* \"contracts/NFTCollection.sol\":5227:5245  bytes(hash).length */\n      mload\n        /* \"contracts/NFTCollection.sol\":5227:5249  bytes(hash).length > 0 */\n      gt\n        /* \"contracts/NFTCollection.sol\":5219:5250  require(bytes(hash).length > 0) */\n      tag_276\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_276:\n        /* \"contracts/NFTCollection.sol\":5299:5305  hashes */\n      0x0c\n        /* \"contracts/NFTCollection.sol\":5306:5310  hash */\n      dup3\n        /* \"contracts/NFTCollection.sol\":5299:5311  hashes[hash] */\n      mload(0x40)\n      tag_277\n      swap2\n      swap1\n      tag_278\n      jump\t// in\n    tag_277:\n      swap1\n      dup2\n      mstore\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      0x01\n        /* \"contracts/NFTCollection.sol\":5299:5316  hashes[hash] != 1 */\n      sub\n        /* \"contracts/NFTCollection.sol\":5291:5317  require(hashes[hash] != 1) */\n      tag_279\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_279:\n        /* \"contracts/NFTCollection.sol\":5380:5381  1 */\n      0x01\n        /* \"contracts/NFTCollection.sol\":5365:5371  hashes */\n      0x0c\n        /* \"contracts/NFTCollection.sol\":5372:5376  hash */\n      dup4\n        /* \"contracts/NFTCollection.sol\":5365:5377  hashes[hash] */\n      mload(0x40)\n      tag_280\n      swap2\n      swap1\n      tag_278\n      jump\t// in\n    tag_280:\n      swap1\n      dup2\n      mstore\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      keccak256\n        /* \"contracts/NFTCollection.sol\":5365:5381  hashes[hash] = 1 */\n      dup1\n      sload\n      0xff\n      swap3\n      swap1\n      swap3\n      and\n      not(0xff)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/NFTCollection.sol\":5365:5377  hashes[hash] */\n      0x00\n        /* \"contracts/NFTCollection.sol\":5411:5424  totalSupply() */\n      tag_281\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1702:1712  _allTokens */\n      0x09\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1702:1719  _allTokens.length */\n      sload\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1615:1726  function totalSupply() public view virtual override returns (uint256) {... */\n      jump\n        /* \"contracts/NFTCollection.sol\":5411:5424  totalSupply() */\n    tag_281:\n        /* \"contracts/NFTCollection.sol\":5411:5428  totalSupply() + 1 */\n      tag_282\n      swap1\n        /* \"contracts/NFTCollection.sol\":5427:5428  1 */\n      0x01\n        /* \"contracts/NFTCollection.sol\":5411:5428  totalSupply() + 1 */\n      tag_283\n      jump\t// in\n    tag_282:\n        /* \"contracts/NFTCollection.sol\":5391:5428  uint256 newItemId = totalSupply() + 1 */\n      swap1\n      pop\n        /* \"contracts/NFTCollection.sol\":5438:5469  _safeMint(recipient, newItemId) */\n      tag_284\n        /* \"contracts/NFTCollection.sol\":5448:5457  recipient */\n      dup5\n        /* \"contracts/NFTCollection.sol\":5459:5468  newItemId */\n      dup3\n        /* \"contracts/NFTCollection.sol\":5438:5447  _safeMint */\n      tag_285\n        /* \"contracts/NFTCollection.sol\":5438:5469  _safeMint(recipient, newItemId) */\n      jump\t// in\n    tag_284:\n        /* \"contracts/NFTCollection.sol\":5479:5508  _setTokenURI(newItemId, hash) */\n      tag_286\n        /* \"contracts/NFTCollection.sol\":5492:5501  newItemId */\n      dup2\n        /* \"contracts/NFTCollection.sol\":5503:5507  hash */\n      dup5\n        /* \"contracts/NFTCollection.sol\":5479:5491  _setTokenURI */\n      tag_287\n        /* \"contracts/NFTCollection.sol\":5479:5508  _setTokenURI(newItemId, hash) */\n      jump\t// in\n    tag_286:\n        /* \"contracts/NFTCollection.sol\":5523:5549  Mint(newItemId, recipient) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":12451:12476   */\n      dup3\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12512:12544   */\n      dup7\n      and\n        /* \"#utility.yul\":12507:12509   */\n      0x20\n        /* \"#utility.yul\":12492:12510   */\n      dup3\n      add\n        /* \"#utility.yul\":12485:12545   */\n      mstore\n        /* \"contracts/NFTCollection.sol\":5523:5549  Mint(newItemId, recipient) */\n      0xf3cea5493d790af0133817606f7350a91d7f154ea52eaa79d179d4d231e50102\n      swap2\n        /* \"#utility.yul\":12424:12442   */\n      add\n        /* \"contracts/NFTCollection.sol\":5523:5549  Mint(newItemId, recipient) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/NFTCollection.sol\":5566:5575  newItemId */\n      swap4\n        /* \"contracts/NFTCollection.sol\":5032:5582  function mint(address recipient, string memory hash)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_137:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_294\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_214\n      jump\t// in\n    tag_294:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_297\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12758:12760   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12740:12761   */\n      mstore\n        /* \"#utility.yul\":12797:12799   */\n      0x26\n        /* \"#utility.yul\":12777:12795   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12770:12800   */\n      mstore\n        /* \"#utility.yul\":12836:12870   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":12816:12834   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12809:12871   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":12887:12905   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12880:12916   */\n      mstore\n        /* \"#utility.yul\":12933:12952   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_153\n        /* \"#utility.yul\":12556:12958   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_297:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_300\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_217\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_300:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":990:1212  function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {... */\n    tag_141:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1092:1096  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1115:1165  interfaceId == type(IERC721Enumerable).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x780e9d63)\n      eq\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1115:1205  interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId) */\n      tag_140\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1169:1205  super.supportsInterface(interfaceId) */\n      tag_140\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1193:1204  interfaceId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1169:1192  super.supportsInterface */\n      tag_304\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1169:1205  super.supportsInterface(interfaceId) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7160:7285  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_151:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7225:7229  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7248:7255  _owners */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7248:7278  _owners[tokenId] != address(0) */\n      iszero\n      iszero\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7160:7285  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11169:11340  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_169:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11243:11267  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11243:11258  _tokenApprovals */\n      0x05\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11243:11267  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11243:11272  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11243:11267  _tokenApprovals[tokenId] */\n      dup2\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11296:11319  ERC721.ownerOf(tokenId) */\n      tag_308\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11243:11267  _tokenApprovals[tokenId] */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11296:11310  ERC721.ownerOf */\n      tag_87\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11296:11319  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_308:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11287:11333  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11169:11340  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7443:7787  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_174:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7536:7540  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7560:7576  _exists(tokenId) */\n      tag_310\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7568:7575  tokenId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7560:7567  _exists */\n      tag_151\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7560:7576  _exists(tokenId) */\n      jump\t// in\n    tag_310:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7552:7625  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      tag_311\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13165:13167   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7552:7625  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13147:13168   */\n      mstore\n        /* \"#utility.yul\":13204:13206   */\n      0x2c\n        /* \"#utility.yul\":13184:13202   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13177:13207   */\n      mstore\n        /* \"#utility.yul\":13243:13277   */\n      0x4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578\n        /* \"#utility.yul\":13223:13241   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13216:13278   */\n      mstore\n      shl(0xa1, 0x34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":13294:13312   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13287:13329   */\n      mstore\n        /* \"#utility.yul\":13346:13365   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7552:7625  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      tag_153\n        /* \"#utility.yul\":12963:13371   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7552:7625  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n    tag_311:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7635:7648  address owner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7651:7674  ERC721.ownerOf(tokenId) */\n      tag_314\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7666:7673  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7651:7665  ERC721.ownerOf */\n      tag_87\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7651:7674  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_314:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7635:7674  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7703:7708  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7692:7708  spender == owner */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7692:7699  spender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7692:7708  spender == owner */\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7692:7744  spender == owner || isApprovedForAll(owner, spender) */\n      dup1\n      tag_316\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      dup1\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4600:4604  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4623:4641  _operatorApprovals */\n      0x06\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4623:4658  _operatorApprovals[owner][operator] */\n      swap4\n      dup9\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7712:7744  isApprovedForAll(owner, spender) */\n    tag_316:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7692:7779  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n      dup1\n      tag_317\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7772:7779  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7748:7779  getApproved(tokenId) == spender */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7748:7768  getApproved(tokenId) */\n      tag_318\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7760:7767  tokenId */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7748:7759  getApproved */\n      tag_47\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7748:7768  getApproved(tokenId) */\n      jump\t// in\n    tag_318:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7748:7779  getApproved(tokenId) == spender */\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7692:7779  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n    tag_317:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7684:7780  return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender) */\n      swap5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7443:7787  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10453:11058  function _transfer(... */\n    tag_179:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10607:10611  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10580:10611  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10580:10603  ERC721.ownerOf(tokenId) */\n      tag_320\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10595:10602  tokenId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10580:10594  ERC721.ownerOf */\n      tag_87\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10580:10603  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_320:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10580:10611  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10572:10653  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_321\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13578:13580   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10572:10653  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13560:13581   */\n      mstore\n        /* \"#utility.yul\":13617:13619   */\n      0x25\n        /* \"#utility.yul\":13597:13615   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13590:13620   */\n      mstore\n        /* \"#utility.yul\":13656:13690   */\n      0x4552433732313a207472616e736665722066726f6d20696e636f727265637420\n        /* \"#utility.yul\":13636:13654   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13629:13691   */\n      mstore\n      shl(0xd9, 0x37bbb732b9)\n        /* \"#utility.yul\":13707:13725   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13700:13735   */\n      mstore\n        /* \"#utility.yul\":13752:13771   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10572:10653  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_153\n        /* \"#utility.yul\":13376:13777   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10572:10653  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n    tag_321:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10671:10687  to != address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10663:10728  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_324\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13984:13986   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10663:10728  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13966:13987   */\n      mstore\n        /* \"#utility.yul\":14023:14025   */\n      0x24\n        /* \"#utility.yul\":14003:14021   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":13996:14026   */\n      mstore\n        /* \"#utility.yul\":14062:14096   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":14042:14060   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14035:14097   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":14113:14131   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14106:14140   */\n      mstore\n        /* \"#utility.yul\":14157:14176   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10663:10728  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_153\n        /* \"#utility.yul\":13782:14182   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10663:10728  require(to != address(0), \"ERC721: transfer to the zero address\") */\n    tag_324:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10739:10778  _beforeTokenTransfer(from, to, tokenId) */\n      tag_327\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10760:10764  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10766:10768  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10770:10777  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10739:10759  _beforeTokenTransfer */\n      tag_328\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10739:10778  _beforeTokenTransfer(from, to, tokenId) */\n      jump\t// in\n    tag_327:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10840:10869  _approve(address(0), tokenId) */\n      tag_329\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10857:10858  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10861:10868  tokenId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10840:10848  _approve */\n      tag_169\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10840:10869  _approve(address(0), tokenId) */\n      jump\t// in\n    tag_329:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10880:10895  _balances[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10880:10889  _balances */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10880:10895  _balances[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10880:10900  _balances[from] -= 1 */\n      dup1\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10899:10900  1 */\n      0x01\n      swap3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10880:10895  _balances[from] */\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10880:10900  _balances[from] -= 1 */\n      tag_330\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10899:10900  1 */\n      dup5\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10880:10900  _balances[from] -= 1 */\n      tag_331\n      jump\t// in\n    tag_330:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10910:10923  _balances[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10910:10919  _balances */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10910:10923  _balances[to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10910:10928  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10927:10928  1 */\n      0x01\n      swap3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10910:10923  _balances[to] */\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10910:10928  _balances[to] += 1 */\n      tag_332\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10927:10928  1 */\n      dup5\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10910:10928  _balances[to] += 1 */\n      tag_283\n      jump\t// in\n    tag_332:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10938:10954  _owners[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10938:10945  _owners */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10938:10954  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10938:10959  _owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10975:11002  Transfer(from, to, tokenId) */\n      swap2\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10938:10954  _owners[tokenId] */\n      dup5\n      swap4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10975:11002  Transfer(from, to, tokenId) */\n      swap2\n      dup8\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3608:3939  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3538:3939  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_217:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11475:11782  function _setApprovalForAll(... */\n    tag_247:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11625:11633  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11616:11633  owner != operator */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11616:11621  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11616:11633  owner != operator */\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11608:11663  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_337\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14519:14521   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11608:11663  require(owner != operator, \"ERC721: approve to caller\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14501:14522   */\n      mstore\n        /* \"#utility.yul\":14558:14560   */\n      0x19\n        /* \"#utility.yul\":14538:14556   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14531:14561   */\n      mstore\n        /* \"#utility.yul\":14597:14624   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":14577:14595   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14570:14625   */\n      mstore\n        /* \"#utility.yul\":14642:14660   */\n      0x64\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11608:11663  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_153\n        /* \"#utility.yul\":14317:14666   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11608:11663  require(owner != operator, \"ERC721: approve to caller\") */\n    tag_337:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11673:11698  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11673:11691  _operatorApprovals */\n      0x06\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11673:11698  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11673:11708  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11673:11719  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11734:11775  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap2\n      dup3\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11734:11775  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11734:11775  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11475:11782  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6550:6857  function _safeTransfer(... */\n    tag_262:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6701:6729  _transfer(from, to, tokenId) */\n      tag_342\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6711:6715  from */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6717:6719  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6721:6728  tokenId */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6701:6710  _transfer */\n      tag_179\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6701:6729  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_342:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6747:6795  _checkOnERC721Received(from, to, tokenId, _data) */\n      tag_343\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6770:6774  from */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6776:6778  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6780:6787  tokenId */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6789:6794  _data */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6747:6769  _checkOnERC721Received */\n      tag_344\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6747:6795  _checkOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_343:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6739:6850  require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_261\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_347\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":467:1130  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_265:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":540:553  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":573:589  _exists(tokenId) */\n      tag_349\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":581:588  tokenId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":573:580  _exists */\n      tag_151\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":573:589  _exists(tokenId) */\n      jump\t// in\n    tag_349:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":565:643  require(_exists(tokenId), \"ERC721URIStorage: URI query for nonexistent token\") */\n      tag_350\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15292:15294   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":565:643  require(_exists(tokenId), \"ERC721URIStorage: URI query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15274:15295   */\n      mstore\n        /* \"#utility.yul\":15331:15333   */\n      0x31\n        /* \"#utility.yul\":15311:15329   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15304:15334   */\n      mstore\n        /* \"#utility.yul\":15370:15404   */\n      0x45524337323155524953746f726167653a2055524920717565727920666f7220\n        /* \"#utility.yul\":15350:15368   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15343:15405   */\n      mstore\n      shl(0x79, 0x3737b732bc34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":15421:15439   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15414:15461   */\n      mstore\n        /* \"#utility.yul\":15478:15497   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":565:643  require(_exists(tokenId), \"ERC721URIStorage: URI query for nonexistent token\") */\n      tag_153\n        /* \"#utility.yul\":15090:15503   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":565:643  require(_exists(tokenId), \"ERC721URIStorage: URI query for nonexistent token\") */\n    tag_350:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":654:677  string memory _tokenURI */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":680:699  _tokenURIs[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":680:690  _tokenURIs */\n      0x0b\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":680:699  _tokenURIs[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":654:699  string memory _tokenURI = _tokenURIs[tokenId] */\n      dup1\n      sload\n      tag_353\n      swap1\n      tag_144\n      jump\t// in\n    tag_353:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_354\n      swap1\n      tag_144\n      jump\t// in\n    tag_354:\n      dup1\n      iszero\n      tag_355\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_356\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_355)\n    tag_356:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_357:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_357\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_355:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":709:727  string memory base */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":730:740  _baseURI() */\n      tag_358\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":730:738  _baseURI */\n      tag_359\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":730:740  _baseURI() */\n      jump\t// in\n    tag_358:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":709:740  string memory base = _baseURI() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":819:823  base */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":813:831  bytes(base).length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":835:836  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":813:836  bytes(base).length == 0 */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":809:879  if (bytes(base).length == 0) {... */\n      tag_360\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":859:868  _tokenURI */\n      swap3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":467:1130  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":809:879  if (bytes(base).length == 0) {... */\n    tag_360:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":981:1004  bytes(_tokenURI).length */\n      dup2\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":981:1008  bytes(_tokenURI).length > 0 */\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":977:1083  if (bytes(_tokenURI).length > 0) {... */\n      tag_361\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1055:1059  base */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1061:1070  _tokenURI */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1038:1071  abi.encodePacked(base, _tokenURI) */\n      add(0x20, mload(0x40))\n      tag_362\n      swap3\n      swap2\n      swap1\n      tag_363\n      jump\t// in\n    tag_362:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1024:1072  return string(abi.encodePacked(base, _tokenURI)) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":467:1130  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":977:1083  if (bytes(_tokenURI).length > 0) {... */\n    tag_361:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1100:1123  super.tokenURI(tokenId) */\n      tag_317\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1115:1122  tokenId */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1100:1114  super.tokenURI */\n      tag_365\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1100:1123  super.tokenURI(tokenId) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":8117:8225  function _safeMint(address to, uint256 tokenId) internal virtual {... */\n    tag_285:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":8192:8218  _safeMint(to, tokenId, \"\") */\n      tag_245\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":8202:8204  to */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":8206:8213  tokenId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":8192:8218  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":8192:8201  _safeMint */\n      tag_368\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":8192:8218  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1277:1491  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n    tag_287:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1376:1392  _exists(tokenId) */\n      tag_370\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1384:1391  tokenId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1376:1383  _exists */\n      tag_151\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1376:1392  _exists(tokenId) */\n      jump\t// in\n    tag_370:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1368:1443  require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\") */\n      tag_371\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16185:16187   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1368:1443  require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16167:16188   */\n      mstore\n        /* \"#utility.yul\":16224:16226   */\n      0x2e\n        /* \"#utility.yul\":16204:16222   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16197:16227   */\n      mstore\n        /* \"#utility.yul\":16263:16297   */\n      0x45524337323155524953746f726167653a2055524920736574206f66206e6f6e\n        /* \"#utility.yul\":16243:16261   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16236:16298   */\n      mstore\n      shl(0x91, 0x32bc34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":16314:16332   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":16307:16351   */\n      mstore\n        /* \"#utility.yul\":16368:16387   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1368:1443  require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\") */\n      tag_153\n        /* \"#utility.yul\":15983:16393   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1368:1443  require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\") */\n    tag_371:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1453:1472  _tokenURIs[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1453:1463  _tokenURIs */\n      0x0b\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1453:1472  _tokenURIs[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1453:1484  _tokenURIs[tokenId] = _tokenURI */\n      dup3\n      mload\n      tag_168\n      swap3\n      dup5\n      add\n      swap1\n      tag_375\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_304:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1672:1676  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1707:1747  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n      tag_377\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1763:1811  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n    tag_377:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1707:1863  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_140\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1827:1863  super.supportsInterface(interfaceId) */\n      tag_140\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      jump\n        /* \"contracts/NFTCollection.sol\":1810:1991  function _beforeTokenTransfer(address from, address to, uint256 amount)... */\n    tag_328:\n        /* \"contracts/NFTCollection.sol\":1940:1984  super._beforeTokenTransfer(from, to, amount) */\n      tag_168\n        /* \"contracts/NFTCollection.sol\":1967:1971  from */\n      dup4\n        /* \"contracts/NFTCollection.sol\":1973:1975  to */\n      dup4\n        /* \"contracts/NFTCollection.sol\":1977:1983  amount */\n      dup4\n        /* \"contracts/NFTCollection.sol\":1940:1966  super._beforeTokenTransfer */\n      tag_383\n        /* \"contracts/NFTCollection.sol\":1940:1984  super._beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12335:13113  function _checkOnERC721Received(... */\n    tag_344:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12485:12489  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12505:12518  to.isContract */\n      dup5\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12501:13107  if (to.isContract()) {... */\n      tag_388\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12540:12612  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12540:12576  IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12540:12612  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      tag_390\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12591:12595  from */\n      dup10\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12597:12604  tokenId */\n      dup9\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12606:12611  _data */\n      dup9\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12540:12612  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      0x04\n      add\n      tag_391\n      jump\t// in\n    tag_390:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_392\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_393\n      swap2\n      dup2\n      add\n      swap1\n      tag_394\n      jump\t// in\n    tag_393:\n      0x01\n    tag_392:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12536:13055  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n      tag_395\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_400\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_399)\n    tag_400:\n      0x60\n      swap2\n      pop\n    tag_399:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12779:12785  reason */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12779:12792  reason.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12796:12797  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12779:12797  reason.length == 0 */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12775:13041  if (reason.length == 0) {... */\n      tag_401\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12821:12881  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_347\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12775:13041  if (reason.length == 0) {... */\n    tag_401:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12993:12999  reason */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12987:13000  mload(reason) */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12978:12984  reason */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12974:12976  32 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12970:12985  add(32, reason) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12963:13001  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12536:13055  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n    tag_395:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12662:12713  retval == IERC721Receiver.onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12655:12713  return retval == IERC721Receiver.onERC721Received.selector */\n      jump(tag_317)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12501:13107  if (to.isContract()) {... */\n    tag_388:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":13092:13096  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12335:13113  function _checkOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTCollection.sol\":1677:1804  function _baseURI() internal view override returns (string memory) {... */\n    tag_359:\n        /* \"contracts/NFTCollection.sol\":1729:1742  string memory */\n      0x60\n        /* \"contracts/NFTCollection.sol\":1754:1797  return \"https://gateway.pinata.cloud/ipfs/\" */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_9962ece65b578af633a4cd71e7e539261ebe22823aa4ca702ec34245d8300d7d\n      0x22\n      swap2\n      codecopy\n      swap1\n      pop\n        /* \"contracts/NFTCollection.sol\":1677:1804  function _baseURI() internal view override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2818:3147  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_365:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2891:2904  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2924:2940  _exists(tokenId) */\n      tag_408\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2932:2939  tokenId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2924:2931  _exists */\n      tag_151\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2924:2940  _exists(tokenId) */\n      jump\t// in\n    tag_408:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2916:2992  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n      tag_409\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17348:17350   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2916:2992  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17330:17351   */\n      mstore\n        /* \"#utility.yul\":17387:17389   */\n      0x2f\n        /* \"#utility.yul\":17367:17385   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17360:17390   */\n      mstore\n        /* \"#utility.yul\":17426:17460   */\n      0x4552433732314d657461646174613a2055524920717565727920666f72206e6f\n        /* \"#utility.yul\":17406:17424   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17399:17461   */\n      mstore\n      shl(0x89, 0x3732bc34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":17477:17495   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":17470:17515   */\n      mstore\n        /* \"#utility.yul\":17532:17551   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2916:2992  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n      tag_153\n        /* \"#utility.yul\":17146:17557   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2916:2992  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n    tag_409:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3003:3024  string memory baseURI */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3027:3037  _baseURI() */\n      tag_412\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3027:3035  _baseURI */\n      tag_359\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3027:3037  _baseURI() */\n      jump\t// in\n    tag_412:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3003:3037  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3078:3079  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3060:3067  baseURI */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3054:3075  bytes(baseURI).length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3054:3079  bytes(baseURI).length > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3054:3140  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_413\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_414)\n    tag_413:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3106:3113  baseURI */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3115:3133  tokenId.toString() */\n      tag_415\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3115:3122  tokenId */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3115:3131  tokenId.toString */\n      tag_416\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3115:3133  tokenId.toString() */\n      jump\t// in\n    tag_415:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3089:3134  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_417\n      swap3\n      swap2\n      swap1\n      tag_363\n      jump\t// in\n    tag_417:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3054:3140  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_414:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3047:3140  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2818:3147  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":8446:8757  function _safeMint(... */\n    tag_368:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":8571:8589  _mint(to, tokenId) */\n      tag_419\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":8577:8579  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":8581:8588  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":8571:8576  _mint */\n      tag_420\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":8571:8589  _mint(to, tokenId) */\n      jump\t// in\n    tag_419:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":8620:8674  _checkOnERC721Received(address(0), to, tokenId, _data) */\n      tag_421\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":8651:8652  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":8655:8657  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":8659:8666  tokenId */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":8668:8673  _data */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":8620:8642  _checkOnERC721Received */\n      tag_344\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":8620:8674  _checkOnERC721Received(address(0), to, tokenId, _data) */\n      jump\t// in\n    tag_421:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":8599:8750  require(... */\n      tag_168\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_347\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2624:3196  function _beforeTokenTransfer(... */\n    tag_383:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2823:2841  from == address(0) */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2819:3002  if (from == address(0)) {... */\n      tag_428\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2857:2897  _addTokenToAllTokensEnumeration(tokenId) */\n      tag_429\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2889:2896  tokenId */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4005:4015  _allTokens */\n      0x09\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4005:4022  _allTokens.length */\n      dup1\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3978:4002  _allTokensIndex[tokenId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3978:3993  _allTokensIndex */\n      0x0a\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3978:4002  _allTokensIndex[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3978:4022  _allTokensIndex[tokenId] = _allTokens.length */\n      dup3\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4032:4056  _allTokens.push(tokenId) */\n      0x01\n      dup3\n      add\n      dup4\n      sstore\n      swap2\n      swap1\n      swap2\n      mstore\n      0x6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af\n      add\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3902:4063  function _addTokenToAllTokensEnumeration(uint256 tokenId) private {... */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2857:2897  _addTokenToAllTokensEnumeration(tokenId) */\n    tag_429:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2819:3002  if (from == address(0)) {... */\n      jump(tag_433)\n    tag_428:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2926:2928  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2918:2928  from != to */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2918:2922  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2918:2928  from != to */\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2914:3002  if (from != to) {... */\n      tag_433\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2944:2991  _removeTokenFromOwnerEnumeration(from, tokenId) */\n      tag_433\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2977:2981  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2983:2990  tokenId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2944:2976  _removeTokenFromOwnerEnumeration */\n      tag_434\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2944:2991  _removeTokenFromOwnerEnumeration(from, tokenId) */\n      jump\t// in\n    tag_433:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3015:3031  to == address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3011:3190  if (to == address(0)) {... */\n      tag_435\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3047:3092  _removeTokenFromAllTokensEnumeration(tokenId) */\n      tag_168\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3084:3091  tokenId */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3047:3083  _removeTokenFromAllTokensEnumeration */\n      tag_437\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3047:3092  _removeTokenFromAllTokensEnumeration(tokenId) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3011:3190  if (to == address(0)) {... */\n    tag_435:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3119:3123  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3113:3123  to != from */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3113:3115  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3113:3123  to != from */\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3109:3190  if (to != from) {... */\n      tag_168\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3139:3179  _addTokenToOwnerEnumeration(to, tokenId) */\n      tag_168\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3167:3169  to */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3171:3178  tokenId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3139:3166  _addTokenToOwnerEnumeration */\n      tag_441\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3139:3179  _addTokenToOwnerEnumeration(to, tokenId) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":328:1031  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_416:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":384:397  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":601:606  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":610:611  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":601:611  value == 0 */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":597:648  if (value == 0) {... */\n      tag_444\n      jumpi\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":627:637  return \"0\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x01\n      dup2\n      mstore\n      shl(0xfc, 0x03)\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":328:1031  function toString(uint256 value) internal pure returns (string memory) {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":597:648  if (value == 0) {... */\n    tag_444:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":672:677  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":657:669  uint256 temp */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n    tag_445:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":718:727  temp != 0 */\n      dup2\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n      tag_446\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":743:751  digits++ */\n      dup1\n      tag_447\n      dup2\n      tag_236\n      jump\t// in\n    tag_447:\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":765:775  temp /= 10 */\n      tag_448\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":773:775  10 */\n      0x0a\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":765:775  temp /= 10 */\n      dup4\n      tag_184\n      jump\t// in\n    tag_448:\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n      jump(tag_445)\n    tag_446:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":795:814  bytes memory buffer */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":827:833  digits */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":817:834  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_450\n      jumpi\n      tag_450\n      tag_222\n      jump\t// in\n    tag_450:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_451\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_451:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":795:834  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n    tag_452:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":851:861  value != 0 */\n      dup5\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n      tag_317\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":877:888  digits -= 1 */\n      tag_454\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":887:888  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":877:888  digits -= 1 */\n      dup4\n      tag_331\n      jump\t// in\n    tag_454:\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":945:955  value % 10 */\n      tag_455\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":953:955  10 */\n      0x0a\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":945:950  value */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":945:955  value % 10 */\n      tag_456\n      jump\t// in\n    tag_455:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":932:956  48 + uint256(value % 10) */\n      tag_457\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":932:934  48 */\n      0x30\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":932:956  48 + uint256(value % 10) */\n      tag_283\n      jump\t// in\n    tag_457:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":919:958  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":902:908  buffer */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":909:915  digits */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":902:916  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_459\n      jumpi\n      tag_459\n      tag_199\n      jump\t// in\n    tag_459:\n      0x20\n      add\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":902:958  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":972:983  value /= 10 */\n      tag_460\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":981:983  10 */\n      0x0a\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":972:983  value /= 10 */\n      dup7\n      tag_184\n      jump\t// in\n    tag_460:\n      swap5\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n      jump(tag_452)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9079:9506  function _mint(address to, uint256 tokenId) internal virtual {... */\n    tag_420:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9158:9174  to != address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9150:9211  require(to != address(0), \"ERC721: mint to the zero address\") */\n      tag_462\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17881:17883   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9150:9211  require(to != address(0), \"ERC721: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17863:17884   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":17900:17918   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17893:17923   */\n      mstore\n        /* \"#utility.yul\":17959:17993   */\n      0x4552433732313a206d696e7420746f20746865207a65726f2061646472657373\n        /* \"#utility.yul\":17939:17957   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17932:17994   */\n      mstore\n        /* \"#utility.yul\":18011:18029   */\n      0x64\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9150:9211  require(to != address(0), \"ERC721: mint to the zero address\") */\n      tag_153\n        /* \"#utility.yul\":17679:18035   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9150:9211  require(to != address(0), \"ERC721: mint to the zero address\") */\n    tag_462:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9230:9246  _exists(tokenId) */\n      tag_465\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9238:9245  tokenId */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9230:9237  _exists */\n      tag_151\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9230:9246  _exists(tokenId) */\n      jump\t// in\n    tag_465:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9229:9246  !_exists(tokenId) */\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9221:9279  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_466\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":18242:18244   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9221:9279  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18224:18245   */\n      mstore\n        /* \"#utility.yul\":18281:18283   */\n      0x1c\n        /* \"#utility.yul\":18261:18279   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18254:18284   */\n      mstore\n        /* \"#utility.yul\":18320:18350   */\n      0x4552433732313a20746f6b656e20616c7265616479206d696e74656400000000\n        /* \"#utility.yul\":18300:18318   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18293:18351   */\n      mstore\n        /* \"#utility.yul\":18368:18386   */\n      0x64\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9221:9279  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_153\n        /* \"#utility.yul\":18040:18392   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9221:9279  require(!_exists(tokenId), \"ERC721: token already minted\") */\n    tag_466:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9290:9335  _beforeTokenTransfer(address(0), to, tokenId) */\n      tag_469\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9319:9320  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9323:9325  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9327:9334  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9290:9310  _beforeTokenTransfer */\n      tag_328\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9290:9335  _beforeTokenTransfer(address(0), to, tokenId) */\n      jump\t// in\n    tag_469:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9346:9359  _balances[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9346:9355  _balances */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9346:9359  _balances[to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9346:9364  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9363:9364  1 */\n      0x01\n      swap3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9346:9359  _balances[to] */\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9346:9364  _balances[to] += 1 */\n      tag_470\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9363:9364  1 */\n      dup5\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9346:9364  _balances[to] += 1 */\n      tag_283\n      jump\t// in\n    tag_470:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9374:9390  _owners[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9374:9381  _owners */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9374:9390  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9374:9395  _owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9411:9444  Transfer(address(0), to, tokenId) */\n      swap1\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9374:9390  _owners[tokenId] */\n      dup4\n      swap3\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9411:9444  Transfer(address(0), to, tokenId) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9374:9390  _owners[tokenId] */\n      dup3\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9411:9444  Transfer(address(0), to, tokenId) */\n      log4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4284:4437  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4680:5650  function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {... */\n    tag_434:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4942:4964  uint256 lastTokenIndex */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4992:4993  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4967:4989  ERC721.balanceOf(from) */\n      tag_476\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4984:4988  from */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4967:4983  ERC721.balanceOf */\n      tag_92\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4967:4989  ERC721.balanceOf(from) */\n      jump\t// in\n    tag_476:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4967:4993  ERC721.balanceOf(from) - 1 */\n      tag_477\n      swap2\n      swap1\n      tag_331\n      jump\t// in\n    tag_477:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5003:5021  uint256 tokenIndex */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5024:5050  _ownedTokensIndex[tokenId] */\n      dup4\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5024:5041  _ownedTokensIndex */\n      0x08\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5024:5050  _ownedTokensIndex[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4942:4993  uint256 lastTokenIndex = ERC721.balanceOf(from) - 1 */\n      swap1\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5154:5182  tokenIndex != lastTokenIndex */\n      dup1\n      dup3\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5150:5473  if (tokenIndex != lastTokenIndex) {... */\n      tag_478\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5220:5238  _ownedTokens[from] */\n      dup5\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5198:5217  uint256 lastTokenId */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5220:5238  _ownedTokens[from] */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5220:5232  _ownedTokens */\n      0x07\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5220:5238  _ownedTokens[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5220:5254  _ownedTokens[from][lastTokenIndex] */\n      dup6\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5269:5299  _ownedTokens[from][tokenIndex] */\n      dup5\n      dup5\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5269:5313  _ownedTokens[from][tokenIndex] = lastTokenId */\n      dup2\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5385:5415  _ownedTokensIndex[lastTokenId] */\n      dup4\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5385:5402  _ownedTokensIndex */\n      0x08\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5385:5415  _ownedTokensIndex[lastTokenId] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5385:5428  _ownedTokensIndex[lastTokenId] = tokenIndex */\n      dup2\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5150:5473  if (tokenIndex != lastTokenIndex) {... */\n    tag_478:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5566:5592  _ownedTokensIndex[tokenId] */\n      0x00\n      swap2\n      dup3\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5566:5583  _ownedTokensIndex */\n      0x08\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5566:5592  _ownedTokensIndex[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5559:5592  delete _ownedTokensIndex[tokenId] */\n      dup5\n      swap1\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5609:5627  _ownedTokens[from] */\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5609:5621  _ownedTokens */\n      0x07\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5609:5627  _ownedTokens[from] */\n      dup2\n      mstore\n      dup4\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5609:5643  _ownedTokens[from][lastTokenIndex] */\n      swap2\n      dup4\n      mstore\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5602:5643  delete _ownedTokens[from][lastTokenIndex] */\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4680:5650  function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5938:6999  function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {... */\n    tag_437:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6212:6222  _allTokens */\n      0x09\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6212:6229  _allTokens.length */\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6187:6209  uint256 lastTokenIndex */\n      0x00\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6212:6233  _allTokens.length - 1 */\n      tag_480\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6232:6233  1 */\n      0x01\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6212:6233  _allTokens.length - 1 */\n      tag_331\n      jump\t// in\n    tag_480:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6243:6261  uint256 tokenIndex */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6264:6288  _allTokensIndex[tokenId] */\n      dup4\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6264:6279  _allTokensIndex */\n      0x0a\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6264:6288  _allTokensIndex[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6632:6642  _allTokens */\n      0x09\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6632:6658  _allTokens[lastTokenIndex] */\n      dup1\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6187:6233  uint256 lastTokenIndex = _allTokens.length - 1 */\n      swap4\n      swap5\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6264:6288  _allTokensIndex[tokenId] */\n      swap1\n      swap3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6187:6233  uint256 lastTokenIndex = _allTokens.length - 1 */\n      dup5\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6632:6658  _allTokens[lastTokenIndex] */\n      dup2\n      lt\n      tag_482\n      jumpi\n      tag_482\n      tag_199\n      jump\t// in\n    tag_482:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6610:6658  uint256 lastTokenId = _allTokens[lastTokenIndex] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6694:6705  lastTokenId */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6669:6679  _allTokens */\n      0x09\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6680:6690  tokenIndex */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6669:6691  _allTokens[tokenIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_485\n      jumpi\n      tag_485\n      tag_199\n      jump\t// in\n    tag_485:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6669:6705  _allTokens[tokenIndex] = lastTokenId */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6773:6801  _allTokensIndex[lastTokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6773:6788  _allTokensIndex */\n      0x0a\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6773:6801  _allTokensIndex[lastTokenId] */\n      swap1\n      swap2\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6773:6814  _allTokensIndex[lastTokenId] = tokenIndex */\n      dup5\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6942:6966  _allTokensIndex[tokenId] */\n      dup6\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6935:6966  delete _allTokensIndex[tokenId] */\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6976:6986  _allTokens */\n      0x09\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6976:6992  _allTokens.pop() */\n      dup1\n      sload\n      dup1\n      tag_488\n      jumpi\n      tag_488\n      tag_489\n      jump\t// in\n    tag_488:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6009:6999  {... */\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5938:6999  function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3490:3707  function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {... */\n    tag_441:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3574:3588  uint256 length */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3591:3611  ERC721.balanceOf(to) */\n      tag_492\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3608:3610  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3591:3607  ERC721.balanceOf */\n      tag_92\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3591:3611  ERC721.balanceOf(to) */\n      jump\t// in\n    tag_492:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3621:3637  _ownedTokens[to] */\n      swap1\n      swap4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3621:3633  _ownedTokens */\n      0x07\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3621:3637  _ownedTokens[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3621:3645  _ownedTokens[to][length] */\n      dup7\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3621:3655  _ownedTokens[to][length] = tokenId */\n      dup6\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3665:3691  _ownedTokensIndex[tokenId] */\n      swap4\n      dup3\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3665:3682  _ownedTokensIndex */\n      0x08\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3665:3691  _ownedTokensIndex[tokenId] */\n      swap1\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3665:3700  _ownedTokensIndex[tokenId] = length */\n      swap2\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3490:3707  function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {... */\n      jump\t// out\n    tag_375:\n      dup3\n      dup1\n      sload\n      tag_493\n      swap1\n      tag_144\n      jump\t// in\n    tag_493:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_495\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_498)\n    tag_495:\n      dup3\n      0x1f\n      lt\n      tag_496\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_498)\n    tag_496:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_498\n      jumpi\n      swap2\n      dup3\n      add\n    tag_497:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_498\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_497)\n    tag_498:\n      pop\n      tag_499\n      swap3\n      swap2\n      pop\n      tag_500\n      jump\t// in\n    tag_499:\n      pop\n      swap1\n      jump\t// out\n    tag_500:\n    tag_501:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_499\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_501)\n        /* \"#utility.yul\":14:145   */\n    tag_503:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_300\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:395   */\n    tag_36:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_514:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_414\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_503\n      jump\t// in\n        /* \"#utility.yul\":592:850   */\n    tag_504:\n        /* \"#utility.yul\":664:665   */\n      0x00\n        /* \"#utility.yul\":674:787   */\n    tag_518:\n        /* \"#utility.yul\":688:694   */\n      dup4\n        /* \"#utility.yul\":685:686   */\n      dup2\n        /* \"#utility.yul\":682:695   */\n      lt\n        /* \"#utility.yul\":674:787   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":764:775   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":758:776   */\n      mload\n        /* \"#utility.yul\":745:756   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":738:777   */\n      mstore\n        /* \"#utility.yul\":710:712   */\n      0x20\n        /* \"#utility.yul\":703:713   */\n      add\n        /* \"#utility.yul\":674:787   */\n      jump(tag_518)\n    tag_520:\n        /* \"#utility.yul\":805:811   */\n      dup4\n        /* \"#utility.yul\":802:803   */\n      dup2\n        /* \"#utility.yul\":799:812   */\n      gt\n        /* \"#utility.yul\":796:844   */\n      iszero\n      tag_261\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":840:841   */\n      0x00\n        /* \"#utility.yul\":822:838   */\n      swap2\n      add\n        /* \"#utility.yul\":815:842   */\n      mstore\n        /* \"#utility.yul\":592:850   */\n      jump\t// out\n        /* \"#utility.yul\":855:1113   */\n    tag_505:\n        /* \"#utility.yul\":897:900   */\n      0x00\n        /* \"#utility.yul\":935:940   */\n      dup2\n        /* \"#utility.yul\":929:941   */\n      mload\n        /* \"#utility.yul\":962:968   */\n      dup1\n        /* \"#utility.yul\":957:960   */\n      dup5\n        /* \"#utility.yul\":950:969   */\n      mstore\n        /* \"#utility.yul\":978:1041   */\n      tag_523\n        /* \"#utility.yul\":1034:1040   */\n      dup2\n        /* \"#utility.yul\":1027:1031   */\n      0x20\n        /* \"#utility.yul\":1022:1025   */\n      dup7\n        /* \"#utility.yul\":1018:1032   */\n      add\n        /* \"#utility.yul\":1011:1015   */\n      0x20\n        /* \"#utility.yul\":1004:1009   */\n      dup7\n        /* \"#utility.yul\":1000:1016   */\n      add\n        /* \"#utility.yul\":978:1041   */\n      tag_504\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":1095:1097   */\n      0x1f\n        /* \"#utility.yul\":1074:1089   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1070:1099   */\n      and\n        /* \"#utility.yul\":1061:1100   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1102:1106   */\n      0x20\n        /* \"#utility.yul\":1057:1107   */\n      add\n      swap3\n        /* \"#utility.yul\":855:1113   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1118:1338   */\n    tag_43:\n        /* \"#utility.yul\":1267:1269   */\n      0x20\n        /* \"#utility.yul\":1256:1265   */\n      dup2\n        /* \"#utility.yul\":1249:1270   */\n      mstore\n        /* \"#utility.yul\":1230:1234   */\n      0x00\n        /* \"#utility.yul\":1287:1332   */\n      tag_414\n        /* \"#utility.yul\":1328:1330   */\n      0x20\n        /* \"#utility.yul\":1317:1326   */\n      dup4\n        /* \"#utility.yul\":1313:1331   */\n      add\n        /* \"#utility.yul\":1305:1311   */\n      dup5\n        /* \"#utility.yul\":1287:1332   */\n      tag_505\n      jump\t// in\n        /* \"#utility.yul\":1343:1523   */\n    tag_46:\n        /* \"#utility.yul\":1402:1408   */\n      0x00\n        /* \"#utility.yul\":1455:1457   */\n      0x20\n        /* \"#utility.yul\":1443:1452   */\n      dup3\n        /* \"#utility.yul\":1434:1441   */\n      dup5\n        /* \"#utility.yul\":1430:1453   */\n      sub\n        /* \"#utility.yul\":1426:1458   */\n      slt\n        /* \"#utility.yul\":1423:1475   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":1471:1472   */\n      0x00\n        /* \"#utility.yul\":1468:1469   */\n      dup1\n        /* \"#utility.yul\":1461:1473   */\n      revert\n        /* \"#utility.yul\":1423:1475   */\n    tag_527:\n      pop\n        /* \"#utility.yul\":1494:1517   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1343:1523   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1736:1909   */\n    tag_506:\n        /* \"#utility.yul\":1804:1824   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1853:1884   */\n      dup2\n      and\n        /* \"#utility.yul\":1843:1885   */\n      dup2\n      eq\n        /* \"#utility.yul\":1833:1903   */\n      tag_530\n      jumpi\n        /* \"#utility.yul\":1899:1900   */\n      0x00\n        /* \"#utility.yul\":1896:1897   */\n      dup1\n        /* \"#utility.yul\":1889:1901   */\n      revert\n        /* \"#utility.yul\":1833:1903   */\n    tag_530:\n        /* \"#utility.yul\":1736:1909   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1914:2168   */\n    tag_52:\n        /* \"#utility.yul\":1982:1988   */\n      0x00\n        /* \"#utility.yul\":1990:1996   */\n      dup1\n        /* \"#utility.yul\":2043:2045   */\n      0x40\n        /* \"#utility.yul\":2031:2040   */\n      dup4\n        /* \"#utility.yul\":2022:2029   */\n      dup6\n        /* \"#utility.yul\":2018:2041   */\n      sub\n        /* \"#utility.yul\":2014:2046   */\n      slt\n        /* \"#utility.yul\":2011:2063   */\n      iszero\n      tag_532\n      jumpi\n        /* \"#utility.yul\":2059:2060   */\n      0x00\n        /* \"#utility.yul\":2056:2057   */\n      dup1\n        /* \"#utility.yul\":2049:2061   */\n      revert\n        /* \"#utility.yul\":2011:2063   */\n    tag_532:\n        /* \"#utility.yul\":2082:2111   */\n      tag_533\n        /* \"#utility.yul\":2101:2110   */\n      dup4\n        /* \"#utility.yul\":2082:2111   */\n      tag_506\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":2072:2111   */\n      swap5\n        /* \"#utility.yul\":2158:2160   */\n      0x20\n        /* \"#utility.yul\":2143:2161   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2130:2162   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1914:2168   */\n      jump\t// out\n        /* \"#utility.yul\":2355:2683   */\n    tag_63:\n        /* \"#utility.yul\":2432:2438   */\n      0x00\n        /* \"#utility.yul\":2440:2446   */\n      dup1\n        /* \"#utility.yul\":2448:2454   */\n      0x00\n        /* \"#utility.yul\":2501:2503   */\n      0x60\n        /* \"#utility.yul\":2489:2498   */\n      dup5\n        /* \"#utility.yul\":2480:2487   */\n      dup7\n        /* \"#utility.yul\":2476:2499   */\n      sub\n        /* \"#utility.yul\":2472:2504   */\n      slt\n        /* \"#utility.yul\":2469:2521   */\n      iszero\n      tag_536\n      jumpi\n        /* \"#utility.yul\":2517:2518   */\n      0x00\n        /* \"#utility.yul\":2514:2515   */\n      dup1\n        /* \"#utility.yul\":2507:2519   */\n      revert\n        /* \"#utility.yul\":2469:2521   */\n    tag_536:\n        /* \"#utility.yul\":2540:2569   */\n      tag_537\n        /* \"#utility.yul\":2559:2568   */\n      dup5\n        /* \"#utility.yul\":2540:2569   */\n      tag_506\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":2530:2569   */\n      swap3\n      pop\n        /* \"#utility.yul\":2588:2626   */\n      tag_538\n        /* \"#utility.yul\":2622:2624   */\n      0x20\n        /* \"#utility.yul\":2611:2620   */\n      dup6\n        /* \"#utility.yul\":2607:2625   */\n      add\n        /* \"#utility.yul\":2588:2626   */\n      tag_506\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":2578:2626   */\n      swap2\n      pop\n        /* \"#utility.yul\":2673:2675   */\n      0x40\n        /* \"#utility.yul\":2662:2671   */\n      dup5\n        /* \"#utility.yul\":2658:2676   */\n      add\n        /* \"#utility.yul\":2645:2677   */\n      calldataload\n        /* \"#utility.yul\":2635:2677   */\n      swap1\n      pop\n        /* \"#utility.yul\":2355:2683   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2688:2936   */\n    tag_67:\n        /* \"#utility.yul\":2756:2762   */\n      0x00\n        /* \"#utility.yul\":2764:2770   */\n      dup1\n        /* \"#utility.yul\":2817:2819   */\n      0x40\n        /* \"#utility.yul\":2805:2814   */\n      dup4\n        /* \"#utility.yul\":2796:2803   */\n      dup6\n        /* \"#utility.yul\":2792:2815   */\n      sub\n        /* \"#utility.yul\":2788:2820   */\n      slt\n        /* \"#utility.yul\":2785:2837   */\n      iszero\n      tag_540\n      jumpi\n        /* \"#utility.yul\":2833:2834   */\n      0x00\n        /* \"#utility.yul\":2830:2831   */\n      dup1\n        /* \"#utility.yul\":2823:2835   */\n      revert\n        /* \"#utility.yul\":2785:2837   */\n    tag_540:\n      pop\n      pop\n        /* \"#utility.yul\":2856:2879   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":2926:2928   */\n      0x20\n        /* \"#utility.yul\":2911:2929   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2898:2930   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2688:2936   */\n      jump\t// out\n        /* \"#utility.yul\":3220:3406   */\n    tag_91:\n        /* \"#utility.yul\":3279:3285   */\n      0x00\n        /* \"#utility.yul\":3332:3334   */\n      0x20\n        /* \"#utility.yul\":3320:3329   */\n      dup3\n        /* \"#utility.yul\":3311:3318   */\n      dup5\n        /* \"#utility.yul\":3307:3330   */\n      sub\n        /* \"#utility.yul\":3303:3335   */\n      slt\n        /* \"#utility.yul\":3300:3352   */\n      iszero\n      tag_543\n      jumpi\n        /* \"#utility.yul\":3348:3349   */\n      0x00\n        /* \"#utility.yul\":3345:3346   */\n      dup1\n        /* \"#utility.yul\":3338:3350   */\n      revert\n        /* \"#utility.yul\":3300:3352   */\n    tag_543:\n        /* \"#utility.yul\":3371:3400   */\n      tag_414\n        /* \"#utility.yul\":3390:3399   */\n      dup3\n        /* \"#utility.yul\":3371:3400   */\n      tag_506\n      jump\t// in\n        /* \"#utility.yul\":3411:4043   */\n    tag_100:\n        /* \"#utility.yul\":3582:3584   */\n      0x20\n        /* \"#utility.yul\":3634:3655   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3704:3717   */\n      dup3\n      mload\n        /* \"#utility.yul\":3607:3625   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":3726:3748   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":3553:3557   */\n      0x00\n      swap2\n        /* \"#utility.yul\":3582:3584   */\n      swap1\n        /* \"#utility.yul\":3805:3820   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":3779:3781   */\n      0x40\n        /* \"#utility.yul\":3764:3782   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":3553:3557   */\n      dup5\n        /* \"#utility.yul\":3848:4017   */\n    tag_546:\n        /* \"#utility.yul\":3862:3868   */\n      dup2\n        /* \"#utility.yul\":3859:3860   */\n      dup2\n        /* \"#utility.yul\":3856:3869   */\n      lt\n        /* \"#utility.yul\":3848:4017   */\n      iszero\n      tag_548\n      jumpi\n        /* \"#utility.yul\":3923:3936   */\n      dup4\n      mload\n        /* \"#utility.yul\":3911:3937   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3992:4007   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":3957:3969   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":3884:3885   */\n      0x01\n        /* \"#utility.yul\":3877:3886   */\n      add\n        /* \"#utility.yul\":3848:4017   */\n      jump(tag_546)\n    tag_548:\n      pop\n        /* \"#utility.yul\":4034:4037   */\n      swap1\n      swap7\n        /* \"#utility.yul\":3411:4043   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4048:4395   */\n    tag_109:\n        /* \"#utility.yul\":4113:4119   */\n      0x00\n        /* \"#utility.yul\":4121:4127   */\n      dup1\n        /* \"#utility.yul\":4174:4176   */\n      0x40\n        /* \"#utility.yul\":4162:4171   */\n      dup4\n        /* \"#utility.yul\":4153:4160   */\n      dup6\n        /* \"#utility.yul\":4149:4172   */\n      sub\n        /* \"#utility.yul\":4145:4177   */\n      slt\n        /* \"#utility.yul\":4142:4194   */\n      iszero\n      tag_550\n      jumpi\n        /* \"#utility.yul\":4190:4191   */\n      0x00\n        /* \"#utility.yul\":4187:4188   */\n      dup1\n        /* \"#utility.yul\":4180:4192   */\n      revert\n        /* \"#utility.yul\":4142:4194   */\n    tag_550:\n        /* \"#utility.yul\":4213:4242   */\n      tag_551\n        /* \"#utility.yul\":4232:4241   */\n      dup4\n        /* \"#utility.yul\":4213:4242   */\n      tag_506\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":4203:4242   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4294   */\n      0x20\n        /* \"#utility.yul\":4281:4290   */\n      dup4\n        /* \"#utility.yul\":4277:4295   */\n      add\n        /* \"#utility.yul\":4264:4296   */\n      calldataload\n        /* \"#utility.yul\":4339:4344   */\n      dup1\n        /* \"#utility.yul\":4332:4345   */\n      iszero\n        /* \"#utility.yul\":4325:4346   */\n      iszero\n        /* \"#utility.yul\":4318:4323   */\n      dup2\n        /* \"#utility.yul\":4315:4347   */\n      eq\n        /* \"#utility.yul\":4305:4365   */\n      tag_552\n      jumpi\n        /* \"#utility.yul\":4361:4362   */\n      0x00\n        /* \"#utility.yul\":4358:4359   */\n      dup1\n        /* \"#utility.yul\":4351:4363   */\n      revert\n        /* \"#utility.yul\":4305:4365   */\n    tag_552:\n        /* \"#utility.yul\":4384:4389   */\n      dup1\n        /* \"#utility.yul\":4374:4389   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4048:4395   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4400:4527   */\n    tag_222:\n        /* \"#utility.yul\":4461:4471   */\n      0x4e487b71\n        /* \"#utility.yul\":4456:4459   */\n      0xe0\n        /* \"#utility.yul\":4452:4472   */\n      shl\n        /* \"#utility.yul\":4449:4450   */\n      0x00\n        /* \"#utility.yul\":4442:4473   */\n      mstore\n        /* \"#utility.yul\":4492:4496   */\n      0x41\n        /* \"#utility.yul\":4489:4490   */\n      0x04\n        /* \"#utility.yul\":4482:4497   */\n      mstore\n        /* \"#utility.yul\":4516:4520   */\n      0x24\n        /* \"#utility.yul\":4513:4514   */\n      0x00\n        /* \"#utility.yul\":4506:4521   */\n      revert\n        /* \"#utility.yul\":4532:5163   */\n    tag_507:\n        /* \"#utility.yul\":4596:4601   */\n      0x00\n        /* \"#utility.yul\":4626:4644   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4667:4669   */\n      dup1\n        /* \"#utility.yul\":4659:4665   */\n      dup5\n        /* \"#utility.yul\":4656:4670   */\n      gt\n        /* \"#utility.yul\":4653:4693   */\n      iszero\n      tag_556\n      jumpi\n        /* \"#utility.yul\":4673:4691   */\n      tag_556\n      tag_222\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":4748:4750   */\n      0x40\n        /* \"#utility.yul\":4742:4751   */\n      mload\n        /* \"#utility.yul\":4716:4718   */\n      0x1f\n        /* \"#utility.yul\":4802:4817   */\n      dup6\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4798:4822   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4824:4826   */\n      0x3f\n        /* \"#utility.yul\":4794:4827   */\n      add\n        /* \"#utility.yul\":4790:4832   */\n      and\n        /* \"#utility.yul\":4778:4833   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4848:4866   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":4868:4890   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":4845:4891   */\n      or\n        /* \"#utility.yul\":4842:4914   */\n      iszero\n      tag_558\n      jumpi\n        /* \"#utility.yul\":4894:4912   */\n      tag_558\n      tag_222\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":4934:4944   */\n      dup2\n        /* \"#utility.yul\":4930:4932   */\n      0x40\n        /* \"#utility.yul\":4923:4945   */\n      mstore\n        /* \"#utility.yul\":4963:4969   */\n      dup1\n        /* \"#utility.yul\":4954:4969   */\n      swap4\n      pop\n        /* \"#utility.yul\":4993:4999   */\n      dup6\n        /* \"#utility.yul\":4985:4991   */\n      dup2\n        /* \"#utility.yul\":4978:5000   */\n      mstore\n        /* \"#utility.yul\":5033:5036   */\n      dup7\n        /* \"#utility.yul\":5024:5030   */\n      dup7\n        /* \"#utility.yul\":5019:5022   */\n      dup7\n        /* \"#utility.yul\":5015:5031   */\n      add\n        /* \"#utility.yul\":5012:5037   */\n      gt\n        /* \"#utility.yul\":5009:5054   */\n      iszero\n      tag_559\n      jumpi\n        /* \"#utility.yul\":5050:5051   */\n      0x00\n        /* \"#utility.yul\":5047:5048   */\n      dup1\n        /* \"#utility.yul\":5040:5052   */\n      revert\n        /* \"#utility.yul\":5009:5054   */\n    tag_559:\n        /* \"#utility.yul\":5100:5106   */\n      dup6\n        /* \"#utility.yul\":5095:5098   */\n      dup6\n        /* \"#utility.yul\":5088:5092   */\n      0x20\n        /* \"#utility.yul\":5080:5086   */\n      dup4\n        /* \"#utility.yul\":5076:5093   */\n      add\n        /* \"#utility.yul\":5063:5107   */\n      calldatacopy\n        /* \"#utility.yul\":5155:5156   */\n      0x00\n        /* \"#utility.yul\":5148:5152   */\n      0x20\n        /* \"#utility.yul\":5139:5145   */\n      dup8\n        /* \"#utility.yul\":5131:5137   */\n      dup4\n        /* \"#utility.yul\":5127:5146   */\n      add\n        /* \"#utility.yul\":5123:5153   */\n      add\n        /* \"#utility.yul\":5116:5157   */\n      mstore\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4532:5163   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5168:5834   */\n    tag_119:\n        /* \"#utility.yul\":5263:5269   */\n      0x00\n        /* \"#utility.yul\":5271:5277   */\n      dup1\n        /* \"#utility.yul\":5279:5285   */\n      0x00\n        /* \"#utility.yul\":5287:5293   */\n      dup1\n        /* \"#utility.yul\":5340:5343   */\n      0x80\n        /* \"#utility.yul\":5328:5337   */\n      dup6\n        /* \"#utility.yul\":5319:5326   */\n      dup8\n        /* \"#utility.yul\":5315:5338   */\n      sub\n        /* \"#utility.yul\":5311:5344   */\n      slt\n        /* \"#utility.yul\":5308:5361   */\n      iszero\n      tag_561\n      jumpi\n        /* \"#utility.yul\":5357:5358   */\n      0x00\n        /* \"#utility.yul\":5354:5355   */\n      dup1\n        /* \"#utility.yul\":5347:5359   */\n      revert\n        /* \"#utility.yul\":5308:5361   */\n    tag_561:\n        /* \"#utility.yul\":5380:5409   */\n      tag_562\n        /* \"#utility.yul\":5399:5408   */\n      dup6\n        /* \"#utility.yul\":5380:5409   */\n      tag_506\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":5370:5409   */\n      swap4\n      pop\n        /* \"#utility.yul\":5428:5466   */\n      tag_563\n        /* \"#utility.yul\":5462:5464   */\n      0x20\n        /* \"#utility.yul\":5451:5460   */\n      dup7\n        /* \"#utility.yul\":5447:5465   */\n      add\n        /* \"#utility.yul\":5428:5466   */\n      tag_506\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":5418:5466   */\n      swap3\n      pop\n        /* \"#utility.yul\":5513:5515   */\n      0x40\n        /* \"#utility.yul\":5502:5511   */\n      dup6\n        /* \"#utility.yul\":5498:5516   */\n      add\n        /* \"#utility.yul\":5485:5517   */\n      calldataload\n        /* \"#utility.yul\":5475:5517   */\n      swap2\n      pop\n        /* \"#utility.yul\":5568:5570   */\n      0x60\n        /* \"#utility.yul\":5557:5566   */\n      dup6\n        /* \"#utility.yul\":5553:5571   */\n      add\n        /* \"#utility.yul\":5540:5572   */\n      calldataload\n        /* \"#utility.yul\":5595:5613   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5587:5593   */\n      dup2\n        /* \"#utility.yul\":5584:5614   */\n      gt\n        /* \"#utility.yul\":5581:5631   */\n      iszero\n      tag_564\n      jumpi\n        /* \"#utility.yul\":5627:5628   */\n      0x00\n        /* \"#utility.yul\":5624:5625   */\n      dup1\n        /* \"#utility.yul\":5617:5629   */\n      revert\n        /* \"#utility.yul\":5581:5631   */\n    tag_564:\n        /* \"#utility.yul\":5650:5672   */\n      dup6\n      add\n        /* \"#utility.yul\":5703:5707   */\n      0x1f\n        /* \"#utility.yul\":5695:5708   */\n      dup2\n      add\n        /* \"#utility.yul\":5691:5718   */\n      dup8\n      sgt\n        /* \"#utility.yul\":5681:5736   */\n      tag_565\n      jumpi\n        /* \"#utility.yul\":5732:5733   */\n      0x00\n        /* \"#utility.yul\":5729:5730   */\n      dup1\n        /* \"#utility.yul\":5722:5734   */\n      revert\n        /* \"#utility.yul\":5681:5736   */\n    tag_565:\n        /* \"#utility.yul\":5755:5828   */\n      tag_566\n        /* \"#utility.yul\":5820:5827   */\n      dup8\n        /* \"#utility.yul\":5815:5817   */\n      dup3\n        /* \"#utility.yul\":5802:5818   */\n      calldataload\n        /* \"#utility.yul\":5797:5799   */\n      0x20\n        /* \"#utility.yul\":5793:5795   */\n      dup5\n        /* \"#utility.yul\":5789:5800   */\n      add\n        /* \"#utility.yul\":5755:5828   */\n      tag_507\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":5745:5828   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5168:5834   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5839:6363   */\n    tag_127:\n        /* \"#utility.yul\":5917:5923   */\n      0x00\n        /* \"#utility.yul\":5925:5931   */\n      dup1\n        /* \"#utility.yul\":5978:5980   */\n      0x40\n        /* \"#utility.yul\":5966:5975   */\n      dup4\n        /* \"#utility.yul\":5957:5964   */\n      dup6\n        /* \"#utility.yul\":5953:5976   */\n      sub\n        /* \"#utility.yul\":5949:5981   */\n      slt\n        /* \"#utility.yul\":5946:5998   */\n      iszero\n      tag_568\n      jumpi\n        /* \"#utility.yul\":5994:5995   */\n      0x00\n        /* \"#utility.yul\":5991:5992   */\n      dup1\n        /* \"#utility.yul\":5984:5996   */\n      revert\n        /* \"#utility.yul\":5946:5998   */\n    tag_568:\n        /* \"#utility.yul\":6017:6046   */\n      tag_569\n        /* \"#utility.yul\":6036:6045   */\n      dup4\n        /* \"#utility.yul\":6017:6046   */\n      tag_506\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":6007:6046   */\n      swap2\n      pop\n        /* \"#utility.yul\":6097:6099   */\n      0x20\n        /* \"#utility.yul\":6086:6095   */\n      dup4\n        /* \"#utility.yul\":6082:6100   */\n      add\n        /* \"#utility.yul\":6069:6101   */\n      calldataload\n        /* \"#utility.yul\":6124:6142   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6116:6122   */\n      dup2\n        /* \"#utility.yul\":6113:6143   */\n      gt\n        /* \"#utility.yul\":6110:6160   */\n      iszero\n      tag_570\n      jumpi\n        /* \"#utility.yul\":6156:6157   */\n      0x00\n        /* \"#utility.yul\":6153:6154   */\n      dup1\n        /* \"#utility.yul\":6146:6158   */\n      revert\n        /* \"#utility.yul\":6110:6160   */\n    tag_570:\n        /* \"#utility.yul\":6179:6201   */\n      dup4\n      add\n        /* \"#utility.yul\":6232:6236   */\n      0x1f\n        /* \"#utility.yul\":6224:6237   */\n      dup2\n      add\n        /* \"#utility.yul\":6220:6247   */\n      dup6\n      sgt\n        /* \"#utility.yul\":6210:6265   */\n      tag_571\n      jumpi\n        /* \"#utility.yul\":6261:6262   */\n      0x00\n        /* \"#utility.yul\":6258:6259   */\n      dup1\n        /* \"#utility.yul\":6251:6263   */\n      revert\n        /* \"#utility.yul\":6210:6265   */\n    tag_571:\n        /* \"#utility.yul\":6284:6357   */\n      tag_572\n        /* \"#utility.yul\":6349:6356   */\n      dup6\n        /* \"#utility.yul\":6344:6346   */\n      dup3\n        /* \"#utility.yul\":6331:6347   */\n      calldataload\n        /* \"#utility.yul\":6326:6328   */\n      0x20\n        /* \"#utility.yul\":6322:6324   */\n      dup5\n        /* \"#utility.yul\":6318:6329   */\n      add\n        /* \"#utility.yul\":6284:6357   */\n      tag_507\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":6274:6357   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5839:6363   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6368:6628   */\n    tag_132:\n        /* \"#utility.yul\":6436:6442   */\n      0x00\n        /* \"#utility.yul\":6444:6450   */\n      dup1\n        /* \"#utility.yul\":6497:6499   */\n      0x40\n        /* \"#utility.yul\":6485:6494   */\n      dup4\n        /* \"#utility.yul\":6476:6483   */\n      dup6\n        /* \"#utility.yul\":6472:6495   */\n      sub\n        /* \"#utility.yul\":6468:6500   */\n      slt\n        /* \"#utility.yul\":6465:6517   */\n      iszero\n      tag_574\n      jumpi\n        /* \"#utility.yul\":6513:6514   */\n      0x00\n        /* \"#utility.yul\":6510:6511   */\n      dup1\n        /* \"#utility.yul\":6503:6515   */\n      revert\n        /* \"#utility.yul\":6465:6517   */\n    tag_574:\n        /* \"#utility.yul\":6536:6565   */\n      tag_575\n        /* \"#utility.yul\":6555:6564   */\n      dup4\n        /* \"#utility.yul\":6536:6565   */\n      tag_506\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":6526:6565   */\n      swap2\n      pop\n        /* \"#utility.yul\":6584:6622   */\n      tag_576\n        /* \"#utility.yul\":6618:6620   */\n      0x20\n        /* \"#utility.yul\":6607:6616   */\n      dup5\n        /* \"#utility.yul\":6603:6621   */\n      add\n        /* \"#utility.yul\":6584:6622   */\n      tag_506\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":6574:6622   */\n      swap1\n      pop\n        /* \"#utility.yul\":6368:6628   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6633:7013   */\n    tag_144:\n        /* \"#utility.yul\":6712:6713   */\n      0x01\n        /* \"#utility.yul\":6708:6720   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":6755:6767   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":6776:6837   */\n      tag_578\n      jumpi\n        /* \"#utility.yul\":6830:6834   */\n      0x7f\n        /* \"#utility.yul\":6822:6828   */\n      dup3\n        /* \"#utility.yul\":6818:6835   */\n      and\n        /* \"#utility.yul\":6808:6835   */\n      swap2\n      pop\n        /* \"#utility.yul\":6776:6837   */\n    tag_578:\n        /* \"#utility.yul\":6883:6885   */\n      0x20\n        /* \"#utility.yul\":6875:6881   */\n      dup3\n        /* \"#utility.yul\":6872:6886   */\n      lt\n        /* \"#utility.yul\":6852:6870   */\n      dup2\n        /* \"#utility.yul\":6849:6887   */\n      sub\n        /* \"#utility.yul\":6846:7007   */\n      tag_579\n      jumpi\n        /* \"#utility.yul\":6929:6939   */\n      0x4e487b71\n        /* \"#utility.yul\":6924:6927   */\n      0xe0\n        /* \"#utility.yul\":6920:6940   */\n      shl\n        /* \"#utility.yul\":6917:6918   */\n      0x00\n        /* \"#utility.yul\":6910:6941   */\n      mstore\n        /* \"#utility.yul\":6964:6968   */\n      0x22\n        /* \"#utility.yul\":6961:6962   */\n      0x04\n        /* \"#utility.yul\":6954:6969   */\n      mstore\n        /* \"#utility.yul\":6992:6996   */\n      0x24\n        /* \"#utility.yul\":6989:6990   */\n      0x00\n        /* \"#utility.yul\":6982:6997   */\n      revert\n        /* \"#utility.yul\":6846:7007   */\n    tag_579:\n      pop\n        /* \"#utility.yul\":6633:7013   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8258:8671   */\n    tag_177:\n        /* \"#utility.yul\":8460:8462   */\n      0x20\n        /* \"#utility.yul\":8442:8463   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8499:8501   */\n      0x31\n        /* \"#utility.yul\":8479:8497   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8472:8502   */\n      mstore\n        /* \"#utility.yul\":8538:8572   */\n      0x4552433732313a207472616e736665722063616c6c6572206973206e6f74206f\n        /* \"#utility.yul\":8533:8535   */\n      0x40\n        /* \"#utility.yul\":8518:8536   */\n      dup3\n      add\n        /* \"#utility.yul\":8511:8573   */\n      mstore\n      shl(0x7a, 0x1ddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":8604:8606   */\n      0x60\n        /* \"#utility.yul\":8589:8607   */\n      dup3\n      add\n        /* \"#utility.yul\":8582:8629   */\n      mstore\n        /* \"#utility.yul\":8661:8664   */\n      0x80\n        /* \"#utility.yul\":8646:8665   */\n      add\n      swap1\n        /* \"#utility.yul\":8258:8671   */\n      jump\t// out\n        /* \"#utility.yul\":8676:8803   */\n    tag_508:\n        /* \"#utility.yul\":8737:8747   */\n      0x4e487b71\n        /* \"#utility.yul\":8732:8735   */\n      0xe0\n        /* \"#utility.yul\":8728:8748   */\n      shl\n        /* \"#utility.yul\":8725:8726   */\n      0x00\n        /* \"#utility.yul\":8718:8749   */\n      mstore\n        /* \"#utility.yul\":8768:8772   */\n      0x11\n        /* \"#utility.yul\":8765:8766   */\n      0x04\n        /* \"#utility.yul\":8758:8773   */\n      mstore\n        /* \"#utility.yul\":8792:8796   */\n      0x24\n        /* \"#utility.yul\":8789:8790   */\n      0x00\n        /* \"#utility.yul\":8782:8797   */\n      revert\n        /* \"#utility.yul\":8808:8976   */\n    tag_182:\n        /* \"#utility.yul\":8848:8855   */\n      0x00\n        /* \"#utility.yul\":8914:8915   */\n      dup2\n        /* \"#utility.yul\":8910:8911   */\n      0x00\n        /* \"#utility.yul\":8906:8912   */\n      not\n        /* \"#utility.yul\":8902:8916   */\n      div\n        /* \"#utility.yul\":8899:8900   */\n      dup4\n        /* \"#utility.yul\":8896:8917   */\n      gt\n        /* \"#utility.yul\":8891:8892   */\n      dup3\n        /* \"#utility.yul\":8884:8893   */\n      iszero\n        /* \"#utility.yul\":8877:8894   */\n      iszero\n        /* \"#utility.yul\":8873:8918   */\n      and\n        /* \"#utility.yul\":8870:8941   */\n      iszero\n      tag_587\n      jumpi\n        /* \"#utility.yul\":8921:8939   */\n      tag_587\n      tag_508\n      jump\t// in\n    tag_587:\n      pop\n        /* \"#utility.yul\":8961:8970   */\n      mul\n      swap1\n        /* \"#utility.yul\":8808:8976   */\n      jump\t// out\n        /* \"#utility.yul\":8981:9108   */\n    tag_509:\n        /* \"#utility.yul\":9042:9052   */\n      0x4e487b71\n        /* \"#utility.yul\":9037:9040   */\n      0xe0\n        /* \"#utility.yul\":9033:9053   */\n      shl\n        /* \"#utility.yul\":9030:9031   */\n      0x00\n        /* \"#utility.yul\":9023:9054   */\n      mstore\n        /* \"#utility.yul\":9073:9077   */\n      0x12\n        /* \"#utility.yul\":9070:9071   */\n      0x04\n        /* \"#utility.yul\":9063:9078   */\n      mstore\n        /* \"#utility.yul\":9097:9101   */\n      0x24\n        /* \"#utility.yul\":9094:9095   */\n      0x00\n        /* \"#utility.yul\":9087:9102   */\n      revert\n        /* \"#utility.yul\":9113:9233   */\n    tag_184:\n        /* \"#utility.yul\":9153:9154   */\n      0x00\n        /* \"#utility.yul\":9179:9180   */\n      dup3\n        /* \"#utility.yul\":9169:9204   */\n      tag_591\n      jumpi\n        /* \"#utility.yul\":9184:9202   */\n      tag_591\n      tag_509\n      jump\t// in\n    tag_591:\n      pop\n        /* \"#utility.yul\":9218:9227   */\n      div\n      swap1\n        /* \"#utility.yul\":9113:9233   */\n      jump\t// out\n        /* \"#utility.yul\":10063:10190   */\n    tag_199:\n        /* \"#utility.yul\":10124:10134   */\n      0x4e487b71\n        /* \"#utility.yul\":10119:10122   */\n      0xe0\n        /* \"#utility.yul\":10115:10135   */\n      shl\n        /* \"#utility.yul\":10112:10113   */\n      0x00\n        /* \"#utility.yul\":10105:10136   */\n      mstore\n        /* \"#utility.yul\":10155:10159   */\n      0x32\n        /* \"#utility.yul\":10152:10153   */\n      0x04\n        /* \"#utility.yul\":10145:10160   */\n      mstore\n        /* \"#utility.yul\":10179:10183   */\n      0x24\n        /* \"#utility.yul\":10176:10177   */\n      0x00\n        /* \"#utility.yul\":10169:10184   */\n      revert\n        /* \"#utility.yul\":11016:11372   */\n    tag_214:\n        /* \"#utility.yul\":11218:11220   */\n      0x20\n        /* \"#utility.yul\":11200:11221   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11237:11255   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":11230:11260   */\n      mstore\n        /* \"#utility.yul\":11296:11330   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":11291:11293   */\n      0x40\n        /* \"#utility.yul\":11276:11294   */\n      dup3\n      add\n        /* \"#utility.yul\":11269:11331   */\n      mstore\n        /* \"#utility.yul\":11363:11365   */\n      0x60\n        /* \"#utility.yul\":11348:11366   */\n      add\n      swap1\n        /* \"#utility.yul\":11016:11372   */\n      jump\t// out\n        /* \"#utility.yul\":11377:11512   */\n    tag_236:\n        /* \"#utility.yul\":11416:11419   */\n      0x00\n        /* \"#utility.yul\":11437:11454   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":11434:11477   */\n      tag_600\n      jumpi\n        /* \"#utility.yul\":11457:11475   */\n      tag_600\n      tag_508\n      jump\t// in\n    tag_600:\n      pop\n        /* \"#utility.yul\":11504:11505   */\n      0x01\n        /* \"#utility.yul\":11493:11506   */\n      add\n      swap1\n        /* \"#utility.yul\":11377:11512   */\n      jump\t// out\n        /* \"#utility.yul\":11863:12139   */\n    tag_278:\n        /* \"#utility.yul\":11994:11997   */\n      0x00\n        /* \"#utility.yul\":12032:12038   */\n      dup3\n        /* \"#utility.yul\":12026:12039   */\n      mload\n        /* \"#utility.yul\":12048:12101   */\n      tag_603\n        /* \"#utility.yul\":12094:12100   */\n      dup2\n        /* \"#utility.yul\":12089:12092   */\n      dup5\n        /* \"#utility.yul\":12082:12086   */\n      0x20\n        /* \"#utility.yul\":12074:12080   */\n      dup8\n        /* \"#utility.yul\":12070:12087   */\n      add\n        /* \"#utility.yul\":12048:12101   */\n      tag_504\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":12117:12133   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":11863:12139   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12144:12272   */\n    tag_283:\n        /* \"#utility.yul\":12184:12187   */\n      0x00\n        /* \"#utility.yul\":12215:12216   */\n      dup3\n        /* \"#utility.yul\":12211:12217   */\n      not\n        /* \"#utility.yul\":12208:12209   */\n      dup3\n        /* \"#utility.yul\":12205:12218   */\n      gt\n        /* \"#utility.yul\":12202:12241   */\n      iszero\n      tag_606\n      jumpi\n        /* \"#utility.yul\":12221:12239   */\n      tag_606\n      tag_508\n      jump\t// in\n    tag_606:\n      pop\n        /* \"#utility.yul\":12257:12266   */\n      add\n      swap1\n        /* \"#utility.yul\":12144:12272   */\n      jump\t// out\n        /* \"#utility.yul\":14187:14312   */\n    tag_331:\n        /* \"#utility.yul\":14227:14231   */\n      0x00\n        /* \"#utility.yul\":14255:14256   */\n      dup3\n        /* \"#utility.yul\":14252:14253   */\n      dup3\n        /* \"#utility.yul\":14249:14257   */\n      lt\n        /* \"#utility.yul\":14246:14280   */\n      iszero\n      tag_614\n      jumpi\n        /* \"#utility.yul\":14260:14278   */\n      tag_614\n      tag_508\n      jump\t// in\n    tag_614:\n      pop\n        /* \"#utility.yul\":14297:14306   */\n      sub\n      swap1\n        /* \"#utility.yul\":14187:14312   */\n      jump\t// out\n        /* \"#utility.yul\":14671:15085   */\n    tag_347:\n        /* \"#utility.yul\":14873:14875   */\n      0x20\n        /* \"#utility.yul\":14855:14876   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":14912:14914   */\n      0x32\n        /* \"#utility.yul\":14892:14910   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":14885:14915   */\n      mstore\n        /* \"#utility.yul\":14951:14985   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":14946:14948   */\n      0x40\n        /* \"#utility.yul\":14931:14949   */\n      dup3\n      add\n        /* \"#utility.yul\":14924:14986   */\n      mstore\n      shl(0x71, 0x31b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":15017:15019   */\n      0x60\n        /* \"#utility.yul\":15002:15020   */\n      dup3\n      add\n        /* \"#utility.yul\":14995:15043   */\n      mstore\n        /* \"#utility.yul\":15075:15078   */\n      0x80\n        /* \"#utility.yul\":15060:15079   */\n      add\n      swap1\n        /* \"#utility.yul\":14671:15085   */\n      jump\t// out\n        /* \"#utility.yul\":15508:15978   */\n    tag_363:\n        /* \"#utility.yul\":15687:15690   */\n      0x00\n        /* \"#utility.yul\":15725:15731   */\n      dup4\n        /* \"#utility.yul\":15719:15732   */\n      mload\n        /* \"#utility.yul\":15741:15794   */\n      tag_619\n        /* \"#utility.yul\":15787:15793   */\n      dup2\n        /* \"#utility.yul\":15782:15785   */\n      dup5\n        /* \"#utility.yul\":15775:15779   */\n      0x20\n        /* \"#utility.yul\":15767:15773   */\n      dup9\n        /* \"#utility.yul\":15763:15780   */\n      add\n        /* \"#utility.yul\":15741:15794   */\n      tag_504\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":15857:15870   */\n      dup4\n      mload\n        /* \"#utility.yul\":15816:15832   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":15879:15936   */\n      tag_620\n        /* \"#utility.yul\":15857:15870   */\n      dup2\n        /* \"#utility.yul\":15816:15832   */\n      dup4\n        /* \"#utility.yul\":15913:15917   */\n      0x20\n        /* \"#utility.yul\":15901:15918   */\n      dup9\n      add\n        /* \"#utility.yul\":15879:15936   */\n      tag_504\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":15952:15972   */\n      add\n      swap5\n        /* \"#utility.yul\":15508:15978   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16398:16887   */\n    tag_391:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":16667:16682   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":16649:16683   */\n      dup3\n      mstore\n        /* \"#utility.yul\":16719:16734   */\n      dup5\n      and\n        /* \"#utility.yul\":16714:16716   */\n      0x20\n        /* \"#utility.yul\":16699:16717   */\n      dup3\n      add\n        /* \"#utility.yul\":16692:16735   */\n      mstore\n        /* \"#utility.yul\":16766:16768   */\n      0x40\n        /* \"#utility.yul\":16751:16769   */\n      dup2\n      add\n        /* \"#utility.yul\":16744:16778   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":16814:16817   */\n      0x80\n        /* \"#utility.yul\":16809:16811   */\n      0x60\n        /* \"#utility.yul\":16794:16812   */\n      dup3\n      add\n        /* \"#utility.yul\":16787:16818   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":16592:16596   */\n      0x00\n      swap1\n        /* \"#utility.yul\":16835:16881   */\n      tag_623\n      swap1\n        /* \"#utility.yul\":16861:16880   */\n      dup4\n      add\n        /* \"#utility.yul\":16853:16859   */\n      dup5\n        /* \"#utility.yul\":16835:16881   */\n      tag_505\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":16827:16881   */\n      swap7\n        /* \"#utility.yul\":16398:16887   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16892:17141   */\n    tag_394:\n        /* \"#utility.yul\":16961:16967   */\n      0x00\n        /* \"#utility.yul\":17014:17016   */\n      0x20\n        /* \"#utility.yul\":17002:17011   */\n      dup3\n        /* \"#utility.yul\":16993:17000   */\n      dup5\n        /* \"#utility.yul\":16989:17012   */\n      sub\n        /* \"#utility.yul\":16985:17017   */\n      slt\n        /* \"#utility.yul\":16982:17034   */\n      iszero\n      tag_625\n      jumpi\n        /* \"#utility.yul\":17030:17031   */\n      0x00\n        /* \"#utility.yul\":17027:17028   */\n      dup1\n        /* \"#utility.yul\":17020:17032   */\n      revert\n        /* \"#utility.yul\":16982:17034   */\n    tag_625:\n        /* \"#utility.yul\":17062:17071   */\n      dup2\n        /* \"#utility.yul\":17056:17072   */\n      mload\n        /* \"#utility.yul\":17081:17111   */\n      tag_414\n        /* \"#utility.yul\":17105:17110   */\n      dup2\n        /* \"#utility.yul\":17081:17111   */\n      tag_503\n      jump\t// in\n        /* \"#utility.yul\":17562:17674   */\n    tag_456:\n        /* \"#utility.yul\":17594:17595   */\n      0x00\n        /* \"#utility.yul\":17620:17621   */\n      dup3\n        /* \"#utility.yul\":17610:17645   */\n      tag_630\n      jumpi\n        /* \"#utility.yul\":17625:17643   */\n      tag_630\n      tag_509\n      jump\t// in\n    tag_630:\n      pop\n        /* \"#utility.yul\":17659:17668   */\n      mod\n      swap1\n        /* \"#utility.yul\":17562:17674   */\n      jump\t// out\n        /* \"#utility.yul\":18397:18524   */\n    tag_489:\n        /* \"#utility.yul\":18458:18468   */\n      0x4e487b71\n        /* \"#utility.yul\":18453:18456   */\n      0xe0\n        /* \"#utility.yul\":18449:18469   */\n      shl\n        /* \"#utility.yul\":18446:18447   */\n      0x00\n        /* \"#utility.yul\":18439:18470   */\n      mstore\n        /* \"#utility.yul\":18489:18493   */\n      0x31\n        /* \"#utility.yul\":18486:18487   */\n      0x04\n        /* \"#utility.yul\":18479:18494   */\n      mstore\n        /* \"#utility.yul\":18513:18517   */\n      0x24\n        /* \"#utility.yul\":18510:18511   */\n      0x00\n        /* \"#utility.yul\":18503:18518   */\n      revert\n    stop\n    data_9962ece65b578af633a4cd71e7e539261ebe22823aa4ca702ec34245d8300d7d 68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f\n\n    auxdata: 0xa26469706673582212209d95ea38c2c77b39cfcd8e925b27c1806334bc119a0d8dabc131bcb9336eaec564736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_362": {
									"entryPoint": null,
									"id": 362,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_49": {
									"entryPoint": null,
									"id": 49,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_506": {
									"entryPoint": null,
									"id": 506,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_2274": {
									"entryPoint": 228,
									"id": 2274,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_442": {
									"entryPoint": 232,
									"id": 442,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_addresst_uint256_fromMemory": {
									"entryPoint": 478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:752:15",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:15",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "112:253:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "158:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "167:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "170:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "160:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "160:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "160:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "133:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "142:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "129:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "129:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "154:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "125:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "125:32:15"
															},
															"nodeType": "YulIf",
															"src": "122:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "183:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "202:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "196:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "196:16:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "187:5:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "275:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "284:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "287:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "277:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "277:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "277:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "234:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "245:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "260:3:15",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "265:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "256:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "256:11:15"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "269:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "252:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "252:19:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "241:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "241:31:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "231:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "231:42:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "224:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:50:15"
															},
															"nodeType": "YulIf",
															"src": "221:70:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "300:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "310:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "300:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "324:35:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "344:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "355:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "340:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "340:18:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "334:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "334:25:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "324:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "70:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "81:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "93:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "101:6:15",
														"type": ""
													}
												],
												"src": "14:351:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "425:325:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "435:22:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "449:1:15",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "452:4:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "445:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "445:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "435:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "466:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "496:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "502:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "492:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "492:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "470:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "543:31:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "545:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "559:6:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "567:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "555:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "555:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "545:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "523:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "516:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:26:15"
															},
															"nodeType": "YulIf",
															"src": "513:61:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "633:111:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "654:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "661:3:15",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "666:10:15",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "657:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "657:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "647:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "647:31:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "647:31:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "698:1:15",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "701:4:15",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "691:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "691:15:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "691:15:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "726:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "729:4:15",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "719:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "719:15:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "719:15:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "589:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "612:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "620:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "609:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "609:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "586:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "586:38:15"
															},
															"nodeType": "YulIf",
															"src": "583:161:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "405:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "414:6:15",
														"type": ""
													}
												],
												"src": "370:380:15"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := mload(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620023bb380380620023bb8339810160408190526200003491620001de565b6040518060400160405280600a81526020016914d85b5c1b194813919560b21b8152506040518060400160405280600381526020016213919560ea1b8152506200008d62000087620000e460201b60201c565b620000e8565b8151620000a290600190602085019062000138565b508051620000b890600290602084019062000138565b505050600e55600d80546001600160a01b0319166001600160a01b039290921691909117905562000256565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805462000146906200021a565b90600052602060002090601f0160209004810192826200016a5760008555620001b5565b82601f106200018557805160ff1916838001178555620001b5565b82800160010185558215620001b5579182015b82811115620001b557825182559160200191906001019062000198565b50620001c3929150620001c7565b5090565b5b80821115620001c35760008155600101620001c8565b60008060408385031215620001f257600080fd5b82516001600160a01b03811681146200020a57600080fd5b6020939093015192949293505050565b600181811c908216806200022f57607f821691505b6020821081036200025057634e487b7160e01b600052602260045260246000fd5b50919050565b61215580620002666000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c806370a08231116100de578063a3a51bd511610097578063c87b56dd11610071578063c87b56dd14610363578063d0def52114610376578063e985e9c514610389578063f2fde38b146103c557600080fd5b8063a3a51bd51461032c578063b51437151461033d578063b88d4fde1461035057600080fd5b806370a08231146102c5578063715018a6146102d85780638462151c146102e05780638da5cb5b1461030057806395d89b4114610311578063a22cb4651461031957600080fd5b806323b872dd1161014b57806332cb6b0c1161012557806332cb6b0c1461028357806342842e0e1461028c5780634f6ccce71461029f5780636352211e146102b257600080fd5b806323b872dd1461022b5780632a55205a1461023e5780632f745c591461027057600080fd5b806301ffc9a71461019357806306fdde03146101bb578063081812fc146101d0578063095ea7b3146101fb57806318160ddd146102105780632175c99014610222575b600080fd5b6101a66101a1366004611ae2565b6103d8565b60405190151581526020015b60405180910390f35b6101c3610403565b6040516101b29190611b57565b6101e36101de366004611b6a565b610495565b6040516001600160a01b0390911681526020016101b2565b61020e610209366004611b9f565b610522565b005b6009545b6040519081526020016101b2565b610214600e5481565b61020e610239366004611bc9565b610637565b61025161024c366004611c05565b610668565b604080516001600160a01b0390931683526020830191909152016101b2565b61021461027e366004611b9f565b61069e565b610214611e6181565b61020e61029a366004611bc9565b610734565b6102146102ad366004611b6a565b61074f565b6101e36102c0366004611b6a565b6107e2565b6102146102d3366004611c27565b610859565b61020e6108e0565b6102f36102ee366004611c27565b610916565b6040516101b29190611c42565b6000546001600160a01b03166101e3565b6101c36109d7565b61020e610327366004611c86565b6109e6565b600d546001600160a01b03166101e3565b61020e61034b366004611c27565b6109f5565b61020e61035e366004611d4e565b610a5c565b6101c3610371366004611b6a565b610a94565b610214610384366004611dca565b610a9f565b6101a6610397366004611e2c565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b61020e6103d3366004611c27565b610bfe565b60006001600160e01b0319821663152a902d60e11b14806103fd57506103fd82610c99565b92915050565b60606001805461041290611e5f565b80601f016020809104026020016040519081016040528092919081815260200182805461043e90611e5f565b801561048b5780601f106104605761010080835404028352916020019161048b565b820191906000526020600020905b81548152906001019060200180831161046e57829003601f168201915b5050505050905090565b60006104a082610cbe565b6105065760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600560205260409020546001600160a01b031690565b600061052d826107e2565b9050806001600160a01b0316836001600160a01b03160361059a5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016104fd565b336001600160a01b03821614806105b657506105b68133610397565b6106285760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016104fd565b6106328383610cdb565b505050565b6106413382610d49565b61065d5760405162461bcd60e51b81526004016104fd90611e99565b610632838383610e33565b60008060006064600e548561067d9190611f00565b6106879190611f35565b600d546001600160a01b0316969095509350505050565b60006106a983610859565b821061070b5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016104fd565b506001600160a01b03919091166000908152600760209081526040808320938352929052205490565b61063283838360405180602001604052806000815250610a5c565b600061075a60095490565b82106107bd5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016104fd565b600982815481106107d0576107d0611f49565b90600052602060002001549050919050565b6000818152600360205260408120546001600160a01b0316806103fd5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016104fd565b60006001600160a01b0382166108c45760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016104fd565b506001600160a01b031660009081526004602052604090205490565b6000546001600160a01b0316331461090a5760405162461bcd60e51b81526004016104fd90611f5f565b6109146000610fda565b565b6060600061092383610859565b905060008167ffffffffffffffff81111561094057610940611cc2565b604051908082528060200260200182016040528015610969578160200160208202803683370190505b5090508160000361098b57505060408051600081526020810190915292915050565b60005b828110156109cf576109a0858261069e565b8282815181106109b2576109b2611f49565b6020908102919091010152806109c781611f94565b91505061098e565b509392505050565b60606002805461041290611e5f565b6109f133838361102a565b5050565b6000546001600160a01b03163314610a1f5760405162461bcd60e51b81526004016104fd90611f5f565b600d546001600160a01b0390811690821603610a3a57600080fd5b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b610a663383610d49565b610a825760405162461bcd60e51b81526004016104fd90611e99565b610a8e848484846110f8565b50505050565b60606103fd8261112b565b600080546001600160a01b03163314610aca5760405162461bcd60e51b81526004016104fd90611f5f565b611e61610ad660095490565b1115610b185760405162461bcd60e51b8152602060048201526011602482015270105b1b081d1bdad95b9cc81b5a5b9d1959607a1b60448201526064016104fd565b6000825111610b2657600080fd5b600c82604051610b369190611fad565b9081526040519081900360200190205460ff16600103610b5557600080fd5b6001600c83604051610b679190611fad565b908152604051908190036020019020805460ff9290921660ff199092169190911790556000610b9560095490565b610ba0906001611fc9565b9050610bac848261128c565b610bb681846112a6565b604080518281526001600160a01b03861660208201527ff3cea5493d790af0133817606f7350a91d7f154ea52eaa79d179d4d231e50102910160405180910390a19392505050565b6000546001600160a01b03163314610c285760405162461bcd60e51b81526004016104fd90611f5f565b6001600160a01b038116610c8d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104fd565b610c9681610fda565b50565b60006001600160e01b0319821663780e9d6360e01b14806103fd57506103fd82611331565b6000908152600360205260409020546001600160a01b0316151590565b600081815260056020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610d10826107e2565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610d5482610cbe565b610db55760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016104fd565b6000610dc0836107e2565b9050806001600160a01b0316846001600160a01b03161480610e0757506001600160a01b0380821660009081526006602090815260408083209388168352929052205460ff165b80610e2b5750836001600160a01b0316610e2084610495565b6001600160a01b0316145b949350505050565b826001600160a01b0316610e46826107e2565b6001600160a01b031614610eaa5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016104fd565b6001600160a01b038216610f0c5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016104fd565b610f17838383611381565b610f22600082610cdb565b6001600160a01b0383166000908152600460205260408120805460019290610f4b908490611fe1565b90915550506001600160a01b0382166000908152600460205260408120805460019290610f79908490611fc9565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b816001600160a01b0316836001600160a01b03160361108b5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104fd565b6001600160a01b03838116600081815260066020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611103848484610e33565b61110f8484848461138c565b610a8e5760405162461bcd60e51b81526004016104fd90611ff8565b606061113682610cbe565b61119c5760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b60648201526084016104fd565b6000828152600b6020526040812080546111b590611e5f565b80601f01602080910402602001604051908101604052809291908181526020018280546111e190611e5f565b801561122e5780601f106112035761010080835404028352916020019161122e565b820191906000526020600020905b81548152906001019060200180831161121157829003601f168201915b50505050509050600061123f61148d565b90508051600003611251575092915050565b81511561128357808260405160200161126b92919061204a565b60405160208183030381529060405292505050919050565b610e2b846114ad565b6109f1828260405180602001604052806000815250611578565b6112af82610cbe565b6113125760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016104fd565b6000828152600b60209081526040909120825161063292840190611a33565b60006001600160e01b031982166380ac58cd60e01b148061136257506001600160e01b03198216635b5e139f60e01b145b806103fd57506301ffc9a760e01b6001600160e01b03198316146103fd565b6106328383836115ab565b60006001600160a01b0384163b1561148257604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906113d0903390899088908890600401612079565b6020604051808303816000875af192505050801561140b575060408051601f3d908101601f19168201909252611408918101906120b6565b60015b611468573d808015611439576040519150601f19603f3d011682016040523d82523d6000602084013e61143e565b606091505b5080516000036114605760405162461bcd60e51b81526004016104fd90611ff8565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610e2b565b506001949350505050565b60606040518060600160405280602281526020016120fe60229139905090565b60606114b882610cbe565b61151c5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016104fd565b600061152661148d565b905060008151116115465760405180602001604052806000815250611571565b8061155084611663565b60405160200161156192919061204a565b6040516020818303038152906040525b9392505050565b6115828383611764565b61158f600084848461138c565b6106325760405162461bcd60e51b81526004016104fd90611ff8565b6001600160a01b0383166116065761160181600980546000838152600a60205260408120829055600182018355919091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0155565b611629565b816001600160a01b0316836001600160a01b0316146116295761162983826118a3565b6001600160a01b0382166116405761063281611940565b826001600160a01b0316826001600160a01b0316146106325761063282826119ef565b60608160000361168a5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156116b4578061169e81611f94565b91506116ad9050600a83611f35565b915061168e565b60008167ffffffffffffffff8111156116cf576116cf611cc2565b6040519080825280601f01601f1916602001820160405280156116f9576020820181803683370190505b5090505b8415610e2b5761170e600183611fe1565b915061171b600a866120d3565b611726906030611fc9565b60f81b81838151811061173b5761173b611f49565b60200101906001600160f81b031916908160001a90535061175d600a86611f35565b94506116fd565b6001600160a01b0382166117ba5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104fd565b6117c381610cbe565b156118105760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104fd565b61181c60008383611381565b6001600160a01b0382166000908152600460205260408120805460019290611845908490611fc9565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600060016118b084610859565b6118ba9190611fe1565b60008381526008602052604090205490915080821461190d576001600160a01b03841660009081526007602090815260408083208584528252808320548484528184208190558352600890915290208190555b5060009182526008602090815260408084208490556001600160a01b039094168352600781528383209183525290812055565b60095460009061195290600190611fe1565b6000838152600a60205260408120546009805493945090928490811061197a5761197a611f49565b90600052602060002001549050806009838154811061199b5761199b611f49565b6000918252602080832090910192909255828152600a909152604080822084905585825281205560098054806119d3576119d36120e7565b6001900381819060005260206000200160009055905550505050565b60006119fa83610859565b6001600160a01b039093166000908152600760209081526040808320868452825280832085905593825260089052919091209190915550565b828054611a3f90611e5f565b90600052602060002090601f016020900481019282611a615760008555611aa7565b82601f10611a7a57805160ff1916838001178555611aa7565b82800160010185558215611aa7579182015b82811115611aa7578251825591602001919060010190611a8c565b50611ab3929150611ab7565b5090565b5b80821115611ab35760008155600101611ab8565b6001600160e01b031981168114610c9657600080fd5b600060208284031215611af457600080fd5b813561157181611acc565b60005b83811015611b1a578181015183820152602001611b02565b83811115610a8e5750506000910152565b60008151808452611b43816020860160208601611aff565b601f01601f19169290920160200192915050565b6020815260006115716020830184611b2b565b600060208284031215611b7c57600080fd5b5035919050565b80356001600160a01b0381168114611b9a57600080fd5b919050565b60008060408385031215611bb257600080fd5b611bbb83611b83565b946020939093013593505050565b600080600060608486031215611bde57600080fd5b611be784611b83565b9250611bf560208501611b83565b9150604084013590509250925092565b60008060408385031215611c1857600080fd5b50508035926020909101359150565b600060208284031215611c3957600080fd5b61157182611b83565b6020808252825182820181905260009190848201906040850190845b81811015611c7a57835183529284019291840191600101611c5e565b50909695505050505050565b60008060408385031215611c9957600080fd5b611ca283611b83565b915060208301358015158114611cb757600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611cf357611cf3611cc2565b604051601f8501601f19908116603f01168101908282118183101715611d1b57611d1b611cc2565b81604052809350858152868686011115611d3457600080fd5b858560208301376000602087830101525050509392505050565b60008060008060808587031215611d6457600080fd5b611d6d85611b83565b9350611d7b60208601611b83565b925060408501359150606085013567ffffffffffffffff811115611d9e57600080fd5b8501601f81018713611daf57600080fd5b611dbe87823560208401611cd8565b91505092959194509250565b60008060408385031215611ddd57600080fd5b611de683611b83565b9150602083013567ffffffffffffffff811115611e0257600080fd5b8301601f81018513611e1357600080fd5b611e2285823560208401611cd8565b9150509250929050565b60008060408385031215611e3f57600080fd5b611e4883611b83565b9150611e5660208401611b83565b90509250929050565b600181811c90821680611e7357607f821691505b602082108103611e9357634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615611f1a57611f1a611eea565b500290565b634e487b7160e01b600052601260045260246000fd5b600082611f4457611f44611f1f565b500490565b634e487b7160e01b600052603260045260246000fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060018201611fa657611fa6611eea565b5060010190565b60008251611fbf818460208701611aff565b9190910192915050565b60008219821115611fdc57611fdc611eea565b500190565b600082821015611ff357611ff3611eea565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000835161205c818460208801611aff565b835190830190612070818360208801611aff565b01949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906120ac90830184611b2b565b9695505050505050565b6000602082840312156120c857600080fd5b815161157181611acc565b6000826120e2576120e2611f1f565b500690565b634e487b7160e01b600052603160045260246000fdfe68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732fa26469706673582212209d95ea38c2c77b39cfcd8e925b27c1806334bc119a0d8dabc131bcb9336eaec564736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x23BB CODESIZE SUB DUP1 PUSH3 0x23BB DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x14D85B5C1B1948139195 PUSH1 0xB2 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x139195 PUSH1 0xEA SHL DUP2 MSTORE POP PUSH3 0x8D PUSH3 0x87 PUSH3 0xE4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xE8 JUMP JUMPDEST DUP2 MLOAD PUSH3 0xA2 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x138 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0xB8 SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x138 JUMP JUMPDEST POP POP POP PUSH1 0xE SSTORE PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH3 0x256 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x146 SWAP1 PUSH3 0x21A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x16A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x1B5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x185 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1B5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1B5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1B5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x198 JUMP JUMPDEST POP PUSH3 0x1C3 SWAP3 SWAP2 POP PUSH3 0x1C7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x1C3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1C8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD MLOAD SWAP3 SWAP5 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x22F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x250 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2155 DUP1 PUSH3 0x266 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA3A51BD5 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xD0DEF521 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA3A51BD5 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0xB5143715 EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x8462151C EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x32CB6B0C GT PUSH2 0x125 JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x2A55205A EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x2175C990 EQ PUSH2 0x222 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A6 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AE2 JUMP JUMPDEST PUSH2 0x3D8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH2 0x403 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH2 0x1E3 PUSH2 0x1DE CALLDATASIZE PUSH1 0x4 PUSH2 0x1B6A JUMP JUMPDEST PUSH2 0x495 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x209 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B9F JUMP JUMPDEST PUSH2 0x522 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x9 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x214 PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BC9 JUMP JUMPDEST PUSH2 0x637 JUMP JUMPDEST PUSH2 0x251 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x1C05 JUMP JUMPDEST PUSH2 0x668 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x214 PUSH2 0x27E CALLDATASIZE PUSH1 0x4 PUSH2 0x1B9F JUMP JUMPDEST PUSH2 0x69E JUMP JUMPDEST PUSH2 0x214 PUSH2 0x1E61 DUP2 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0x1BC9 JUMP JUMPDEST PUSH2 0x734 JUMP JUMPDEST PUSH2 0x214 PUSH2 0x2AD CALLDATASIZE PUSH1 0x4 PUSH2 0x1B6A JUMP JUMPDEST PUSH2 0x74F JUMP JUMPDEST PUSH2 0x1E3 PUSH2 0x2C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B6A JUMP JUMPDEST PUSH2 0x7E2 JUMP JUMPDEST PUSH2 0x214 PUSH2 0x2D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C27 JUMP JUMPDEST PUSH2 0x859 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x8E0 JUMP JUMPDEST PUSH2 0x2F3 PUSH2 0x2EE CALLDATASIZE PUSH1 0x4 PUSH2 0x1C27 JUMP JUMPDEST PUSH2 0x916 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E3 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x9D7 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x327 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C86 JUMP JUMPDEST PUSH2 0x9E6 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E3 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x34B CALLDATASIZE PUSH1 0x4 PUSH2 0x1C27 JUMP JUMPDEST PUSH2 0x9F5 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x35E CALLDATASIZE PUSH1 0x4 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0xA5C JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x371 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B6A JUMP JUMPDEST PUSH2 0xA94 JUMP JUMPDEST PUSH2 0x214 PUSH2 0x384 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DCA JUMP JUMPDEST PUSH2 0xA9F JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x397 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E2C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x3D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C27 JUMP JUMPDEST PUSH2 0xBFE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x152A902D PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x3FD JUMPI POP PUSH2 0x3FD DUP3 PUSH2 0xC99 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x412 SWAP1 PUSH2 0x1E5F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x43E SWAP1 PUSH2 0x1E5F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x48B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x460 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x48B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x46E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A0 DUP3 PUSH2 0xCBE JUMP JUMPDEST PUSH2 0x506 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52D DUP3 PUSH2 0x7E2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x59A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x5B6 JUMPI POP PUSH2 0x5B6 DUP2 CALLER PUSH2 0x397 JUMP JUMPDEST PUSH2 0x628 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH2 0x632 DUP4 DUP4 PUSH2 0xCDB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x641 CALLER DUP3 PUSH2 0xD49 JUMP JUMPDEST PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x1E99 JUMP JUMPDEST PUSH2 0x632 DUP4 DUP4 DUP4 PUSH2 0xE33 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x64 PUSH1 0xE SLOAD DUP6 PUSH2 0x67D SWAP2 SWAP1 PUSH2 0x1F00 JUMP JUMPDEST PUSH2 0x687 SWAP2 SWAP1 PUSH2 0x1F35 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6A9 DUP4 PUSH2 0x859 JUMP JUMPDEST DUP3 LT PUSH2 0x70B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x74206F6620626F756E6473 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x632 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xA5C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x75A PUSH1 0x9 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0x7BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x7574206F6620626F756E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x7D0 JUMPI PUSH2 0x7D0 PUSH2 0x1F49 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x3FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x90A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x1F5F JUMP JUMPDEST PUSH2 0x914 PUSH1 0x0 PUSH2 0xFDA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x923 DUP4 PUSH2 0x859 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x940 JUMPI PUSH2 0x940 PUSH2 0x1CC2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x969 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 PUSH1 0x0 SUB PUSH2 0x98B JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9CF JUMPI PUSH2 0x9A0 DUP6 DUP3 PUSH2 0x69E JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9B2 JUMPI PUSH2 0x9B2 PUSH2 0x1F49 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x9C7 DUP2 PUSH2 0x1F94 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x98E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x412 SWAP1 PUSH2 0x1E5F JUMP JUMPDEST PUSH2 0x9F1 CALLER DUP4 DUP4 PUSH2 0x102A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x1F5F JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP3 AND SUB PUSH2 0xA3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xA66 CALLER DUP4 PUSH2 0xD49 JUMP JUMPDEST PUSH2 0xA82 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x1E99 JUMP JUMPDEST PUSH2 0xA8E DUP5 DUP5 DUP5 DUP5 PUSH2 0x10F8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3FD DUP3 PUSH2 0x112B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xACA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x1F5F JUMP JUMPDEST PUSH2 0x1E61 PUSH2 0xAD6 PUSH1 0x9 SLOAD SWAP1 JUMP JUMPDEST GT ISZERO PUSH2 0xB18 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x105B1B081D1BDAD95B9CC81B5A5B9D1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT PUSH2 0xB26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC DUP3 PUSH1 0x40 MLOAD PUSH2 0xB36 SWAP2 SWAP1 PUSH2 0x1FAD JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x1 SUB PUSH2 0xB55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC DUP4 PUSH1 0x40 MLOAD PUSH2 0xB67 SWAP2 SWAP1 PUSH2 0x1FAD JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0xFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x0 PUSH2 0xB95 PUSH1 0x9 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xBA0 SWAP1 PUSH1 0x1 PUSH2 0x1FC9 JUMP JUMPDEST SWAP1 POP PUSH2 0xBAC DUP5 DUP3 PUSH2 0x128C JUMP JUMPDEST PUSH2 0xBB6 DUP2 DUP5 PUSH2 0x12A6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xF3CEA5493D790AF0133817606F7350A91D7F154EA52EAA79D179D4D231E50102 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x1F5F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH2 0xC96 DUP2 PUSH2 0xFDA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3FD JUMPI POP PUSH2 0x3FD DUP3 PUSH2 0x1331 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0xD10 DUP3 PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD54 DUP3 PUSH2 0xCBE JUMP JUMPDEST PUSH2 0xDB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC0 DUP4 PUSH2 0x7E2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xE07 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0xE2B JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE20 DUP5 PUSH2 0x495 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE46 DUP3 PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xEAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH2 0xF17 DUP4 DUP4 DUP4 PUSH2 0x1381 JUMP JUMPDEST PUSH2 0xF22 PUSH1 0x0 DUP3 PUSH2 0xCDB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xF4B SWAP1 DUP5 SWAP1 PUSH2 0x1FE1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xF79 SWAP1 DUP5 SWAP1 PUSH2 0x1FC9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x108B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1103 DUP5 DUP5 DUP5 PUSH2 0xE33 JUMP JUMPDEST PUSH2 0x110F DUP5 DUP5 DUP5 DUP5 PUSH2 0x138C JUMP JUMPDEST PUSH2 0xA8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x1FF8 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1136 DUP3 PUSH2 0xCBE JUMP JUMPDEST PUSH2 0x119C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920717565727920666F7220 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x3737B732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x79 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x11B5 SWAP1 PUSH2 0x1E5F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x11E1 SWAP1 PUSH2 0x1E5F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x122E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1203 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x122E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1211 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x123F PUSH2 0x148D JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1251 JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x1283 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x126B SWAP3 SWAP2 SWAP1 PUSH2 0x204A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE2B DUP5 PUSH2 0x14AD JUMP JUMPDEST PUSH2 0x9F1 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1578 JUMP JUMPDEST PUSH2 0x12AF DUP3 PUSH2 0xCBE JUMP JUMPDEST PUSH2 0x1312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x32BC34B9BA32B73A103A37B5B2B7 PUSH1 0x91 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD PUSH2 0x632 SWAP3 DUP5 ADD SWAP1 PUSH2 0x1A33 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x1362 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x3FD JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x3FD JUMP JUMPDEST PUSH2 0x632 DUP4 DUP4 DUP4 PUSH2 0x15AB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x1482 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x13D0 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2079 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x140B JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1408 SWAP2 DUP2 ADD SWAP1 PUSH2 0x20B6 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1468 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1439 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x143E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1460 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x1FF8 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0xE2B JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20FE PUSH1 0x22 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x14B8 DUP3 PUSH2 0xCBE JUMP JUMPDEST PUSH2 0x151C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1526 PUSH2 0x148D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1546 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1571 JUMP JUMPDEST DUP1 PUSH2 0x1550 DUP5 PUSH2 0x1663 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1561 SWAP3 SWAP2 SWAP1 PUSH2 0x204A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1582 DUP4 DUP4 PUSH2 0x1764 JUMP JUMPDEST PUSH2 0x158F PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x138C JUMP JUMPDEST PUSH2 0x632 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x1FF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1606 JUMPI PUSH2 0x1601 DUP2 PUSH1 0x9 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF ADD SSTORE JUMP JUMPDEST PUSH2 0x1629 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1629 JUMPI PUSH2 0x1629 DUP4 DUP3 PUSH2 0x18A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1640 JUMPI PUSH2 0x632 DUP2 PUSH2 0x1940 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x632 JUMPI PUSH2 0x632 DUP3 DUP3 PUSH2 0x19EF JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0x168A JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x16B4 JUMPI DUP1 PUSH2 0x169E DUP2 PUSH2 0x1F94 JUMP JUMPDEST SWAP2 POP PUSH2 0x16AD SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x1F35 JUMP JUMPDEST SWAP2 POP PUSH2 0x168E JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16CF JUMPI PUSH2 0x16CF PUSH2 0x1CC2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x16F9 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0xE2B JUMPI PUSH2 0x170E PUSH1 0x1 DUP4 PUSH2 0x1FE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x171B PUSH1 0xA DUP7 PUSH2 0x20D3 JUMP JUMPDEST PUSH2 0x1726 SWAP1 PUSH1 0x30 PUSH2 0x1FC9 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x173B JUMPI PUSH2 0x173B PUSH2 0x1F49 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x175D PUSH1 0xA DUP7 PUSH2 0x1F35 JUMP JUMPDEST SWAP5 POP PUSH2 0x16FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x17BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH2 0x17C3 DUP2 PUSH2 0xCBE JUMP JUMPDEST ISZERO PUSH2 0x1810 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH2 0x181C PUSH1 0x0 DUP4 DUP4 PUSH2 0x1381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1845 SWAP1 DUP5 SWAP1 PUSH2 0x1FC9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x18B0 DUP5 PUSH2 0x859 JUMP JUMPDEST PUSH2 0x18BA SWAP2 SWAP1 PUSH2 0x1FE1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x190D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x8 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x7 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1952 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1FE1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x9 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x197A JUMPI PUSH2 0x197A PUSH2 0x1F49 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x9 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x199B JUMPI PUSH2 0x199B PUSH2 0x1F49 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0xA SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x9 DUP1 SLOAD DUP1 PUSH2 0x19D3 JUMPI PUSH2 0x19D3 PUSH2 0x20E7 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19FA DUP4 PUSH2 0x859 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x8 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1A3F SWAP1 PUSH2 0x1E5F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1A61 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1AA7 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1A7A JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1AA7 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1AA7 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1AA7 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1A8C JUMP JUMPDEST POP PUSH2 0x1AB3 SWAP3 SWAP2 POP PUSH2 0x1AB7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1AB3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1AB8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xC96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1571 DUP2 PUSH2 0x1ACC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B1A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B02 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xA8E JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1B43 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1571 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B2B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1B9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BBB DUP4 PUSH2 0x1B83 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BE7 DUP5 PUSH2 0x1B83 JUMP JUMPDEST SWAP3 POP PUSH2 0x1BF5 PUSH1 0x20 DUP6 ADD PUSH2 0x1B83 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1571 DUP3 PUSH2 0x1B83 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C7A JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1C5E JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CA2 DUP4 PUSH2 0x1B83 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1CB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x1CF3 JUMPI PUSH2 0x1CF3 PUSH2 0x1CC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1D1B JUMPI PUSH2 0x1D1B PUSH2 0x1CC2 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x1D34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1D64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D6D DUP6 PUSH2 0x1B83 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D7B PUSH1 0x20 DUP7 ADD PUSH2 0x1B83 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x1DAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DBE DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1CD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DE6 DUP4 PUSH2 0x1B83 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1E13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E22 DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1CD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E48 DUP4 PUSH2 0x1B83 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E56 PUSH1 0x20 DUP5 ADD PUSH2 0x1B83 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1E73 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1E93 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1F1A JUMPI PUSH2 0x1F1A PUSH2 0x1EEA JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1F44 JUMPI PUSH2 0x1F44 PUSH2 0x1F1F JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1FA6 JUMPI PUSH2 0x1FA6 PUSH2 0x1EEA JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1FBF DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1AFF JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1FDC JUMPI PUSH2 0x1FDC PUSH2 0x1EEA JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1FF3 JUMPI PUSH2 0x1FF3 PUSH2 0x1EEA JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x205C DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1AFF JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x2070 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1AFF JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x20AC SWAP1 DUP4 ADD DUP5 PUSH2 0x1B2B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1571 DUP2 PUSH2 0x1ACC JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x20E2 JUMPI PUSH2 0x20E2 PUSH2 0x1F1F JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH9 0x747470733A2F2F6761 PUSH21 0x657761792E70696E6174612E636C6F75642F697066 PUSH20 0x2FA26469706673582212209D95EA38C2C77B39CF 0xCD DUP15 SWAP3 JUMPDEST 0x27 0xC1 DUP1 PUSH4 0x34BC119A 0xD DUP14 0xAB 0xC1 BALANCE 0xBC 0xB9 CALLER PUSH15 0xAEC564736F6C634300080D00330000 ",
							"sourceMap": "866:4719:0:-:0;;;1389:233;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1390:113:3;;;;;;;;;;;;;-1:-1:-1;;;1390:113:3;;;;;;;;;;;;;;;;-1:-1:-1;;;1390:113:3;;;921:32:2;940:12;:10;;;:12;;:::i;:::-;921:18;:32::i;:::-;1456:13:3;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1479:17:3;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;;1506:25:0::1;:54:::0;1570:18:::1;:45:::0;;-1:-1:-1;;;;;;1570:45:0::1;-1:-1:-1::0;;;;;1570:45:0;;;::::1;::::0;;;::::1;::::0;;866:4719;;640:96:11;719:10;;640:96::o;2270:187:2:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:2;;;-1:-1:-1;;;;;;2378:17:2;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;866:4719:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;866:4719:0;;;-1:-1:-1;866:4719:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:351:15;93:6;101;154:2;142:9;133:7;129:23;125:32;122:52;;;170:1;167;160:12;122:52;196:16;;-1:-1:-1;;;;;241:31:15;;231:42;;221:70;;287:1;284;277:12;221:70;355:2;340:18;;;;334:25;310:5;;334:25;;-1:-1:-1;;;14:351:15:o;370:380::-;449:1;445:12;;;;492;;;513:61;;567:4;559:6;555:17;545:27;;513:61;620:2;612:6;609:14;589:18;586:38;583:161;;666:10;661:3;657:20;654:1;647:31;701:4;698:1;691:15;729:4;726:1;719:15;583:161;;370:380;;;:::o;:::-;866:4719:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@MAX_SUPPLY_19": {
									"entryPoint": null,
									"id": 19,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_addTokenToAllTokensEnumeration_1669": {
									"entryPoint": null,
									"id": 1669,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_addTokenToOwnerEnumeration_1649": {
									"entryPoint": 6639,
									"id": 1649,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_1308": {
									"entryPoint": null,
									"id": 1308,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1192": {
									"entryPoint": 3291,
									"id": 1192,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_59": {
									"entryPoint": 5261,
									"id": 59,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1297": {
									"entryPoint": null,
									"id": 1297,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1619": {
									"entryPoint": 5547,
									"id": 1619,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_80": {
									"entryPoint": 4993,
									"id": 80,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1286": {
									"entryPoint": 5004,
									"id": 1286,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_882": {
									"entryPoint": 3262,
									"id": 882,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_923": {
									"entryPoint": 3401,
									"id": 923,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_1033": {
									"entryPoint": 5988,
									"id": 1033,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_2274": {
									"entryPoint": null,
									"id": 2274,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_removeTokenFromAllTokensEnumeration_1780": {
									"entryPoint": 6464,
									"id": 1780,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_removeTokenFromOwnerEnumeration_1732": {
									"entryPoint": 6307,
									"id": 1732,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_938": {
									"entryPoint": 4748,
									"id": 938,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_967": {
									"entryPoint": 5496,
									"id": 967,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_safeTransfer_864": {
									"entryPoint": 4344,
									"id": 864,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1224": {
									"entryPoint": 4138,
									"id": 1224,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setTokenURI_1878": {
									"entryPoint": 4774,
									"id": 1878,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_442": {
									"entryPoint": 4058,
									"id": 442,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1168": {
									"entryPoint": 3635,
									"id": 1168,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_703": {
									"entryPoint": 1314,
									"id": 703,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_561": {
									"entryPoint": 2137,
									"id": 561,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_724": {
									"entryPoint": 1173,
									"id": 724,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_759": {
									"entryPoint": null,
									"id": 759,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1985": {
									"entryPoint": null,
									"id": 1985,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_321": {
									"entryPoint": 2719,
									"id": 321,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_599": {
									"entryPoint": 1027,
									"id": 599,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_589": {
									"entryPoint": 2018,
									"id": 589,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_371": {
									"entryPoint": null,
									"id": 371,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_399": {
									"entryPoint": 2272,
									"id": 399,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@royaltiesPercentageInBips_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@royaltiesReceiver_104": {
									"entryPoint": null,
									"id": 104,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@royaltyInfo_252": {
									"entryPoint": 1640,
									"id": 252,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@safeTransferFrom_805": {
									"entryPoint": 1844,
									"id": 805,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_835": {
									"entryPoint": 2652,
									"id": 835,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_741": {
									"entryPoint": 2534,
									"id": 741,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setRoyaltiesReceiver_123": {
									"entryPoint": 2549,
									"id": 123,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_1493": {
									"entryPoint": 3225,
									"id": 1493,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_164": {
									"entryPoint": 984,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2510": {
									"entryPoint": null,
									"id": 2510,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_537": {
									"entryPoint": 4913,
									"id": 537,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_609": {
									"entryPoint": 2519,
									"id": 609,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_2369": {
									"entryPoint": 5731,
									"id": 2369,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenByIndex_1555": {
									"entryPoint": 1871,
									"id": 1555,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenOfOwnerByIndex_1521": {
									"entryPoint": 1694,
									"id": 1521,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tokenURI_140": {
									"entryPoint": 2708,
									"id": 140,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1856": {
									"entryPoint": 4395,
									"id": 1856,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_651": {
									"entryPoint": 5293,
									"id": 651,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokensOfOwner_226": {
									"entryPoint": 2326,
									"id": 226,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_1532": {
									"entryPoint": null,
									"id": 1532,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_786": {
									"entryPoint": 1591,
									"id": 786,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_422": {
									"entryPoint": 3070,
									"id": 422,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 7043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_bytes": {
									"entryPoint": 7384,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 7502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_string_memory_ptr": {
									"entryPoint": 7626,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6882,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 7173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_string": {
									"entryPoint": 6955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8266,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8313,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8184,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2a400c07bb67a06c03f358edc1048982b27f79d13cec217cd075a5ae667872ec__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8031,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 6911,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 8084,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 8403,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7914,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7967,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 8423,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8009,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7362,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 6860,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:18526:15",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:15",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "58:87:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "103:3:15",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "108:10:15",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "71:51:15"
															},
															"nodeType": "YulIf",
															"src": "68:71:15"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "47:5:15",
														"type": ""
													}
												],
												"src": "14:131:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:176:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "265:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "274:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "277:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "261:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:32:15"
															},
															"nodeType": "YulIf",
															"src": "229:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "303:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "294:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "335:30:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "374:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "384:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "185:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "196:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "208:6:15",
														"type": ""
													}
												],
												"src": "150:245:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "495:92:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "505:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "528:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:41:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "540:41:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "464:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "475:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "486:4:15",
														"type": ""
													}
												],
												"src": "400:187:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "645:205:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "655:10:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "664:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "659:1:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "724:63:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "749:3:15"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "754:1:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "745:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "745:11:15"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "768:3:15"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "773:1:15"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "764:3:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "764:11:15"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "758:5:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "758:18:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "738:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "738:39:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "738:39:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "685:1:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "688:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "682:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "682:13:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "696:19:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "698:15:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "707:1:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "710:2:15",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "703:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:10:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "698:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "678:3:15",
																"statements": []
															},
															"src": "674:113:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "813:31:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "826:3:15"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "831:6:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "822:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "822:16:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "840:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "815:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "815:27:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "815:27:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "802:1:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "805:6:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "799:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "799:13:15"
															},
															"nodeType": "YulIf",
															"src": "796:48:15"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "623:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "628:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "633:6:15",
														"type": ""
													}
												],
												"src": "592:258:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "905:208:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "915:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "935:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "929:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "929:12:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "919:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "957:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "962:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "950:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "950:19:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "950:19:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1004:5:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1011:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1000:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1000:16:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1022:3:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1027:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1018:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1018:14:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1034:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "978:21:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "978:63:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "978:63:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1050:57:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1065:3:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1078:6:15"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1086:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1074:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1074:15:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1095:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1091:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1091:7:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1070:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1070:29:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1061:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1061:39:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1102:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1057:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1057:50:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1050:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "882:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "889:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "897:3:15",
														"type": ""
													}
												],
												"src": "855:258:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1239:99:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1256:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1267:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1249:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1249:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1249:21:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1279:53:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1305:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1317:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1328:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1287:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1287:45:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1279:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1208:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1219:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1230:4:15",
														"type": ""
													}
												],
												"src": "1118:220:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1413:110:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1459:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1468:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1471:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1461:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1461:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1461:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1434:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1443:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1430:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1430:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1455:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1426:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1426:32:15"
															},
															"nodeType": "YulIf",
															"src": "1423:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1484:33:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1507:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1494:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1494:23:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1484:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1379:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1390:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1402:6:15",
														"type": ""
													}
												],
												"src": "1343:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1629:102:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1639:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1651:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1647:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1647:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1639:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1681:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1696:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1712:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1717:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1708:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1708:11:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1721:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1704:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1704:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1692:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1692:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1674:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1674:51:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1674:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1598:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1609:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1620:4:15",
														"type": ""
													}
												],
												"src": "1528:203:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1785:124:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1795:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1817:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1804:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1804:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1795:5:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1887:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1896:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1899:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1889:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1889:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1889:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1846:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1857:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1872:3:15",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1877:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1868:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1868:11:15"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1881:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1864:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1864:19:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1853:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1853:31:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1843:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1843:42:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1836:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:50:15"
															},
															"nodeType": "YulIf",
															"src": "1833:70:15"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1764:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1775:5:15",
														"type": ""
													}
												],
												"src": "1736:173:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2001:167:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2047:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2056:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2059:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2049:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2049:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2049:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2022:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2031:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2043:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2014:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2014:32:15"
															},
															"nodeType": "YulIf",
															"src": "2011:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2072:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2101:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2082:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2082:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2072:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2120:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2147:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2158:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2143:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2130:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2130:32:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2120:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1959:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1970:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1982:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1990:6:15",
														"type": ""
													}
												],
												"src": "1914:254:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2274:76:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2284:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2296:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2307:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2292:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2292:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2284:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2326:9:15"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2337:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2319:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2319:25:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2319:25:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2243:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2254:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2265:4:15",
														"type": ""
													}
												],
												"src": "2173:177:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2459:224:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2505:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2514:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2507:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2507:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2507:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2480:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2489:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2476:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2476:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2501:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2472:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2472:32:15"
															},
															"nodeType": "YulIf",
															"src": "2469:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2530:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2559:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2540:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2540:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2530:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2578:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2611:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2622:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2607:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2607:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2588:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2588:38:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2578:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2635:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2662:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2673:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2658:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2658:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2645:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2645:32:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2635:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2409:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2420:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2432:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2440:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2448:6:15",
														"type": ""
													}
												],
												"src": "2355:328:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2775:161:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2821:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2830:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2833:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2823:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2823:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2823:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2796:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2805:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2792:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2792:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2817:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2788:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2788:32:15"
															},
															"nodeType": "YulIf",
															"src": "2785:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2846:33:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2869:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2856:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2856:23:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2846:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2888:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2915:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2926:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2911:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2911:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2898:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2898:32:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2888:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2733:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2744:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2756:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2764:6:15",
														"type": ""
													}
												],
												"src": "2688:248:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3070:145:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3080:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3092:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3103:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3088:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3088:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3080:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3122:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3137:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3153:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3158:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3149:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3149:11:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3162:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3145:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3145:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3133:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3133:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3115:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3115:51:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3115:51:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3186:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3197:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3182:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3182:18:15"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3202:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3175:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3175:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3175:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3031:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3042:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3050:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3061:4:15",
														"type": ""
													}
												],
												"src": "2941:274:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3290:116:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3336:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3345:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3348:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3338:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3338:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3338:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3311:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3320:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3307:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3307:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3332:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3303:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3303:32:15"
															},
															"nodeType": "YulIf",
															"src": "3300:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3361:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3390:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3371:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3371:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3361:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3256:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3267:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3279:6:15",
														"type": ""
													}
												],
												"src": "3220:186:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3562:481:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3572:12:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3582:2:15",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3576:2:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3593:32:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3611:9:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3622:2:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3607:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3607:18:15"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "3597:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3641:9:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3652:2:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3634:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3634:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3634:21:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3664:17:15",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "3675:6:15"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "3668:3:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3690:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3710:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3704:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3704:13:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3694:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "3733:6:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3741:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3726:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3726:22:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3726:22:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3757:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3768:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3779:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3764:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3764:18:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3757:3:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3791:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3809:6:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3817:2:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3805:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3805:15:15"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "3795:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3829:10:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3838:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3833:1:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3897:120:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3918:3:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "3929:6:15"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3923:5:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3923:13:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3911:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3911:26:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3911:26:15"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3950:19:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3961:3:15"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3966:2:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3957:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3957:12:15"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3950:3:15"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3982:25:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3996:6:15"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "4004:2:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3992:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3992:15:15"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3982:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3859:1:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3862:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3856:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3856:13:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3870:18:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3872:14:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3881:1:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3884:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3877:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3877:9:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3872:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3852:3:15",
																"statements": []
															},
															"src": "3848:169:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4026:11:15",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4034:3:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4026:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3531:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3542:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3553:4:15",
														"type": ""
													}
												],
												"src": "3411:632:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4132:263:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4178:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4187:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4190:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4180:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4180:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4180:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4153:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4162:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4149:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4149:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4174:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4145:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4145:32:15"
															},
															"nodeType": "YulIf",
															"src": "4142:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4203:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4232:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4213:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4213:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4203:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4251:45:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4281:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4292:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4277:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4277:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4264:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4264:32:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4255:5:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4349:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4358:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4361:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4351:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4351:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4351:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4318:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "4339:5:15"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "4332:6:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4332:13:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4325:6:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4325:21:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4315:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4315:32:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4308:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4308:40:15"
															},
															"nodeType": "YulIf",
															"src": "4305:60:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4374:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4384:5:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4374:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4090:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4101:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4113:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4121:6:15",
														"type": ""
													}
												],
												"src": "4048:347:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4432:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4449:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4456:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4461:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4452:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4452:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4442:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4442:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4442:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4489:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4492:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4482:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4482:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4482:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4513:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4516:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4506:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4506:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4506:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "4400:127:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4606:557:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4616:28:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4626:18:15",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4620:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4671:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4673:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4673:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4673:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4659:6:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4667:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4656:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4656:14:15"
															},
															"nodeType": "YulIf",
															"src": "4653:40:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4702:17:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4716:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4712:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4712:7:15"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "4706:2:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4728:23:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4748:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4742:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4742:9:15"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "4732:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4760:73:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4782:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nodeType": "YulIdentifier",
																										"src": "4806:6:15"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4814:2:15",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4802:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4802:15:15"
																							},
																							{
																								"name": "_2",
																								"nodeType": "YulIdentifier",
																								"src": "4819:2:15"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "4798:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4798:24:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4824:2:15",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4794:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4794:33:15"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "4829:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4790:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4790:42:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4778:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4778:55:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "4764:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4892:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4894:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4894:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4894:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4851:10:15"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4863:2:15"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4848:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4848:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4871:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4883:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4868:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4868:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4845:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4845:46:15"
															},
															"nodeType": "YulIf",
															"src": "4842:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4930:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4934:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4923:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4923:22:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4923:22:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4954:15:15",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4963:6:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4954:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4985:6:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4993:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4978:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4978:22:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4978:22:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5038:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5047:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5050:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5040:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5040:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5040:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5019:3:15"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5024:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5015:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5015:16:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5033:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5012:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5012:25:15"
															},
															"nodeType": "YulIf",
															"src": "5009:45:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5080:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5088:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5076:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5076:17:15"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5095:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5100:6:15"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "5063:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5063:44:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5063:44:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:15"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "5139:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5127:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5127:19:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5148:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5123:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5123:30:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5155:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5116:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5116:41:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5116:41:15"
														}
													]
												},
												"name": "abi_decode_available_length_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "4575:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4580:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4588:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4596:5:15",
														"type": ""
													}
												],
												"src": "4532:631:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5298:536:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5345:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5354:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5357:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5347:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5347:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5347:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5319:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5328:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5315:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5315:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5340:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5311:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5311:33:15"
															},
															"nodeType": "YulIf",
															"src": "5308:53:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5370:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5399:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5380:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5380:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5370:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5418:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5451:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5462:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5447:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5447:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5428:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5428:38:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5418:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5475:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5502:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5513:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5498:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5498:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5485:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5485:32:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "5475:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5526:46:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5557:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5568:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5553:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5553:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5540:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5540:32:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5530:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5615:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5624:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5627:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5617:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5617:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5617:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5587:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5595:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5584:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5584:30:15"
															},
															"nodeType": "YulIf",
															"src": "5581:50:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5640:32:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5654:9:15"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5665:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5650:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5650:22:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5644:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5720:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5729:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5732:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5722:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5722:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5722:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "5699:2:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5703:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5695:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5695:13:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5710:7:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5691:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5691:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5684:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5684:35:15"
															},
															"nodeType": "YulIf",
															"src": "5681:55:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5745:83:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5793:2:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5797:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5789:11:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5815:2:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5802:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5802:16:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5820:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5755:33:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5755:73:15"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "5745:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5240:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5251:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5263:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5271:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5279:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5287:6:15",
														"type": ""
													}
												],
												"src": "5168:666:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5936:427:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5982:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5991:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5994:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5984:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5984:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5984:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5957:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5966:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5953:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5953:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5978:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5949:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5949:32:15"
															},
															"nodeType": "YulIf",
															"src": "5946:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6007:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6036:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6017:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6017:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6007:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6055:46:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6086:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6097:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6082:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6082:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6069:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6069:32:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "6059:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6144:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6153:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6156:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6146:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6146:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6146:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6116:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6124:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6113:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6113:30:15"
															},
															"nodeType": "YulIf",
															"src": "6110:50:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6169:32:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6183:9:15"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6194:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6179:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6179:22:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6173:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6249:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6258:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6261:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6251:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6251:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6251:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "6228:2:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6232:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6224:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6224:13:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6239:7:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6220:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6220:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6213:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6213:35:15"
															},
															"nodeType": "YulIf",
															"src": "6210:55:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6274:83:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6322:2:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6326:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6318:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6318:11:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6344:2:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "6331:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6331:16:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6349:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "6284:33:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6284:73:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6274:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5894:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5905:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5917:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5925:6:15",
														"type": ""
													}
												],
												"src": "5839:524:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6455:173:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6501:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6510:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6513:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6503:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6503:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6503:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6476:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6485:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6472:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6472:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6497:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6468:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6468:32:15"
															},
															"nodeType": "YulIf",
															"src": "6465:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6526:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6555:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6536:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6536:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6526:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6574:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6607:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6618:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6603:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6603:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6584:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6584:38:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6574:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6413:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6424:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6436:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6444:6:15",
														"type": ""
													}
												],
												"src": "6368:260:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6688:325:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6698:22:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6712:1:15",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6715:4:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6708:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6708:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6698:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6729:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6759:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6765:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6755:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6755:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "6733:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6806:31:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6808:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6822:6:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6830:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6818:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6818:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6808:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6786:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6779:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6779:26:15"
															},
															"nodeType": "YulIf",
															"src": "6776:61:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6896:111:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6917:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6924:3:15",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6929:10:15",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "6920:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6920:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6910:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6910:31:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6910:31:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6961:1:15",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6964:4:15",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6954:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6954:15:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6954:15:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6989:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6992:4:15",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6982:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6982:15:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6982:15:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6852:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6875:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6883:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6872:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6872:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6849:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6849:38:15"
															},
															"nodeType": "YulIf",
															"src": "6846:161:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6668:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6677:6:15",
														"type": ""
													}
												],
												"src": "6633:380:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7192:234:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7209:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7220:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7202:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7202:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7202:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7243:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7254:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7239:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7239:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7259:2:15",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7232:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7232:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7232:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7282:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7293:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7278:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7278:18:15"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7298:34:15",
																		"type": "",
																		"value": "ERC721: approved query for nonex"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7271:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7271:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7271:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7353:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7364:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7349:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7349:18:15"
																	},
																	{
																		"hexValue": "697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7369:14:15",
																		"type": "",
																		"value": "istent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7342:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7342:42:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7342:42:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7393:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7405:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7416:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7401:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7401:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7393:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7169:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7183:4:15",
														"type": ""
													}
												],
												"src": "7018:408:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7605:223:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7622:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7633:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7615:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7615:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7615:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7656:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7667:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7652:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7652:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7672:2:15",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7645:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7645:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7645:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7695:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7706:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7691:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7691:18:15"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7711:34:15",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7684:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7684:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7684:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7766:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7777:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7762:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7762:18:15"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7782:3:15",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7755:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7755:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7755:31:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7795:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7807:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7818:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7803:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7803:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7795:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7582:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7596:4:15",
														"type": ""
													}
												],
												"src": "7431:397:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8007:246:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8024:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8035:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8017:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8017:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8017:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8058:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8069:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8054:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8054:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8074:2:15",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8047:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8047:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8047:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8097:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8108:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8093:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8093:18:15"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8113:34:15",
																		"type": "",
																		"value": "ERC721: approve caller is not ow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8086:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8086:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8086:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8168:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8179:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8164:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8164:18:15"
																	},
																	{
																		"hexValue": "6e6572206e6f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8184:26:15",
																		"type": "",
																		"value": "ner nor approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8157:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8157:54:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8157:54:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8220:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8232:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8243:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8228:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8228:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8220:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7984:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7998:4:15",
														"type": ""
													}
												],
												"src": "7833:420:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8432:239:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8449:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8460:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8442:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8442:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8442:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8483:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8494:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8479:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8479:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8499:2:15",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8472:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8472:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8472:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8522:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8533:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8518:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8518:18:15"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8538:34:15",
																		"type": "",
																		"value": "ERC721: transfer caller is not o"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8511:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8511:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8511:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8593:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8604:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8589:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8589:18:15"
																	},
																	{
																		"hexValue": "776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8609:19:15",
																		"type": "",
																		"value": "wner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8582:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8582:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8582:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8638:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8650:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8661:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8646:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8646:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8638:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8409:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8423:4:15",
														"type": ""
													}
												],
												"src": "8258:413:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8708:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8725:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8732:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8737:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8728:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8728:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8718:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8718:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8718:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8765:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8768:4:15",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8758:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8758:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8758:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8789:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8792:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8782:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8782:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8782:15:15"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8676:127:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8860:116:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8919:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8921:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8921:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8921:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8891:1:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8884:6:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8884:9:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "8877:6:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8877:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "8899:1:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8910:1:15",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "8906:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8906:6:15"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8914:1:15"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "8902:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8902:14:15"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8896:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8896:21:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8873:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8873:45:15"
															},
															"nodeType": "YulIf",
															"src": "8870:71:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8950:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8965:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8968:1:15"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8961:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8961:9:15"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "8950:7:15"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8839:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8842:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "8848:7:15",
														"type": ""
													}
												],
												"src": "8808:168:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9013:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9030:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9037:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9042:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9033:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9033:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9023:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9023:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9023:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9070:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9073:4:15",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9063:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9063:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9063:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9094:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9097:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9087:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9087:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9087:15:15"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "8981:127:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9159:74:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9182:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "9184:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9184:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9184:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9179:1:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9172:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9172:9:15"
															},
															"nodeType": "YulIf",
															"src": "9169:35:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9213:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9222:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9225:1:15"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "9218:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9218:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "9213:1:15"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9144:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9147:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "9153:1:15",
														"type": ""
													}
												],
												"src": "9113:120:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9412:233:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9429:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9440:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9422:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9422:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9422:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9463:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9474:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9459:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9459:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9479:2:15",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9452:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9452:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9452:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9502:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9513:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9498:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9498:18:15"
																	},
																	{
																		"hexValue": "455243373231456e756d657261626c653a206f776e657220696e646578206f75",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9518:34:15",
																		"type": "",
																		"value": "ERC721Enumerable: owner index ou"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9491:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9491:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9491:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9573:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9584:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9569:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9569:18:15"
																	},
																	{
																		"hexValue": "74206f6620626f756e6473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9589:13:15",
																		"type": "",
																		"value": "t of bounds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9562:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9562:41:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9562:41:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9612:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9624:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9635:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9620:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9620:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9612:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9389:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9403:4:15",
														"type": ""
													}
												],
												"src": "9238:407:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9824:234:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9841:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9852:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9834:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9834:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9834:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9875:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9886:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9871:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9871:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9891:2:15",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9864:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9864:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9864:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9914:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9925:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9910:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9910:18:15"
																	},
																	{
																		"hexValue": "455243373231456e756d657261626c653a20676c6f62616c20696e646578206f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9930:34:15",
																		"type": "",
																		"value": "ERC721Enumerable: global index o"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9903:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9903:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9903:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9985:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9996:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9981:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9981:18:15"
																	},
																	{
																		"hexValue": "7574206f6620626f756e6473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10001:14:15",
																		"type": "",
																		"value": "ut of bounds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9974:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9974:42:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9974:42:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10025:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10037:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10048:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10033:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10033:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10025:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9801:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9815:4:15",
														"type": ""
													}
												],
												"src": "9650:408:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10095:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10112:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10119:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10124:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10115:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10115:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10105:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10105:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10105:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10152:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10155:4:15",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10145:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10145:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10145:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10176:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10179:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10169:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10169:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10169:15:15"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "10063:127:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10369:231:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10386:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10397:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10379:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10379:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10379:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10420:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10431:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10416:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10416:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10436:2:15",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10409:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10409:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10409:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10459:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10470:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10455:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10455:18:15"
																	},
																	{
																		"hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10475:34:15",
																		"type": "",
																		"value": "ERC721: owner query for nonexist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10448:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10448:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10448:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10530:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10541:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10526:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10526:18:15"
																	},
																	{
																		"hexValue": "656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10546:11:15",
																		"type": "",
																		"value": "ent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10519:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10519:39:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10519:39:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10567:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10579:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10590:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10575:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10575:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10567:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10346:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10360:4:15",
														"type": ""
													}
												],
												"src": "10195:405:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10779:232:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10796:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10807:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10789:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10789:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10789:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10830:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10841:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10826:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10826:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10846:2:15",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10819:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10819:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10819:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10869:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10880:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10865:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10865:18:15"
																	},
																	{
																		"hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10885:34:15",
																		"type": "",
																		"value": "ERC721: balance query for the ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10858:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10858:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10858:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10940:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10951:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10936:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10936:18:15"
																	},
																	{
																		"hexValue": "726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10956:12:15",
																		"type": "",
																		"value": "ro address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10929:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10929:40:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10929:40:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10978:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10990:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11001:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10986:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10986:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10978:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10756:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10770:4:15",
														"type": ""
													}
												],
												"src": "10605:406:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11190:182:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11207:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11218:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11200:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11200:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11200:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11241:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11252:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11237:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11237:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11257:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11230:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11230:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11230:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11280:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11291:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11276:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11276:18:15"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11296:34:15",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11269:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11269:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11269:62:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11340:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11352:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11363:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11348:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11348:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11340:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11167:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11181:4:15",
														"type": ""
													}
												],
												"src": "11016:356:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11424:88:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11455:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11457:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11457:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11457:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11440:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11451:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11447:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11447:6:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11437:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11437:17:15"
															},
															"nodeType": "YulIf",
															"src": "11434:43:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11486:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11497:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11504:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11493:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11493:13:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "11486:3:15"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11406:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "11416:3:15",
														"type": ""
													}
												],
												"src": "11377:135:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11691:167:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11708:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11719:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11701:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11701:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11701:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11742:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11753:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11738:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11738:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11758:2:15",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11731:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11731:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11731:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11781:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11792:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11777:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11777:18:15"
																	},
																	{
																		"hexValue": "416c6c20746f6b656e73206d696e746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11797:19:15",
																		"type": "",
																		"value": "All tokens minted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11770:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11770:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11770:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11826:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11838:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11849:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11834:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11834:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11826:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2a400c07bb67a06c03f358edc1048982b27f79d13cec217cd075a5ae667872ec__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11668:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11682:4:15",
														"type": ""
													}
												],
												"src": "11517:341:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12002:137:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12012:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12032:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12026:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12026:13:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12016:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12074:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12082:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12070:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12070:17:15"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12089:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12094:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "12048:21:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12048:53:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12048:53:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12110:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12121:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12126:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12117:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12117:16:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12110:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11978:3:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11983:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11994:3:15",
														"type": ""
													}
												],
												"src": "11863:276:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12192:80:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12219:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12221:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12221:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12221:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12208:1:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12215:1:15"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "12211:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12211:6:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12205:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12205:13:15"
															},
															"nodeType": "YulIf",
															"src": "12202:39:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12250:16:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12261:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12264:1:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12257:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12257:9:15"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12250:3:15"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12175:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12178:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "12184:3:15",
														"type": ""
													}
												],
												"src": "12144:128:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12406:145:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12416:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12428:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12439:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12424:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12424:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12416:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12458:9:15"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12469:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12451:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12451:25:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12451:25:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12496:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12507:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12492:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12492:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "12516:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12532:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12537:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "12528:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12528:11:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12541:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "12524:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12524:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12512:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12512:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12485:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12485:60:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12485:60:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12367:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12378:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12386:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12397:4:15",
														"type": ""
													}
												],
												"src": "12277:274:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12730:228:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12747:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12758:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12740:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12740:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12740:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12781:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12792:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12777:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12777:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12797:2:15",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12770:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12770:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12770:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12820:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12831:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12816:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12816:18:15"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12836:34:15",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12809:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12809:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12809:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12891:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12902:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12887:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12887:18:15"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12907:8:15",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12880:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12880:36:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12880:36:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12925:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12937:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12948:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12933:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12933:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12925:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12707:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12721:4:15",
														"type": ""
													}
												],
												"src": "12556:402:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13137:234:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13154:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13165:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13147:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13147:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13147:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13188:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13199:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13184:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13184:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13204:2:15",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13177:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13177:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13177:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13227:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13238:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13223:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13223:18:15"
																	},
																	{
																		"hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13243:34:15",
																		"type": "",
																		"value": "ERC721: operator query for nonex"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13216:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13216:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13216:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13298:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13309:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13294:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13294:18:15"
																	},
																	{
																		"hexValue": "697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13314:14:15",
																		"type": "",
																		"value": "istent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13287:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13287:42:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13287:42:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13338:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13350:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13361:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13346:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13346:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13338:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13114:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13128:4:15",
														"type": ""
													}
												],
												"src": "12963:408:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13550:227:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13567:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13578:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13560:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13560:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13560:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13601:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13612:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13597:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13597:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13617:2:15",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13590:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13590:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13590:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13640:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13651:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13636:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13636:18:15"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f727265637420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13656:34:15",
																		"type": "",
																		"value": "ERC721: transfer from incorrect "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13629:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13629:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13629:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13711:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13722:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13707:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13707:18:15"
																	},
																	{
																		"hexValue": "6f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13727:7:15",
																		"type": "",
																		"value": "owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13700:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13700:35:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13700:35:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13744:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13756:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13767:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13752:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13752:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13744:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13527:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13541:4:15",
														"type": ""
													}
												],
												"src": "13376:401:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13956:226:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13973:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13984:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13966:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13966:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13966:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14007:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14018:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14003:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14003:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14023:2:15",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13996:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13996:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13996:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14046:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14057:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14042:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14042:18:15"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14062:34:15",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14035:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14035:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14035:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14117:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14128:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14113:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14113:18:15"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14133:6:15",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14106:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14106:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14106:34:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14149:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14161:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14172:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14157:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14157:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14149:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13933:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13947:4:15",
														"type": ""
													}
												],
												"src": "13782:400:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14236:76:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14258:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14260:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14260:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14260:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14252:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14255:1:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14249:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14249:8:15"
															},
															"nodeType": "YulIf",
															"src": "14246:34:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14289:17:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14301:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14304:1:15"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14297:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14297:9:15"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "14289:4:15"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14218:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14221:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "14227:4:15",
														"type": ""
													}
												],
												"src": "14187:125:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14491:175:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14508:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14519:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14501:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14501:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14501:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14542:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14553:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14538:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14538:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14558:2:15",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14531:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14531:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14531:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14581:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14592:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14577:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14577:18:15"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14597:27:15",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14570:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14570:55:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14570:55:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14634:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14646:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14657:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14642:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14642:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14634:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14468:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14482:4:15",
														"type": ""
													}
												],
												"src": "14317:349:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14845:240:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14862:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14873:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14855:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14855:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14855:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14896:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14907:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14892:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14892:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14912:2:15",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14885:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14885:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14885:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14935:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14946:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14931:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14931:18:15"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14951:34:15",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14924:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14924:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14924:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15006:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15017:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15002:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15002:18:15"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15022:20:15",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14995:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14995:48:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14995:48:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15052:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15064:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15075:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15060:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15060:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15052:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14822:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14836:4:15",
														"type": ""
													}
												],
												"src": "14671:414:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15264:239:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15281:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15292:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15274:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15274:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15274:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15315:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15326:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15311:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15311:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15331:2:15",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15304:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15304:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15304:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15354:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15365:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15350:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15350:18:15"
																	},
																	{
																		"hexValue": "45524337323155524953746f726167653a2055524920717565727920666f7220",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15370:34:15",
																		"type": "",
																		"value": "ERC721URIStorage: URI query for "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15343:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15343:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15343:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15425:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15436:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15421:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15421:18:15"
																	},
																	{
																		"hexValue": "6e6f6e6578697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15441:19:15",
																		"type": "",
																		"value": "nonexistent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15414:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15414:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15414:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15470:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15482:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15493:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15478:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15478:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15470:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15241:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15255:4:15",
														"type": ""
													}
												],
												"src": "15090:413:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15695:283:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15705:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15725:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15719:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15719:13:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15709:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "15767:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15775:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15763:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15763:17:15"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15782:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15787:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "15741:21:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15741:53:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15741:53:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15803:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15820:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15825:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15816:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15816:16:15"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "15807:5:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15841:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15863:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15857:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15857:13:15"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "15845:8:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "15905:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15913:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15901:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15901:17:15"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "15920:5:15"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "15927:8:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "15879:21:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15879:57:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15879:57:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15945:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "15956:5:15"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "15963:8:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15952:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15952:20:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15945:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15663:3:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15668:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15676:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15687:3:15",
														"type": ""
													}
												],
												"src": "15508:470:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16157:236:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16174:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16185:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16167:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16167:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16167:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16208:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16219:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16204:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16204:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16224:2:15",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16197:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16197:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16197:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16247:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16258:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16243:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16243:18:15"
																	},
																	{
																		"hexValue": "45524337323155524953746f726167653a2055524920736574206f66206e6f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16263:34:15",
																		"type": "",
																		"value": "ERC721URIStorage: URI set of non"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16236:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16236:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16236:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16318:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16329:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16314:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16314:18:15"
																	},
																	{
																		"hexValue": "6578697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16334:16:15",
																		"type": "",
																		"value": "existent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16307:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16307:44:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16307:44:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16360:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16372:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16383:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16368:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16368:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16360:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16134:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16148:4:15",
														"type": ""
													}
												],
												"src": "15983:410:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16601:286:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16611:29:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16629:3:15",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16634:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "16625:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16625:11:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16638:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "16621:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16621:19:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "16615:2:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16656:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "16671:6:15"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16679:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16667:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16667:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16649:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16649:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16649:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16703:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16714:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16699:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16699:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "16723:6:15"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16731:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16719:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16719:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16692:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16692:43:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16692:43:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16755:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16766:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16751:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16751:18:15"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16771:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16744:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16744:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16744:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16798:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16809:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16794:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16794:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16814:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16787:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16787:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16787:31:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16827:54:15",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "16853:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16865:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16876:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16861:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16861:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "16835:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16835:46:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16827:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16546:9:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "16557:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "16565:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16573:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16581:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16592:4:15",
														"type": ""
													}
												],
												"src": "16398:489:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16972:169:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17018:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17027:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17030:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17020:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17020:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17020:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16993:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17002:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16989:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16989:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17014:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "16985:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16985:32:15"
															},
															"nodeType": "YulIf",
															"src": "16982:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17043:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17062:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17056:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17056:16:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "17047:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17105:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "17081:23:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17081:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17081:30:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17120:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "17130:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "17120:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16938:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "16949:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16961:6:15",
														"type": ""
													}
												],
												"src": "16892:249:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17320:237:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17337:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17348:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17330:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17330:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17330:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17371:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17382:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17367:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17367:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17387:2:15",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17360:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17360:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17360:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17410:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17421:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17406:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17406:18:15"
																	},
																	{
																		"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17426:34:15",
																		"type": "",
																		"value": "ERC721Metadata: URI query for no"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17399:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17399:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17399:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17481:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17492:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17477:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17477:18:15"
																	},
																	{
																		"hexValue": "6e6578697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17497:17:15",
																		"type": "",
																		"value": "nexistent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17470:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17470:45:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17470:45:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17524:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17536:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17547:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17532:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17532:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17524:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17297:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17311:4:15",
														"type": ""
													}
												],
												"src": "17146:411:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17600:74:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17623:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "17625:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17625:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17625:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17620:1:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17613:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17613:9:15"
															},
															"nodeType": "YulIf",
															"src": "17610:35:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17654:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17663:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17666:1:15"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "17659:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17659:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "17654:1:15"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17585:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17588:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "17594:1:15",
														"type": ""
													}
												],
												"src": "17562:112:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17853:182:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17870:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17881:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17863:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17863:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17863:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17904:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17915:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17900:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17900:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17920:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17893:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17893:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17893:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17943:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17954:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17939:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17939:18:15"
																	},
																	{
																		"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17959:34:15",
																		"type": "",
																		"value": "ERC721: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17932:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17932:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17932:62:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18003:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18015:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18026:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18011:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18011:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18003:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17830:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17844:4:15",
														"type": ""
													}
												],
												"src": "17679:356:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18214:178:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18231:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18242:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18224:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18224:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18224:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18265:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18276:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18261:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18261:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18281:2:15",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18254:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18254:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18254:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18304:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18315:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18300:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18300:18:15"
																	},
																	{
																		"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18320:30:15",
																		"type": "",
																		"value": "ERC721: token already minted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18293:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18293:58:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18293:58:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18360:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18372:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18383:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18368:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18368:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18360:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18191:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18205:4:15",
														"type": ""
													}
												],
												"src": "18040:352:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18429:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18446:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18453:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18458:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "18449:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18449:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18439:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18439:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18439:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18486:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18489:4:15",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18479:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18479:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18479:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18510:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18513:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "18503:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18503:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18503:15:15"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "18397:127:15"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_bytes(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value1 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721: approved query for nonex\")\n        mstore(add(headStart, 96), \"istent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not ow\")\n        mstore(add(headStart, 96), \"ner nor approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"ERC721: transfer caller is not o\")\n        mstore(add(headStart, 96), \"wner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC721Enumerable: owner index ou\")\n        mstore(add(headStart, 96), \"t of bounds\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721Enumerable: global index o\")\n        mstore(add(headStart, 96), \"ut of bounds\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: owner query for nonexist\")\n        mstore(add(headStart, 96), \"ent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC721: balance query for the ze\")\n        mstore(add(headStart, 96), \"ro address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_2a400c07bb67a06c03f358edc1048982b27f79d13cec217cd075a5ae667872ec__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"All tokens minted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721: operator query for nonex\")\n        mstore(add(headStart, 96), \"istent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"ERC721URIStorage: URI query for \")\n        mstore(add(headStart, 96), \"nonexistent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC721URIStorage: URI set of non\")\n        mstore(add(headStart, 96), \"existent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"ERC721Metadata: URI query for no\")\n        mstore(add(headStart, 96), \"nexistent token\")\n        tail := add(headStart, 128)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"ERC721: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"ERC721: token already minted\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n}",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061018e5760003560e01c806370a08231116100de578063a3a51bd511610097578063c87b56dd11610071578063c87b56dd14610363578063d0def52114610376578063e985e9c514610389578063f2fde38b146103c557600080fd5b8063a3a51bd51461032c578063b51437151461033d578063b88d4fde1461035057600080fd5b806370a08231146102c5578063715018a6146102d85780638462151c146102e05780638da5cb5b1461030057806395d89b4114610311578063a22cb4651461031957600080fd5b806323b872dd1161014b57806332cb6b0c1161012557806332cb6b0c1461028357806342842e0e1461028c5780634f6ccce71461029f5780636352211e146102b257600080fd5b806323b872dd1461022b5780632a55205a1461023e5780632f745c591461027057600080fd5b806301ffc9a71461019357806306fdde03146101bb578063081812fc146101d0578063095ea7b3146101fb57806318160ddd146102105780632175c99014610222575b600080fd5b6101a66101a1366004611ae2565b6103d8565b60405190151581526020015b60405180910390f35b6101c3610403565b6040516101b29190611b57565b6101e36101de366004611b6a565b610495565b6040516001600160a01b0390911681526020016101b2565b61020e610209366004611b9f565b610522565b005b6009545b6040519081526020016101b2565b610214600e5481565b61020e610239366004611bc9565b610637565b61025161024c366004611c05565b610668565b604080516001600160a01b0390931683526020830191909152016101b2565b61021461027e366004611b9f565b61069e565b610214611e6181565b61020e61029a366004611bc9565b610734565b6102146102ad366004611b6a565b61074f565b6101e36102c0366004611b6a565b6107e2565b6102146102d3366004611c27565b610859565b61020e6108e0565b6102f36102ee366004611c27565b610916565b6040516101b29190611c42565b6000546001600160a01b03166101e3565b6101c36109d7565b61020e610327366004611c86565b6109e6565b600d546001600160a01b03166101e3565b61020e61034b366004611c27565b6109f5565b61020e61035e366004611d4e565b610a5c565b6101c3610371366004611b6a565b610a94565b610214610384366004611dca565b610a9f565b6101a6610397366004611e2c565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b61020e6103d3366004611c27565b610bfe565b60006001600160e01b0319821663152a902d60e11b14806103fd57506103fd82610c99565b92915050565b60606001805461041290611e5f565b80601f016020809104026020016040519081016040528092919081815260200182805461043e90611e5f565b801561048b5780601f106104605761010080835404028352916020019161048b565b820191906000526020600020905b81548152906001019060200180831161046e57829003601f168201915b5050505050905090565b60006104a082610cbe565b6105065760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600560205260409020546001600160a01b031690565b600061052d826107e2565b9050806001600160a01b0316836001600160a01b03160361059a5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016104fd565b336001600160a01b03821614806105b657506105b68133610397565b6106285760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016104fd565b6106328383610cdb565b505050565b6106413382610d49565b61065d5760405162461bcd60e51b81526004016104fd90611e99565b610632838383610e33565b60008060006064600e548561067d9190611f00565b6106879190611f35565b600d546001600160a01b0316969095509350505050565b60006106a983610859565b821061070b5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016104fd565b506001600160a01b03919091166000908152600760209081526040808320938352929052205490565b61063283838360405180602001604052806000815250610a5c565b600061075a60095490565b82106107bd5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016104fd565b600982815481106107d0576107d0611f49565b90600052602060002001549050919050565b6000818152600360205260408120546001600160a01b0316806103fd5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016104fd565b60006001600160a01b0382166108c45760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016104fd565b506001600160a01b031660009081526004602052604090205490565b6000546001600160a01b0316331461090a5760405162461bcd60e51b81526004016104fd90611f5f565b6109146000610fda565b565b6060600061092383610859565b905060008167ffffffffffffffff81111561094057610940611cc2565b604051908082528060200260200182016040528015610969578160200160208202803683370190505b5090508160000361098b57505060408051600081526020810190915292915050565b60005b828110156109cf576109a0858261069e565b8282815181106109b2576109b2611f49565b6020908102919091010152806109c781611f94565b91505061098e565b509392505050565b60606002805461041290611e5f565b6109f133838361102a565b5050565b6000546001600160a01b03163314610a1f5760405162461bcd60e51b81526004016104fd90611f5f565b600d546001600160a01b0390811690821603610a3a57600080fd5b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b610a663383610d49565b610a825760405162461bcd60e51b81526004016104fd90611e99565b610a8e848484846110f8565b50505050565b60606103fd8261112b565b600080546001600160a01b03163314610aca5760405162461bcd60e51b81526004016104fd90611f5f565b611e61610ad660095490565b1115610b185760405162461bcd60e51b8152602060048201526011602482015270105b1b081d1bdad95b9cc81b5a5b9d1959607a1b60448201526064016104fd565b6000825111610b2657600080fd5b600c82604051610b369190611fad565b9081526040519081900360200190205460ff16600103610b5557600080fd5b6001600c83604051610b679190611fad565b908152604051908190036020019020805460ff9290921660ff199092169190911790556000610b9560095490565b610ba0906001611fc9565b9050610bac848261128c565b610bb681846112a6565b604080518281526001600160a01b03861660208201527ff3cea5493d790af0133817606f7350a91d7f154ea52eaa79d179d4d231e50102910160405180910390a19392505050565b6000546001600160a01b03163314610c285760405162461bcd60e51b81526004016104fd90611f5f565b6001600160a01b038116610c8d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104fd565b610c9681610fda565b50565b60006001600160e01b0319821663780e9d6360e01b14806103fd57506103fd82611331565b6000908152600360205260409020546001600160a01b0316151590565b600081815260056020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610d10826107e2565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610d5482610cbe565b610db55760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016104fd565b6000610dc0836107e2565b9050806001600160a01b0316846001600160a01b03161480610e0757506001600160a01b0380821660009081526006602090815260408083209388168352929052205460ff165b80610e2b5750836001600160a01b0316610e2084610495565b6001600160a01b0316145b949350505050565b826001600160a01b0316610e46826107e2565b6001600160a01b031614610eaa5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016104fd565b6001600160a01b038216610f0c5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016104fd565b610f17838383611381565b610f22600082610cdb565b6001600160a01b0383166000908152600460205260408120805460019290610f4b908490611fe1565b90915550506001600160a01b0382166000908152600460205260408120805460019290610f79908490611fc9565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b816001600160a01b0316836001600160a01b03160361108b5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104fd565b6001600160a01b03838116600081815260066020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611103848484610e33565b61110f8484848461138c565b610a8e5760405162461bcd60e51b81526004016104fd90611ff8565b606061113682610cbe565b61119c5760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b60648201526084016104fd565b6000828152600b6020526040812080546111b590611e5f565b80601f01602080910402602001604051908101604052809291908181526020018280546111e190611e5f565b801561122e5780601f106112035761010080835404028352916020019161122e565b820191906000526020600020905b81548152906001019060200180831161121157829003601f168201915b50505050509050600061123f61148d565b90508051600003611251575092915050565b81511561128357808260405160200161126b92919061204a565b60405160208183030381529060405292505050919050565b610e2b846114ad565b6109f1828260405180602001604052806000815250611578565b6112af82610cbe565b6113125760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016104fd565b6000828152600b60209081526040909120825161063292840190611a33565b60006001600160e01b031982166380ac58cd60e01b148061136257506001600160e01b03198216635b5e139f60e01b145b806103fd57506301ffc9a760e01b6001600160e01b03198316146103fd565b6106328383836115ab565b60006001600160a01b0384163b1561148257604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906113d0903390899088908890600401612079565b6020604051808303816000875af192505050801561140b575060408051601f3d908101601f19168201909252611408918101906120b6565b60015b611468573d808015611439576040519150601f19603f3d011682016040523d82523d6000602084013e61143e565b606091505b5080516000036114605760405162461bcd60e51b81526004016104fd90611ff8565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610e2b565b506001949350505050565b60606040518060600160405280602281526020016120fe60229139905090565b60606114b882610cbe565b61151c5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016104fd565b600061152661148d565b905060008151116115465760405180602001604052806000815250611571565b8061155084611663565b60405160200161156192919061204a565b6040516020818303038152906040525b9392505050565b6115828383611764565b61158f600084848461138c565b6106325760405162461bcd60e51b81526004016104fd90611ff8565b6001600160a01b0383166116065761160181600980546000838152600a60205260408120829055600182018355919091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0155565b611629565b816001600160a01b0316836001600160a01b0316146116295761162983826118a3565b6001600160a01b0382166116405761063281611940565b826001600160a01b0316826001600160a01b0316146106325761063282826119ef565b60608160000361168a5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156116b4578061169e81611f94565b91506116ad9050600a83611f35565b915061168e565b60008167ffffffffffffffff8111156116cf576116cf611cc2565b6040519080825280601f01601f1916602001820160405280156116f9576020820181803683370190505b5090505b8415610e2b5761170e600183611fe1565b915061171b600a866120d3565b611726906030611fc9565b60f81b81838151811061173b5761173b611f49565b60200101906001600160f81b031916908160001a90535061175d600a86611f35565b94506116fd565b6001600160a01b0382166117ba5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104fd565b6117c381610cbe565b156118105760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104fd565b61181c60008383611381565b6001600160a01b0382166000908152600460205260408120805460019290611845908490611fc9565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600060016118b084610859565b6118ba9190611fe1565b60008381526008602052604090205490915080821461190d576001600160a01b03841660009081526007602090815260408083208584528252808320548484528184208190558352600890915290208190555b5060009182526008602090815260408084208490556001600160a01b039094168352600781528383209183525290812055565b60095460009061195290600190611fe1565b6000838152600a60205260408120546009805493945090928490811061197a5761197a611f49565b90600052602060002001549050806009838154811061199b5761199b611f49565b6000918252602080832090910192909255828152600a909152604080822084905585825281205560098054806119d3576119d36120e7565b6001900381819060005260206000200160009055905550505050565b60006119fa83610859565b6001600160a01b039093166000908152600760209081526040808320868452825280832085905593825260089052919091209190915550565b828054611a3f90611e5f565b90600052602060002090601f016020900481019282611a615760008555611aa7565b82601f10611a7a57805160ff1916838001178555611aa7565b82800160010185558215611aa7579182015b82811115611aa7578251825591602001919060010190611a8c565b50611ab3929150611ab7565b5090565b5b80821115611ab35760008155600101611ab8565b6001600160e01b031981168114610c9657600080fd5b600060208284031215611af457600080fd5b813561157181611acc565b60005b83811015611b1a578181015183820152602001611b02565b83811115610a8e5750506000910152565b60008151808452611b43816020860160208601611aff565b601f01601f19169290920160200192915050565b6020815260006115716020830184611b2b565b600060208284031215611b7c57600080fd5b5035919050565b80356001600160a01b0381168114611b9a57600080fd5b919050565b60008060408385031215611bb257600080fd5b611bbb83611b83565b946020939093013593505050565b600080600060608486031215611bde57600080fd5b611be784611b83565b9250611bf560208501611b83565b9150604084013590509250925092565b60008060408385031215611c1857600080fd5b50508035926020909101359150565b600060208284031215611c3957600080fd5b61157182611b83565b6020808252825182820181905260009190848201906040850190845b81811015611c7a57835183529284019291840191600101611c5e565b50909695505050505050565b60008060408385031215611c9957600080fd5b611ca283611b83565b915060208301358015158114611cb757600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611cf357611cf3611cc2565b604051601f8501601f19908116603f01168101908282118183101715611d1b57611d1b611cc2565b81604052809350858152868686011115611d3457600080fd5b858560208301376000602087830101525050509392505050565b60008060008060808587031215611d6457600080fd5b611d6d85611b83565b9350611d7b60208601611b83565b925060408501359150606085013567ffffffffffffffff811115611d9e57600080fd5b8501601f81018713611daf57600080fd5b611dbe87823560208401611cd8565b91505092959194509250565b60008060408385031215611ddd57600080fd5b611de683611b83565b9150602083013567ffffffffffffffff811115611e0257600080fd5b8301601f81018513611e1357600080fd5b611e2285823560208401611cd8565b9150509250929050565b60008060408385031215611e3f57600080fd5b611e4883611b83565b9150611e5660208401611b83565b90509250929050565b600181811c90821680611e7357607f821691505b602082108103611e9357634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615611f1a57611f1a611eea565b500290565b634e487b7160e01b600052601260045260246000fd5b600082611f4457611f44611f1f565b500490565b634e487b7160e01b600052603260045260246000fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060018201611fa657611fa6611eea565b5060010190565b60008251611fbf818460208701611aff565b9190910192915050565b60008219821115611fdc57611fdc611eea565b500190565b600082821015611ff357611ff3611eea565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000835161205c818460208801611aff565b835190830190612070818360208801611aff565b01949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906120ac90830184611b2b565b9695505050505050565b6000602082840312156120c857600080fd5b815161157181611acc565b6000826120e2576120e2611f1f565b500690565b634e487b7160e01b600052603160045260246000fdfe68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732fa26469706673582212209d95ea38c2c77b39cfcd8e925b27c1806334bc119a0d8dabc131bcb9336eaec564736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA3A51BD5 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xD0DEF521 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA3A51BD5 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0xB5143715 EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x8462151C EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x32CB6B0C GT PUSH2 0x125 JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x2A55205A EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x2175C990 EQ PUSH2 0x222 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A6 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AE2 JUMP JUMPDEST PUSH2 0x3D8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH2 0x403 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH2 0x1E3 PUSH2 0x1DE CALLDATASIZE PUSH1 0x4 PUSH2 0x1B6A JUMP JUMPDEST PUSH2 0x495 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x209 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B9F JUMP JUMPDEST PUSH2 0x522 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x9 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x214 PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BC9 JUMP JUMPDEST PUSH2 0x637 JUMP JUMPDEST PUSH2 0x251 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x1C05 JUMP JUMPDEST PUSH2 0x668 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x214 PUSH2 0x27E CALLDATASIZE PUSH1 0x4 PUSH2 0x1B9F JUMP JUMPDEST PUSH2 0x69E JUMP JUMPDEST PUSH2 0x214 PUSH2 0x1E61 DUP2 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0x1BC9 JUMP JUMPDEST PUSH2 0x734 JUMP JUMPDEST PUSH2 0x214 PUSH2 0x2AD CALLDATASIZE PUSH1 0x4 PUSH2 0x1B6A JUMP JUMPDEST PUSH2 0x74F JUMP JUMPDEST PUSH2 0x1E3 PUSH2 0x2C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B6A JUMP JUMPDEST PUSH2 0x7E2 JUMP JUMPDEST PUSH2 0x214 PUSH2 0x2D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C27 JUMP JUMPDEST PUSH2 0x859 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x8E0 JUMP JUMPDEST PUSH2 0x2F3 PUSH2 0x2EE CALLDATASIZE PUSH1 0x4 PUSH2 0x1C27 JUMP JUMPDEST PUSH2 0x916 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E3 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x9D7 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x327 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C86 JUMP JUMPDEST PUSH2 0x9E6 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E3 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x34B CALLDATASIZE PUSH1 0x4 PUSH2 0x1C27 JUMP JUMPDEST PUSH2 0x9F5 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x35E CALLDATASIZE PUSH1 0x4 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0xA5C JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x371 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B6A JUMP JUMPDEST PUSH2 0xA94 JUMP JUMPDEST PUSH2 0x214 PUSH2 0x384 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DCA JUMP JUMPDEST PUSH2 0xA9F JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x397 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E2C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x3D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C27 JUMP JUMPDEST PUSH2 0xBFE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x152A902D PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x3FD JUMPI POP PUSH2 0x3FD DUP3 PUSH2 0xC99 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x412 SWAP1 PUSH2 0x1E5F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x43E SWAP1 PUSH2 0x1E5F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x48B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x460 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x48B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x46E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A0 DUP3 PUSH2 0xCBE JUMP JUMPDEST PUSH2 0x506 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52D DUP3 PUSH2 0x7E2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x59A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x5B6 JUMPI POP PUSH2 0x5B6 DUP2 CALLER PUSH2 0x397 JUMP JUMPDEST PUSH2 0x628 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH2 0x632 DUP4 DUP4 PUSH2 0xCDB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x641 CALLER DUP3 PUSH2 0xD49 JUMP JUMPDEST PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x1E99 JUMP JUMPDEST PUSH2 0x632 DUP4 DUP4 DUP4 PUSH2 0xE33 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x64 PUSH1 0xE SLOAD DUP6 PUSH2 0x67D SWAP2 SWAP1 PUSH2 0x1F00 JUMP JUMPDEST PUSH2 0x687 SWAP2 SWAP1 PUSH2 0x1F35 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6A9 DUP4 PUSH2 0x859 JUMP JUMPDEST DUP3 LT PUSH2 0x70B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x74206F6620626F756E6473 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x632 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xA5C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x75A PUSH1 0x9 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0x7BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x7574206F6620626F756E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x7D0 JUMPI PUSH2 0x7D0 PUSH2 0x1F49 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x3FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x90A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x1F5F JUMP JUMPDEST PUSH2 0x914 PUSH1 0x0 PUSH2 0xFDA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x923 DUP4 PUSH2 0x859 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x940 JUMPI PUSH2 0x940 PUSH2 0x1CC2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x969 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 PUSH1 0x0 SUB PUSH2 0x98B JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9CF JUMPI PUSH2 0x9A0 DUP6 DUP3 PUSH2 0x69E JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9B2 JUMPI PUSH2 0x9B2 PUSH2 0x1F49 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x9C7 DUP2 PUSH2 0x1F94 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x98E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x412 SWAP1 PUSH2 0x1E5F JUMP JUMPDEST PUSH2 0x9F1 CALLER DUP4 DUP4 PUSH2 0x102A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x1F5F JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP3 AND SUB PUSH2 0xA3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xA66 CALLER DUP4 PUSH2 0xD49 JUMP JUMPDEST PUSH2 0xA82 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x1E99 JUMP JUMPDEST PUSH2 0xA8E DUP5 DUP5 DUP5 DUP5 PUSH2 0x10F8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3FD DUP3 PUSH2 0x112B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xACA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x1F5F JUMP JUMPDEST PUSH2 0x1E61 PUSH2 0xAD6 PUSH1 0x9 SLOAD SWAP1 JUMP JUMPDEST GT ISZERO PUSH2 0xB18 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x105B1B081D1BDAD95B9CC81B5A5B9D1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT PUSH2 0xB26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC DUP3 PUSH1 0x40 MLOAD PUSH2 0xB36 SWAP2 SWAP1 PUSH2 0x1FAD JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x1 SUB PUSH2 0xB55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC DUP4 PUSH1 0x40 MLOAD PUSH2 0xB67 SWAP2 SWAP1 PUSH2 0x1FAD JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0xFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x0 PUSH2 0xB95 PUSH1 0x9 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xBA0 SWAP1 PUSH1 0x1 PUSH2 0x1FC9 JUMP JUMPDEST SWAP1 POP PUSH2 0xBAC DUP5 DUP3 PUSH2 0x128C JUMP JUMPDEST PUSH2 0xBB6 DUP2 DUP5 PUSH2 0x12A6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xF3CEA5493D790AF0133817606F7350A91D7F154EA52EAA79D179D4D231E50102 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x1F5F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH2 0xC96 DUP2 PUSH2 0xFDA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3FD JUMPI POP PUSH2 0x3FD DUP3 PUSH2 0x1331 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0xD10 DUP3 PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD54 DUP3 PUSH2 0xCBE JUMP JUMPDEST PUSH2 0xDB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC0 DUP4 PUSH2 0x7E2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xE07 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0xE2B JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE20 DUP5 PUSH2 0x495 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE46 DUP3 PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xEAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH2 0xF17 DUP4 DUP4 DUP4 PUSH2 0x1381 JUMP JUMPDEST PUSH2 0xF22 PUSH1 0x0 DUP3 PUSH2 0xCDB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xF4B SWAP1 DUP5 SWAP1 PUSH2 0x1FE1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xF79 SWAP1 DUP5 SWAP1 PUSH2 0x1FC9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x108B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1103 DUP5 DUP5 DUP5 PUSH2 0xE33 JUMP JUMPDEST PUSH2 0x110F DUP5 DUP5 DUP5 DUP5 PUSH2 0x138C JUMP JUMPDEST PUSH2 0xA8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x1FF8 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1136 DUP3 PUSH2 0xCBE JUMP JUMPDEST PUSH2 0x119C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920717565727920666F7220 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x3737B732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x79 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x11B5 SWAP1 PUSH2 0x1E5F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x11E1 SWAP1 PUSH2 0x1E5F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x122E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1203 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x122E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1211 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x123F PUSH2 0x148D JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1251 JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x1283 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x126B SWAP3 SWAP2 SWAP1 PUSH2 0x204A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE2B DUP5 PUSH2 0x14AD JUMP JUMPDEST PUSH2 0x9F1 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1578 JUMP JUMPDEST PUSH2 0x12AF DUP3 PUSH2 0xCBE JUMP JUMPDEST PUSH2 0x1312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x32BC34B9BA32B73A103A37B5B2B7 PUSH1 0x91 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD PUSH2 0x632 SWAP3 DUP5 ADD SWAP1 PUSH2 0x1A33 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x1362 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x3FD JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x3FD JUMP JUMPDEST PUSH2 0x632 DUP4 DUP4 DUP4 PUSH2 0x15AB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x1482 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x13D0 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2079 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x140B JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1408 SWAP2 DUP2 ADD SWAP1 PUSH2 0x20B6 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1468 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1439 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x143E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1460 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x1FF8 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0xE2B JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20FE PUSH1 0x22 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x14B8 DUP3 PUSH2 0xCBE JUMP JUMPDEST PUSH2 0x151C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1526 PUSH2 0x148D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1546 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1571 JUMP JUMPDEST DUP1 PUSH2 0x1550 DUP5 PUSH2 0x1663 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1561 SWAP3 SWAP2 SWAP1 PUSH2 0x204A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1582 DUP4 DUP4 PUSH2 0x1764 JUMP JUMPDEST PUSH2 0x158F PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x138C JUMP JUMPDEST PUSH2 0x632 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x1FF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1606 JUMPI PUSH2 0x1601 DUP2 PUSH1 0x9 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF ADD SSTORE JUMP JUMPDEST PUSH2 0x1629 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1629 JUMPI PUSH2 0x1629 DUP4 DUP3 PUSH2 0x18A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1640 JUMPI PUSH2 0x632 DUP2 PUSH2 0x1940 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x632 JUMPI PUSH2 0x632 DUP3 DUP3 PUSH2 0x19EF JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0x168A JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x16B4 JUMPI DUP1 PUSH2 0x169E DUP2 PUSH2 0x1F94 JUMP JUMPDEST SWAP2 POP PUSH2 0x16AD SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x1F35 JUMP JUMPDEST SWAP2 POP PUSH2 0x168E JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16CF JUMPI PUSH2 0x16CF PUSH2 0x1CC2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x16F9 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0xE2B JUMPI PUSH2 0x170E PUSH1 0x1 DUP4 PUSH2 0x1FE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x171B PUSH1 0xA DUP7 PUSH2 0x20D3 JUMP JUMPDEST PUSH2 0x1726 SWAP1 PUSH1 0x30 PUSH2 0x1FC9 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x173B JUMPI PUSH2 0x173B PUSH2 0x1F49 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x175D PUSH1 0xA DUP7 PUSH2 0x1F35 JUMP JUMPDEST SWAP5 POP PUSH2 0x16FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x17BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH2 0x17C3 DUP2 PUSH2 0xCBE JUMP JUMPDEST ISZERO PUSH2 0x1810 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH2 0x181C PUSH1 0x0 DUP4 DUP4 PUSH2 0x1381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1845 SWAP1 DUP5 SWAP1 PUSH2 0x1FC9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x18B0 DUP5 PUSH2 0x859 JUMP JUMPDEST PUSH2 0x18BA SWAP2 SWAP1 PUSH2 0x1FE1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x190D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x8 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x7 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1952 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1FE1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x9 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x197A JUMPI PUSH2 0x197A PUSH2 0x1F49 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x9 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x199B JUMPI PUSH2 0x199B PUSH2 0x1F49 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0xA SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x9 DUP1 SLOAD DUP1 PUSH2 0x19D3 JUMPI PUSH2 0x19D3 PUSH2 0x20E7 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19FA DUP4 PUSH2 0x859 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x8 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1A3F SWAP1 PUSH2 0x1E5F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1A61 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1AA7 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1A7A JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1AA7 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1AA7 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1AA7 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1A8C JUMP JUMPDEST POP PUSH2 0x1AB3 SWAP3 SWAP2 POP PUSH2 0x1AB7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1AB3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1AB8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xC96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1571 DUP2 PUSH2 0x1ACC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B1A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B02 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xA8E JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1B43 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1571 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B2B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1B9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BBB DUP4 PUSH2 0x1B83 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BE7 DUP5 PUSH2 0x1B83 JUMP JUMPDEST SWAP3 POP PUSH2 0x1BF5 PUSH1 0x20 DUP6 ADD PUSH2 0x1B83 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1571 DUP3 PUSH2 0x1B83 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C7A JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1C5E JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CA2 DUP4 PUSH2 0x1B83 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1CB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x1CF3 JUMPI PUSH2 0x1CF3 PUSH2 0x1CC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1D1B JUMPI PUSH2 0x1D1B PUSH2 0x1CC2 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x1D34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1D64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D6D DUP6 PUSH2 0x1B83 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D7B PUSH1 0x20 DUP7 ADD PUSH2 0x1B83 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x1DAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DBE DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1CD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DE6 DUP4 PUSH2 0x1B83 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1E13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E22 DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1CD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E48 DUP4 PUSH2 0x1B83 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E56 PUSH1 0x20 DUP5 ADD PUSH2 0x1B83 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1E73 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1E93 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1F1A JUMPI PUSH2 0x1F1A PUSH2 0x1EEA JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1F44 JUMPI PUSH2 0x1F44 PUSH2 0x1F1F JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1FA6 JUMPI PUSH2 0x1FA6 PUSH2 0x1EEA JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1FBF DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1AFF JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1FDC JUMPI PUSH2 0x1FDC PUSH2 0x1EEA JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1FF3 JUMPI PUSH2 0x1FF3 PUSH2 0x1EEA JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x205C DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1AFF JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x2070 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1AFF JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x20AC SWAP1 DUP4 ADD DUP5 PUSH2 0x1B2B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1571 DUP2 PUSH2 0x1ACC JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x20E2 JUMPI PUSH2 0x20E2 PUSH2 0x1F1F JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH9 0x747470733A2F2F6761 PUSH21 0x657761792E70696E6174612E636C6F75642F697066 PUSH20 0x2FA26469706673582212209D95EA38C2C77B39CF 0xCD DUP15 SWAP3 JUMPDEST 0x27 0xC1 DUP1 PUSH4 0x34BC119A 0xD DUP14 0xAB 0xC1 BALANCE 0xBC 0xB9 CALLER PUSH15 0xAEC564736F6C634300080D00330000 ",
							"sourceMap": "866:4719:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3218:230;;;;;;:::i;:::-;;:::i;:::-;;;565:14:15;;558:22;540:41;;528:2;513:18;3218:230:0;;;;;;;;2488:98:3;;;:::i;:::-;;;;;;;:::i;4000:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:15;;;1674:51;;1662:2;1647:18;4000:217:3;1528:203:15;3538:401:3;;;;;;:::i;:::-;;:::i;:::-;;1615:111:6;1702:10;:17;1615:111;;;2319:25:15;;;2307:2;2292:18;1615:111:6;2173:177:15;1277:41:0;;;;;;4727:330:3;;;;;;:::i;:::-;;:::i;4552:261:0:-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;3133:32:15;;;3115:51;;3197:2;3182:18;;3175:34;;;;3088:18;4552:261:0;2941:274:15;1291:253:6;;;;;;:::i;:::-;;:::i;1079:41:0:-;;1116:4;1079:41;;5123:179:3;;;;;;:::i;:::-;;:::i;1798:230:6:-;;;;;;:::i;:::-;;:::i;2191:235:3:-;;;;;;:::i;:::-;;:::i;1929:205::-;;;;;;:::i;:::-;;:::i;1668:101:2:-;;;:::i;3668:460:0:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1036:85:2:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:2;1036:85;;2650:102:3;;;:::i;4284:153::-;;;;;;:::i;:::-;;:::i;2230:97:0:-;2302:18;;-1:-1:-1;;;;;2302:18:0;2230:97;;2529:223;;;;;;:::i;:::-;;:::i;5368:320:3:-;;;;;;:::i;:::-;;:::i;2983:161:0:-;;;;;;:::i;:::-;;:::i;5032:550::-;;;;;;:::i;:::-;;:::i;4503:162:3:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4623:25:3;;;4600:4;4623:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4503:162;1918:198:2;;;;;;:::i;:::-;;:::i;3218:230:0:-;3329:4;-1:-1:-1;;;;;;3352:41:0;;-1:-1:-1;;;3352:41:0;;:89;;;3405:36;3429:11;3405:23;:36::i;:::-;3345:96;3218:230;-1:-1:-1;;3218:230:0:o;2488:98:3:-;2542:13;2574:5;2567:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2488:98;:::o;4000:217::-;4076:7;4103:16;4111:7;4103;:16::i;:::-;4095:73;;;;-1:-1:-1;;;4095:73:3;;7220:2:15;4095:73:3;;;7202:21:15;7259:2;7239:18;;;7232:30;7298:34;7278:18;;;7271:62;-1:-1:-1;;;7349:18:15;;;7342:42;7401:19;;4095:73:3;;;;;;;;;-1:-1:-1;4186:24:3;;;;:15;:24;;;;;;-1:-1:-1;;;;;4186:24:3;;4000:217::o;3538:401::-;3618:13;3634:23;3649:7;3634:14;:23::i;:::-;3618:39;;3681:5;-1:-1:-1;;;;;3675:11:3;:2;-1:-1:-1;;;;;3675:11:3;;3667:57;;;;-1:-1:-1;;;3667:57:3;;7633:2:15;3667:57:3;;;7615:21:15;7672:2;7652:18;;;7645:30;7711:34;7691:18;;;7684:62;-1:-1:-1;;;7762:18:15;;;7755:31;7803:19;;3667:57:3;7431:397:15;3667:57:3;719:10:11;-1:-1:-1;;;;;3756:21:3;;;;:62;;-1:-1:-1;3781:37:3;3798:5;719:10:11;4503:162:3;:::i;3781:37::-;3735:165;;;;-1:-1:-1;;;3735:165:3;;8035:2:15;3735:165:3;;;8017:21:15;8074:2;8054:18;;;8047:30;8113:34;8093:18;;;8086:62;8184:26;8164:18;;;8157:54;8228:19;;3735:165:3;7833:420:15;3735:165:3;3911:21;3920:2;3924:7;3911:8;:21::i;:::-;3608:331;3538:401;;:::o;4727:330::-;4916:41;719:10:11;4949:7:3;4916:18;:41::i;:::-;4908:103;;;;-1:-1:-1;;;4908:103:3;;;;;;;:::i;:::-;5022:28;5032:4;5038:2;5042:7;5022:9;:28::i;4552:261:0:-;4638:16;4656:21;4689:18;4753:3;4724:25;;4711:10;:38;;;;:::i;:::-;4710:46;;;;:::i;:::-;4775:18;;-1:-1:-1;;;;;4775:18:0;;4689:67;;-1:-1:-1;4552:261:0;-1:-1:-1;;;;4552:261:0:o;1291:253:6:-;1388:7;1423:23;1440:5;1423:16;:23::i;:::-;1415:5;:31;1407:87;;;;-1:-1:-1;;;1407:87:6;;9440:2:15;1407:87:6;;;9422:21:15;9479:2;9459:18;;;9452:30;9518:34;9498:18;;;9491:62;-1:-1:-1;;;9569:18:15;;;9562:41;9620:19;;1407:87:6;9238:407:15;1407:87:6;-1:-1:-1;;;;;;1511:19:6;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1291:253::o;5123:179:3:-;5256:39;5273:4;5279:2;5283:7;5256:39;;;;;;;;;;;;:16;:39::i;1798:230:6:-;1873:7;1908:30;1702:10;:17;;1615:111;1908:30;1900:5;:38;1892:95;;;;-1:-1:-1;;;1892:95:6;;9852:2:15;1892:95:6;;;9834:21:15;9891:2;9871:18;;;9864:30;9930:34;9910:18;;;9903:62;-1:-1:-1;;;9981:18:15;;;9974:42;10033:19;;1892:95:6;9650:408:15;1892:95:6;2004:10;2015:5;2004:17;;;;;;;;:::i;:::-;;;;;;;;;1997:24;;1798:230;;;:::o;2191:235:3:-;2263:7;2298:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2298:16:3;;2324:73;;;;-1:-1:-1;;;2324:73:3;;10397:2:15;2324:73:3;;;10379:21:15;10436:2;10416:18;;;10409:30;10475:34;10455:18;;;10448:62;-1:-1:-1;;;10526:18:15;;;10519:39;10575:19;;2324:73:3;10195:405:15;1929:205:3;2001:7;-1:-1:-1;;;;;2028:19:3;;2020:74;;;;-1:-1:-1;;;2020:74:3;;10807:2:15;2020:74:3;;;10789:21:15;10846:2;10826:18;;;10819:30;10885:34;10865:18;;;10858:62;-1:-1:-1;;;10936:18:15;;;10929:40;10986:19;;2020:74:3;10605:406:15;2020:74:3;-1:-1:-1;;;;;;2111:16:3;;;;;:9;:16;;;;;;;1929:205::o;1668:101:2:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:2;719:10:11;1248:23:2;1240:68;;;;-1:-1:-1;;;1240:68:2;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;3668:460:0:-;3733:28;3774:18;3795:17;3805:6;3795:9;:17::i;:::-;3774:38;;3822:23;3862:10;3848:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3848:25:0;;3822:51;;3888:10;3902:1;3888:15;3884:238;;-1:-1:-1;;3926:16:0;;;3940:1;3926:16;;;;;;;;;3919:23;-1:-1:-1;;3668:460:0:o;3884:238::-;3978:9;3973:112;3993:10;3991:1;:12;3973:112;;;4040:30;4060:6;4068:1;4040:19;:30::i;:::-;4028:6;4035:1;4028:9;;;;;;;;:::i;:::-;;;;;;;;;;:42;4005:3;;;;:::i;:::-;;;;3973:112;;;-1:-1:-1;4105:6:0;3668:460;-1:-1:-1;;;3668:460:0:o;2650:102:3:-;2706:13;2738:7;2731:14;;;;;:::i;4284:153::-;4378:52;719:10:11;4411:8:3;4421;4378:18;:52::i;:::-;4284:153;;:::o;2529:223:0:-;1082:7:2;1108:6;-1:-1:-1;;;;;1108:6:2;719:10:11;1248:23:2;1240:68;;;;-1:-1:-1;;;1240:68:2;;;;;;;:::i;:::-;2654:18:0::1;::::0;-1:-1:-1;;;;;2654:18:0;;::::1;2630:42:::0;;::::1;::::0;2622:51:::1;;;::::0;::::1;;2704:18;:41:::0;;-1:-1:-1;;;;;;2704:41:0::1;-1:-1:-1::0;;;;;2704:41:0;;;::::1;::::0;;;::::1;::::0;;2529:223::o;5368:320:3:-;5537:41;719:10:11;5570:7:3;5537:18;:41::i;:::-;5529:103;;;;-1:-1:-1;;;5529:103:3;;;;;;;:::i;:::-;5642:39;5656:4;5662:2;5666:7;5675:5;5642:13;:39::i;:::-;5368:320;;;;:::o;2983:161:0:-;3082:13;3114:23;3129:7;3114:14;:23::i;5032:550::-;5121:15;1108:6:2;;-1:-1:-1;;;;;1108:6:2;719:10:11;1248:23:2;1240:68;;;;-1:-1:-1;;;1240:68:2;;;;;;;:::i;:::-;1116:4:0::1;5160:13;1702:10:6::0;:17;;1615:111;5160:13:0::1;:27;;5152:57;;;::::0;-1:-1:-1;;;5152:57:0;;11719:2:15;5152:57:0::1;::::0;::::1;11701:21:15::0;11758:2;11738:18;;;11731:30;-1:-1:-1;;;11777:18:15;;;11770:47;11834:18;;5152:57:0::1;11517:341:15::0;5152:57:0::1;5248:1;5233:4;5227:18;:22;5219:31;;;::::0;::::1;;5299:6;5306:4;5299:12;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;::::1;;::::0;:17;5291:26:::1;;;::::0;::::1;;5380:1;5365:6;5372:4;5365:12;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:16;;::::1;::::0;;;::::1;-1:-1:-1::0;;5365:16:0;;::::1;::::0;;;::::1;::::0;;:12:::1;5411:13;1702:10:6::0;:17;;1615:111;5411:13:0::1;:17;::::0;5427:1:::1;5411:17;:::i;:::-;5391:37;;5438:31;5448:9;5459;5438;:31::i;:::-;5479:29;5492:9;5503:4;5479:12;:29::i;:::-;5523:26;::::0;;12451:25:15;;;-1:-1:-1;;;;;12512:32:15;;12507:2;12492:18;;12485:60;5523:26:0::1;::::0;12424:18:15;5523:26:0::1;;;;;;;5566:9:::0;5032:550;-1:-1:-1;;;5032:550:0:o;1918:198:2:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:2;719:10:11;1248:23:2;1240:68;;;;-1:-1:-1;;;1240:68:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:2;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:2;;12758:2:15;1998:73:2::1;::::0;::::1;12740:21:15::0;12797:2;12777:18;;;12770:30;12836:34;12816:18;;;12809:62;-1:-1:-1;;;12887:18:15;;;12880:36;12933:19;;1998:73:2::1;12556:402:15::0;1998:73:2::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;990:222:6:-;1092:4;-1:-1:-1;;;;;;1115:50:6;;-1:-1:-1;;;1115:50:6;;:90;;;1169:36;1193:11;1169:23;:36::i;7160:125:3:-;7225:4;7248:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7248:16:3;:30;;;7160:125::o;11169:171::-;11243:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11243:29:3;-1:-1:-1;;;;;11243:29:3;;;;;;;;:24;;11296:23;11243:24;11296:14;:23::i;:::-;-1:-1:-1;;;;;11287:46:3;;;;;;;;;;;11169:171;;:::o;7443:344::-;7536:4;7560:16;7568:7;7560;:16::i;:::-;7552:73;;;;-1:-1:-1;;;7552:73:3;;13165:2:15;7552:73:3;;;13147:21:15;13204:2;13184:18;;;13177:30;13243:34;13223:18;;;13216:62;-1:-1:-1;;;13294:18:15;;;13287:42;13346:19;;7552:73:3;12963:408:15;7552:73:3;7635:13;7651:23;7666:7;7651:14;:23::i;:::-;7635:39;;7703:5;-1:-1:-1;;;;;7692:16:3;:7;-1:-1:-1;;;;;7692:16:3;;:52;;;-1:-1:-1;;;;;;4623:25:3;;;4600:4;4623:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7712:32;7692:87;;;;7772:7;-1:-1:-1;;;;;7748:31:3;:20;7760:7;7748:11;:20::i;:::-;-1:-1:-1;;;;;7748:31:3;;7692:87;7684:96;7443:344;-1:-1:-1;;;;7443:344:3:o;10453:605::-;10607:4;-1:-1:-1;;;;;10580:31:3;:23;10595:7;10580:14;:23::i;:::-;-1:-1:-1;;;;;10580:31:3;;10572:81;;;;-1:-1:-1;;;10572:81:3;;13578:2:15;10572:81:3;;;13560:21:15;13617:2;13597:18;;;13590:30;13656:34;13636:18;;;13629:62;-1:-1:-1;;;13707:18:15;;;13700:35;13752:19;;10572:81:3;13376:401:15;10572:81:3;-1:-1:-1;;;;;10671:16:3;;10663:65;;;;-1:-1:-1;;;10663:65:3;;13984:2:15;10663:65:3;;;13966:21:15;14023:2;14003:18;;;13996:30;14062:34;14042:18;;;14035:62;-1:-1:-1;;;14113:18:15;;;14106:34;14157:19;;10663:65:3;13782:400:15;10663:65:3;10739:39;10760:4;10766:2;10770:7;10739:20;:39::i;:::-;10840:29;10857:1;10861:7;10840:8;:29::i;:::-;-1:-1:-1;;;;;10880:15:3;;;;;;:9;:15;;;;;:20;;10899:1;;10880:15;:20;;10899:1;;10880:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10910:13:3;;;;;;:9;:13;;;;;:18;;10927:1;;10910:13;:18;;10927:1;;10910:18;:::i;:::-;;;;-1:-1:-1;;10938:16:3;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10938:21:3;-1:-1:-1;;;;;10938:21:3;;;;;;;;;10975:27;;10938:16;;10975:27;;;;;;;3608:331;3538:401;;:::o;2270:187:2:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:2;;;-1:-1:-1;;;;;;2378:17:2;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;11475:307:3:-;11625:8;-1:-1:-1;;;;;11616:17:3;:5;-1:-1:-1;;;;;11616:17:3;;11608:55;;;;-1:-1:-1;;;11608:55:3;;14519:2:15;11608:55:3;;;14501:21:15;14558:2;14538:18;;;14531:30;14597:27;14577:18;;;14570:55;14642:18;;11608:55:3;14317:349:15;11608:55:3;-1:-1:-1;;;;;11673:25:3;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11673:46:3;;;;;;;;;;11734:41;;540::15;;;11734::3;;513:18:15;11734:41:3;;;;;;;11475:307;;;:::o;6550:::-;6701:28;6711:4;6717:2;6721:7;6701:9;:28::i;:::-;6747:48;6770:4;6776:2;6780:7;6789:5;6747:22;:48::i;:::-;6739:111;;;;-1:-1:-1;;;6739:111:3;;;;;;;:::i;467:663:7:-;540:13;573:16;581:7;573;:16::i;:::-;565:78;;;;-1:-1:-1;;;565:78:7;;15292:2:15;565:78:7;;;15274:21:15;15331:2;15311:18;;;15304:30;15370:34;15350:18;;;15343:62;-1:-1:-1;;;15421:18:15;;;15414:47;15478:19;;565:78:7;15090:413:15;565:78:7;654:23;680:19;;;:10;:19;;;;;654:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;709:18;730:10;:8;:10::i;:::-;709:31;;819:4;813:18;835:1;813:23;809:70;;-1:-1:-1;859:9:7;467:663;-1:-1:-1;;467:663:7:o;809:70::-;981:23;;:27;977:106;;1055:4;1061:9;1038:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1024:48;;;;467:663;;;:::o;977:106::-;1100:23;1115:7;1100:14;:23::i;8117:108:3:-;8192:26;8202:2;8206:7;8192:26;;;;;;;;;;;;:9;:26::i;1277:214:7:-;1376:16;1384:7;1376;:16::i;:::-;1368:75;;;;-1:-1:-1;;;1368:75:7;;16185:2:15;1368:75:7;;;16167:21:15;16224:2;16204:18;;;16197:30;16263:34;16243:18;;;16236:62;-1:-1:-1;;;16314:18:15;;;16307:44;16368:19;;1368:75:7;15983:410:15;1368:75:7;1453:19;;;;:10;:19;;;;;;;;:31;;;;;;;;:::i;1570:300:3:-;1672:4;-1:-1:-1;;;;;;1707:40:3;;-1:-1:-1;;;1707:40:3;;:104;;-1:-1:-1;;;;;;;1763:48:3;;-1:-1:-1;;;1763:48:3;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:13;;;1827:36:3;829:155:13;1810:181:0;1940:44;1967:4;1973:2;1977:6;1940:26;:44::i;12335:778:3:-;12485:4;-1:-1:-1;;;;;12505:13:3;;1465:19:10;:23;12501:606:3;;12540:72;;-1:-1:-1;;;12540:72:3;;-1:-1:-1;;;;;12540:36:3;;;;;:72;;719:10:11;;12591:4:3;;12597:7;;12606:5;;12540:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12540:72:3;;;;;;;;-1:-1:-1;;12540:72:3;;;;;;;;;;;;:::i;:::-;;;12536:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12779:6;:13;12796:1;12779:18;12775:266;;12821:60;;-1:-1:-1;;;12821:60:3;;;;;;;:::i;12775:266::-;12993:6;12987:13;12978:6;12974:2;12970:15;12963:38;12536:519;-1:-1:-1;;;;;;12662:51:3;-1:-1:-1;;;12662:51:3;;-1:-1:-1;12655:58:3;;12501:606;-1:-1:-1;13092:4:3;12335:778;;;;;;:::o;1677:127:0:-;1729:13;1754:43;;;;;;;;;;;;;;;;;;;1677:127;:::o;2818:329:3:-;2891:13;2924:16;2932:7;2924;:16::i;:::-;2916:76;;;;-1:-1:-1;;;2916:76:3;;17348:2:15;2916:76:3;;;17330:21:15;17387:2;17367:18;;;17360:30;17426:34;17406:18;;;17399:62;-1:-1:-1;;;17477:18:15;;;17470:45;17532:19;;2916:76:3;17146:411:15;2916:76:3;3003:21;3027:10;:8;:10::i;:::-;3003:34;;3078:1;3060:7;3054:21;:25;:86;;;;;;;;;;;;;;;;;3106:7;3115:18;:7;:16;:18::i;:::-;3089:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3054:86;3047:93;2818:329;-1:-1:-1;;;2818:329:3:o;8446:311::-;8571:18;8577:2;8581:7;8571:5;:18::i;:::-;8620:54;8651:1;8655:2;8659:7;8668:5;8620:22;:54::i;:::-;8599:151;;;;-1:-1:-1;;;8599:151:3;;;;;;;:::i;2624:572:6:-;-1:-1:-1;;;;;2823:18:6;;2819:183;;2857:40;2889:7;4005:10;:17;;3978:24;;;;:15;:24;;;;;:44;;;4032:24;;;;;;;;;;;;3902:161;2857:40;2819:183;;;2926:2;-1:-1:-1;;;;;2918:10:6;:4;-1:-1:-1;;;;;2918:10:6;;2914:88;;2944:47;2977:4;2983:7;2944:32;:47::i;:::-;-1:-1:-1;;;;;3015:16:6;;3011:179;;3047:45;3084:7;3047:36;:45::i;3011:179::-;3119:4;-1:-1:-1;;;;;3113:10:6;:2;-1:-1:-1;;;;;3113:10:6;;3109:81;;3139:40;3167:2;3171:7;3139:27;:40::i;328:703:12:-;384:13;601:5;610:1;601:10;597:51;;-1:-1:-1;;627:10:12;;;;;;;;;;;;-1:-1:-1;;;627:10:12;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:12;;-1:-1:-1;773:2:12;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:12;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:12;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:12;;;;;;;;-1:-1:-1;972:11:12;981:2;972:11;;:::i;:::-;;;844:150;;9079:427:3;-1:-1:-1;;;;;9158:16:3;;9150:61;;;;-1:-1:-1;;;9150:61:3;;17881:2:15;9150:61:3;;;17863:21:15;;;17900:18;;;17893:30;17959:34;17939:18;;;17932:62;18011:18;;9150:61:3;17679:356:15;9150:61:3;9230:16;9238:7;9230;:16::i;:::-;9229:17;9221:58;;;;-1:-1:-1;;;9221:58:3;;18242:2:15;9221:58:3;;;18224:21:15;18281:2;18261:18;;;18254:30;18320;18300:18;;;18293:58;18368:18;;9221:58:3;18040:352:15;9221:58:3;9290:45;9319:1;9323:2;9327:7;9290:20;:45::i;:::-;-1:-1:-1;;;;;9346:13:3;;;;;;:9;:13;;;;;:18;;9363:1;;9346:13;:18;;9363:1;;9346:18;:::i;:::-;;;;-1:-1:-1;;9374:16:3;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9374:21:3;-1:-1:-1;;;;;9374:21:3;;;;;;;;9411:33;;9374:16;;;9411:33;;9374:16;;9411:33;4284:153;;:::o;4680:970:6:-;4942:22;4992:1;4967:22;4984:4;4967:16;:22::i;:::-;:26;;;;:::i;:::-;5003:18;5024:26;;;:17;:26;;;;;;4942:51;;-1:-1:-1;5154:28:6;;;5150:323;;-1:-1:-1;;;;;5220:18:6;;5198:19;5220:18;;;:12;:18;;;;;;;;:34;;;;;;;;;5269:30;;;;;;:44;;;5385:30;;:17;:30;;;;;:43;;;5150:323;-1:-1:-1;5566:26:6;;;;:17;:26;;;;;;;;5559:33;;;-1:-1:-1;;;;;5609:18:6;;;;;:12;:18;;;;;:34;;;;;;;5602:41;4680:970::o;5938:1061::-;6212:10;:17;6187:22;;6212:21;;6232:1;;6212:21;:::i;:::-;6243:18;6264:24;;;:15;:24;;;;;;6632:10;:26;;6187:46;;-1:-1:-1;6264:24:6;;6187:46;;6632:26;;;;;;:::i;:::-;;;;;;;;;6610:48;;6694:11;6669:10;6680;6669:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;6773:28;;;:15;:28;;;;;;;:41;;;6942:24;;;;;6935:31;6976:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;6009:990;;;5938:1061;:::o;3490:217::-;3574:14;3591:20;3608:2;3591:16;:20::i;:::-;-1:-1:-1;;;;;3621:16:6;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;3665:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3490:217:6:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:15;-1:-1:-1;;;;;;88:32:15;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:15;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:15;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:15:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:15;;1343:180;-1:-1:-1;1343:180:15:o;1736:173::-;1804:20;;-1:-1:-1;;;;;1853:31:15;;1843:42;;1833:70;;1899:1;1896;1889:12;1833:70;1736:173;;;:::o;1914:254::-;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:15:o;2355:328::-;2432:6;2440;2448;2501:2;2489:9;2480:7;2476:23;2472:32;2469:52;;;2517:1;2514;2507:12;2469:52;2540:29;2559:9;2540:29;:::i;:::-;2530:39;;2588:38;2622:2;2611:9;2607:18;2588:38;:::i;:::-;2578:48;;2673:2;2662:9;2658:18;2645:32;2635:42;;2355:328;;;;;:::o;2688:248::-;2756:6;2764;2817:2;2805:9;2796:7;2792:23;2788:32;2785:52;;;2833:1;2830;2823:12;2785:52;-1:-1:-1;;2856:23:15;;;2926:2;2911:18;;;2898:32;;-1:-1:-1;2688:248:15:o;3220:186::-;3279:6;3332:2;3320:9;3311:7;3307:23;3303:32;3300:52;;;3348:1;3345;3338:12;3300:52;3371:29;3390:9;3371:29;:::i;3411:632::-;3582:2;3634:21;;;3704:13;;3607:18;;;3726:22;;;3553:4;;3582:2;3805:15;;;;3779:2;3764:18;;;3553:4;3848:169;3862:6;3859:1;3856:13;3848:169;;;3923:13;;3911:26;;3992:15;;;;3957:12;;;;3884:1;3877:9;3848:169;;;-1:-1:-1;4034:3:15;;3411:632;-1:-1:-1;;;;;;3411:632:15:o;4048:347::-;4113:6;4121;4174:2;4162:9;4153:7;4149:23;4145:32;4142:52;;;4190:1;4187;4180:12;4142:52;4213:29;4232:9;4213:29;:::i;:::-;4203:39;;4292:2;4281:9;4277:18;4264:32;4339:5;4332:13;4325:21;4318:5;4315:32;4305:60;;4361:1;4358;4351:12;4305:60;4384:5;4374:15;;;4048:347;;;;;:::o;4400:127::-;4461:10;4456:3;4452:20;4449:1;4442:31;4492:4;4489:1;4482:15;4516:4;4513:1;4506:15;4532:631;4596:5;4626:18;4667:2;4659:6;4656:14;4653:40;;;4673:18;;:::i;:::-;4748:2;4742:9;4716:2;4802:15;;-1:-1:-1;;4798:24:15;;;4824:2;4794:33;4790:42;4778:55;;;4848:18;;;4868:22;;;4845:46;4842:72;;;4894:18;;:::i;:::-;4934:10;4930:2;4923:22;4963:6;4954:15;;4993:6;4985;4978:22;5033:3;5024:6;5019:3;5015:16;5012:25;5009:45;;;5050:1;5047;5040:12;5009:45;5100:6;5095:3;5088:4;5080:6;5076:17;5063:44;5155:1;5148:4;5139:6;5131;5127:19;5123:30;5116:41;;;;4532:631;;;;;:::o;5168:666::-;5263:6;5271;5279;5287;5340:3;5328:9;5319:7;5315:23;5311:33;5308:53;;;5357:1;5354;5347:12;5308:53;5380:29;5399:9;5380:29;:::i;:::-;5370:39;;5428:38;5462:2;5451:9;5447:18;5428:38;:::i;:::-;5418:48;;5513:2;5502:9;5498:18;5485:32;5475:42;;5568:2;5557:9;5553:18;5540:32;5595:18;5587:6;5584:30;5581:50;;;5627:1;5624;5617:12;5581:50;5650:22;;5703:4;5695:13;;5691:27;-1:-1:-1;5681:55:15;;5732:1;5729;5722:12;5681:55;5755:73;5820:7;5815:2;5802:16;5797:2;5793;5789:11;5755:73;:::i;:::-;5745:83;;;5168:666;;;;;;;:::o;5839:524::-;5917:6;5925;5978:2;5966:9;5957:7;5953:23;5949:32;5946:52;;;5994:1;5991;5984:12;5946:52;6017:29;6036:9;6017:29;:::i;:::-;6007:39;;6097:2;6086:9;6082:18;6069:32;6124:18;6116:6;6113:30;6110:50;;;6156:1;6153;6146:12;6110:50;6179:22;;6232:4;6224:13;;6220:27;-1:-1:-1;6210:55:15;;6261:1;6258;6251:12;6210:55;6284:73;6349:7;6344:2;6331:16;6326:2;6322;6318:11;6284:73;:::i;:::-;6274:83;;;5839:524;;;;;:::o;6368:260::-;6436:6;6444;6497:2;6485:9;6476:7;6472:23;6468:32;6465:52;;;6513:1;6510;6503:12;6465:52;6536:29;6555:9;6536:29;:::i;:::-;6526:39;;6584:38;6618:2;6607:9;6603:18;6584:38;:::i;:::-;6574:48;;6368:260;;;;;:::o;6633:380::-;6712:1;6708:12;;;;6755;;;6776:61;;6830:4;6822:6;6818:17;6808:27;;6776:61;6883:2;6875:6;6872:14;6852:18;6849:38;6846:161;;6929:10;6924:3;6920:20;6917:1;6910:31;6964:4;6961:1;6954:15;6992:4;6989:1;6982:15;6846:161;;6633:380;;;:::o;8258:413::-;8460:2;8442:21;;;8499:2;8479:18;;;8472:30;8538:34;8533:2;8518:18;;8511:62;-1:-1:-1;;;8604:2:15;8589:18;;8582:47;8661:3;8646:19;;8258:413::o;8676:127::-;8737:10;8732:3;8728:20;8725:1;8718:31;8768:4;8765:1;8758:15;8792:4;8789:1;8782:15;8808:168;8848:7;8914:1;8910;8906:6;8902:14;8899:1;8896:21;8891:1;8884:9;8877:17;8873:45;8870:71;;;8921:18;;:::i;:::-;-1:-1:-1;8961:9:15;;8808:168::o;8981:127::-;9042:10;9037:3;9033:20;9030:1;9023:31;9073:4;9070:1;9063:15;9097:4;9094:1;9087:15;9113:120;9153:1;9179;9169:35;;9184:18;;:::i;:::-;-1:-1:-1;9218:9:15;;9113:120::o;10063:127::-;10124:10;10119:3;10115:20;10112:1;10105:31;10155:4;10152:1;10145:15;10179:4;10176:1;10169:15;11016:356;11218:2;11200:21;;;11237:18;;;11230:30;11296:34;11291:2;11276:18;;11269:62;11363:2;11348:18;;11016:356::o;11377:135::-;11416:3;11437:17;;;11434:43;;11457:18;;:::i;:::-;-1:-1:-1;11504:1:15;11493:13;;11377:135::o;11863:276::-;11994:3;12032:6;12026:13;12048:53;12094:6;12089:3;12082:4;12074:6;12070:17;12048:53;:::i;:::-;12117:16;;;;;11863:276;-1:-1:-1;;11863:276:15:o;12144:128::-;12184:3;12215:1;12211:6;12208:1;12205:13;12202:39;;;12221:18;;:::i;:::-;-1:-1:-1;12257:9:15;;12144:128::o;14187:125::-;14227:4;14255:1;14252;14249:8;14246:34;;;14260:18;;:::i;:::-;-1:-1:-1;14297:9:15;;14187:125::o;14671:414::-;14873:2;14855:21;;;14912:2;14892:18;;;14885:30;14951:34;14946:2;14931:18;;14924:62;-1:-1:-1;;;15017:2:15;15002:18;;14995:48;15075:3;15060:19;;14671:414::o;15508:470::-;15687:3;15725:6;15719:13;15741:53;15787:6;15782:3;15775:4;15767:6;15763:17;15741:53;:::i;:::-;15857:13;;15816:16;;;;15879:57;15857:13;15816:16;15913:4;15901:17;;15879:57;:::i;:::-;15952:20;;15508:470;-1:-1:-1;;;;15508:470:15:o;16398:489::-;-1:-1:-1;;;;;16667:15:15;;;16649:34;;16719:15;;16714:2;16699:18;;16692:43;16766:2;16751:18;;16744:34;;;16814:3;16809:2;16794:18;;16787:31;;;16592:4;;16835:46;;16861:19;;16853:6;16835:46;:::i;:::-;16827:54;16398:489;-1:-1:-1;;;;;;16398:489:15:o;16892:249::-;16961:6;17014:2;17002:9;16993:7;16989:23;16985:32;16982:52;;;17030:1;17027;17020:12;16982:52;17062:9;17056:16;17081:30;17105:5;17081:30;:::i;17562:112::-;17594:1;17620;17610:35;;17625:18;;:::i;:::-;-1:-1:-1;17659:9:15;;17562:112::o;18397:127::-;18458:10;18453:3;18449:20;18446:1;18439:31;18489:4;18486:1;18479:15;18513:4;18510:1;18503:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1706600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MAX_SUPPLY()": "240",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2612",
								"getApproved(uint256)": "4799",
								"isApprovedForAll(address,address)": "infinite",
								"mint(address,string)": "infinite",
								"name()": "infinite",
								"owner()": "2420",
								"ownerOf(uint256)": "2667",
								"renounceOwnership()": "28159",
								"royaltiesPercentageInBips()": "2429",
								"royaltiesReceiver()": "2376",
								"royaltyInfo(uint256,uint256)": "4827",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26816",
								"setRoyaltiesReceiver(address)": "28931",
								"supportsInterface(bytes4)": "infinite",
								"symbol()": "infinite",
								"tokenByIndex(uint256)": "6804",
								"tokenOfOwnerByIndex(address,uint256)": "5020",
								"tokenURI(uint256)": "infinite",
								"tokensOfOwner(address)": "infinite",
								"totalSupply()": "2393",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28419"
							},
							"internal": {
								"_baseURI()": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 866,
									"end": 5585,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1389,
									"end": 1622,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1389,
									"end": 1622,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1389,
									"end": 1622,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1389,
									"end": 1622,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1389,
									"end": 1622,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1389,
									"end": 1622,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1389,
									"end": 1622,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1389,
									"end": 1622,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1389,
									"end": 1622,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1389,
									"end": 1622,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1389,
									"end": 1622,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1389,
									"end": 1622,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1389,
									"end": 1622,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1389,
									"end": 1622,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1389,
									"end": 1622,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1389,
									"end": 1622,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1389,
									"end": 1622,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1389,
									"end": 1622,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1389,
									"end": 1622,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1389,
									"end": 1622,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1389,
									"end": 1622,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1389,
									"end": 1622,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1389,
									"end": 1622,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1389,
									"end": 1622,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1389,
									"end": 1622,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1389,
									"end": 1622,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1389,
									"end": 1622,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1389,
									"end": 1622,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1389,
									"end": 1622,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1389,
									"end": 1622,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1389,
									"end": 1622,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1389,
									"end": 1622,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 3,
									"value": "A"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "14D85B5C1B1948139195"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "139195"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1456,
									"end": 1461,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1456,
									"end": 1461,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1506,
									"end": 1531,
									"name": "PUSH",
									"source": 0,
									"value": "E"
								},
								{
									"begin": 1506,
									"end": 1560,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1570,
									"end": 1588,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 1570,
									"end": 1615,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1570,
									"end": 1615,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1570,
									"end": 1615,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1570,
									"end": 1615,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1570,
									"end": 1615,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1570,
									"end": 1615,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1570,
									"end": 1615,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1570,
									"end": 1615,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1570,
									"end": 1615,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1570,
									"end": 1615,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1570,
									"end": 1615,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1570,
									"end": 1615,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1570,
									"end": 1615,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 719,
									"end": 729,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 2,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 365,
									"name": "tag",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 365,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 93,
									"end": 99,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 101,
									"end": 107,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 154,
									"end": 156,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 142,
									"end": 151,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 133,
									"end": 140,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 129,
									"end": 152,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 125,
									"end": 157,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 122,
									"end": 174,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 122,
									"end": 174,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 122,
									"end": 174,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 170,
									"end": 171,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 168,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 160,
									"end": 172,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 122,
									"end": 174,
									"name": "tag",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 122,
									"end": 174,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 196,
									"end": 212,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 196,
									"end": 212,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 241,
									"end": 272,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 241,
									"end": 272,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 231,
									"end": 273,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 231,
									"end": 273,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 221,
									"end": 291,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "34"
								},
								{
									"begin": 221,
									"end": 291,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 287,
									"end": 288,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 284,
									"end": 285,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 277,
									"end": 289,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 221,
									"end": 291,
									"name": "tag",
									"source": 15,
									"value": "34"
								},
								{
									"begin": 221,
									"end": 291,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 355,
									"end": 357,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 340,
									"end": 358,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 340,
									"end": 358,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 340,
									"end": 358,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 340,
									"end": 358,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 334,
									"end": 359,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 310,
									"end": 315,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 310,
									"end": 315,
									"name": "SWAP5",
									"source": 15
								},
								{
									"begin": 334,
									"end": 359,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 334,
									"end": 359,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 365,
									"name": "JUMP",
									"source": 15,
									"value": "[out]"
								},
								{
									"begin": 370,
									"end": 750,
									"name": "tag",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 370,
									"end": 750,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 449,
									"end": 450,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 445,
									"end": 457,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 445,
									"end": 457,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 445,
									"end": 457,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 445,
									"end": 457,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 492,
									"end": 504,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 492,
									"end": 504,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 492,
									"end": 504,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 513,
									"end": 574,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "36"
								},
								{
									"begin": 513,
									"end": 574,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 567,
									"end": 571,
									"name": "PUSH",
									"source": 15,
									"value": "7F"
								},
								{
									"begin": 559,
									"end": 565,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 555,
									"end": 572,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 545,
									"end": 572,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 545,
									"end": 572,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 513,
									"end": 574,
									"name": "tag",
									"source": 15,
									"value": "36"
								},
								{
									"begin": 513,
									"end": 574,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 620,
									"end": 622,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 612,
									"end": 618,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 609,
									"end": 623,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 589,
									"end": 607,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 586,
									"end": 624,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 583,
									"end": 744,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 583,
									"end": 744,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 666,
									"end": 676,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B71"
								},
								{
									"begin": 661,
									"end": 664,
									"name": "PUSH",
									"source": 15,
									"value": "E0"
								},
								{
									"begin": 657,
									"end": 677,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 654,
									"end": 655,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 647,
									"end": 678,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 701,
									"end": 705,
									"name": "PUSH",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 698,
									"end": 699,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 691,
									"end": 706,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 729,
									"end": 733,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 726,
									"end": 727,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 734,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 583,
									"end": 744,
									"name": "tag",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 583,
									"end": 744,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 583,
									"end": 744,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 370,
									"end": 750,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 370,
									"end": 750,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 370,
									"end": 750,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 370,
									"end": 750,
									"name": "JUMP",
									"source": 15,
									"value": "[out]"
								},
								{
									"begin": 370,
									"end": 750,
									"name": "tag",
									"source": 15,
									"value": "31"
								},
								{
									"begin": 370,
									"end": 750,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 866,
									"end": 5585,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209d95ea38c2c77b39cfcd8e925b27c1806334bc119a0d8dabc131bcb9336eaec564736f6c634300080d0033",
									".code": [
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "A3A51BD5"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "D0DEF521"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "A3A51BD5"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "B5143715"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "8462151C"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "32CB6B0C"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "32CB6B0C"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "4F6CCCE7"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "2A55205A"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "2F745C59"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "2175C990"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 5585,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3448,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3218,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3218,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3218,
											"end": 3448,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3448,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3218,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3218,
											"end": 3448,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3218,
											"end": 3448,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3218,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3218,
											"end": 3448,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3218,
											"end": 3448,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3218,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3448,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3218,
											"end": 3448,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3218,
											"end": 3448,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3218,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3448,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3218,
											"end": 3448,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3448,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3448,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3448,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1674,
											"end": 1725,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1674,
											"end": 1725,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1662,
											"end": 1664,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1647,
											"end": 1665,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1528,
											"end": 1731,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1726,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1615,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1712,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1702,
											"end": 1719,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1726,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1615,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1726,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1726,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2319,
											"end": 2344,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2319,
											"end": 2344,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2319,
											"end": 2344,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2307,
											"end": 2309,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2292,
											"end": 2310,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1615,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 2173,
											"end": 2350,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1277,
											"end": 1318,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1277,
											"end": 1318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1277,
											"end": 1318,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 1277,
											"end": 1318,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1318,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4552,
											"end": 4813,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4552,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4552,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4552,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 4552,
											"end": 4813,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4552,
											"end": 4813,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4552,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4552,
											"end": 4813,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4552,
											"end": 4813,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 4552,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4552,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4552,
											"end": 4813,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4552,
											"end": 4813,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4552,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4552,
											"end": 4813,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4552,
											"end": 4813,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4552,
											"end": 4813,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3133,
											"end": 3165,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3133,
											"end": 3165,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 3133,
											"end": 3165,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3115,
											"end": 3166,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3115,
											"end": 3166,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3197,
											"end": 3199,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3182,
											"end": 3200,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3200,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3175,
											"end": 3209,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3175,
											"end": 3209,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3175,
											"end": 3209,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3175,
											"end": 3209,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3088,
											"end": 3106,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4552,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2941,
											"end": 3215,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1291,
											"end": 1544,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1291,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1291,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1291,
											"end": 1544,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1544,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1291,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1291,
											"end": 1544,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1291,
											"end": 1544,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1291,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1291,
											"end": 1544,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1079,
											"end": 1120,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1079,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1079,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1116,
											"end": 1120,
											"name": "PUSH",
											"source": 0,
											"value": "1E61"
										},
										{
											"begin": 1079,
											"end": 1120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1079,
											"end": 1120,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1798,
											"end": 2028,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1798,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1798,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1798,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1798,
											"end": 2028,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1798,
											"end": 2028,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1798,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1798,
											"end": 2028,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1798,
											"end": 2028,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1798,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1798,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1798,
											"end": 2028,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3668,
											"end": 4128,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3668,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3668,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3668,
											"end": 4128,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 4128,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3668,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3668,
											"end": 4128,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3668,
											"end": 4128,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3668,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3668,
											"end": 4128,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3668,
											"end": 4128,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3668,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 4128,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3668,
											"end": 4128,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3668,
											"end": 4128,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 4128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3668,
											"end": 4128,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2230,
											"end": 2327,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2230,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2320,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 2302,
											"end": 2320,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2302,
											"end": 2320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2230,
											"end": 2327,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2752,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2529,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2529,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2529,
											"end": 2752,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2752,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2529,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2529,
											"end": 2752,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2529,
											"end": 2752,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2529,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2529,
											"end": 2752,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2983,
											"end": 3144,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2983,
											"end": 3144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2983,
											"end": 3144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2983,
											"end": 3144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2983,
											"end": 3144,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2983,
											"end": 3144,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2983,
											"end": 3144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2983,
											"end": 3144,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2983,
											"end": 3144,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2983,
											"end": 3144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2983,
											"end": 3144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2983,
											"end": 3144,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5032,
											"end": 5582,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5032,
											"end": 5582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5032,
											"end": 5582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 5032,
											"end": 5582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 5032,
											"end": 5582,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5032,
											"end": 5582,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5032,
											"end": 5582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 5032,
											"end": 5582,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5032,
											"end": 5582,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 5032,
											"end": 5582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5032,
											"end": 5582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 5032,
											"end": 5582,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4600,
											"end": 4604,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3218,
											"end": 3448,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3218,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3352,
											"end": 3393,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3352,
											"end": 3393,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "152A902D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3352,
											"end": 3393,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3352,
											"end": 3393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3352,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3352,
											"end": 3441,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3352,
											"end": 3441,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3429,
											"end": 3440,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 3405,
											"end": 3441,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3405,
											"end": 3441,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3405,
											"end": 3441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3345,
											"end": 3441,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3448,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3218,
											"end": 3448,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2542,
											"end": 2555,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2574,
											"end": 2579,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4083,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4119,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 4111,
											"end": 4118,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 4103,
											"end": 4119,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4103,
											"end": 4119,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 4103,
											"end": 4119,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7220,
											"end": 7222,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7202,
											"end": 7223,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7259,
											"end": 7261,
											"name": "PUSH",
											"source": 15,
											"value": "2C"
										},
										{
											"begin": 7239,
											"end": 7257,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7239,
											"end": 7257,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7239,
											"end": 7257,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7232,
											"end": 7262,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7298,
											"end": 7332,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
										},
										{
											"begin": 7278,
											"end": 7296,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 7278,
											"end": 7296,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7278,
											"end": 7296,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7271,
											"end": 7333,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7349,
											"end": 7367,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 7349,
											"end": 7367,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7349,
											"end": 7367,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7342,
											"end": 7384,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7401,
											"end": 7420,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 7401,
											"end": 7420,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4186,
											"end": 4201,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3618,
											"end": 3631,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 3649,
											"end": 3656,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3634,
											"end": 3657,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3634,
											"end": 3657,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 3634,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3618,
											"end": 3657,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3618,
											"end": 3657,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3681,
											"end": 3686,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3675,
											"end": 3686,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3675,
											"end": 3677,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3675,
											"end": 3686,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3675,
											"end": 3686,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7633,
											"end": 7635,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7615,
											"end": 7636,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7672,
											"end": 7674,
											"name": "PUSH",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 7652,
											"end": 7670,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7652,
											"end": 7670,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7652,
											"end": 7670,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7645,
											"end": 7675,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7711,
											"end": 7745,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 7691,
											"end": 7709,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 7691,
											"end": 7709,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7691,
											"end": 7709,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7684,
											"end": 7746,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7762,
											"end": 7780,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 7762,
											"end": 7780,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7762,
											"end": 7780,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7755,
											"end": 7786,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7803,
											"end": 7822,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 7803,
											"end": 7822,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 7431,
											"end": 7828,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3756,
											"end": 3777,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3756,
											"end": 3777,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3756,
											"end": 3777,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3756,
											"end": 3777,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3756,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 3756,
											"end": 3818,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3781,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 3798,
											"end": 3803,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3781,
											"end": 3818,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 3781,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8035,
											"end": 8037,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8017,
											"end": 8038,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8074,
											"end": 8076,
											"name": "PUSH",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 8054,
											"end": 8072,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 8054,
											"end": 8072,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8054,
											"end": 8072,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8047,
											"end": 8077,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8113,
											"end": 8147,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
										},
										{
											"begin": 8093,
											"end": 8111,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 8093,
											"end": 8111,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8093,
											"end": 8111,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8086,
											"end": 8148,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8184,
											"end": 8210,
											"name": "PUSH",
											"source": 15,
											"value": "6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
										},
										{
											"begin": 8164,
											"end": 8182,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 8164,
											"end": 8182,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8164,
											"end": 8182,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8157,
											"end": 8211,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8228,
											"end": 8247,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 8228,
											"end": 8247,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 7833,
											"end": 8253,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3911,
											"end": 3932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 3920,
											"end": 3922,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3924,
											"end": 3931,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3911,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 3911,
											"end": 3932,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3911,
											"end": 3932,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 3911,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4916,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4949,
											"end": 4956,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4916,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 4916,
											"end": 4957,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4916,
											"end": 4957,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 4916,
											"end": 4957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 5032,
											"end": 5036,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5038,
											"end": 5040,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5042,
											"end": 5049,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 5022,
											"end": 5050,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4552,
											"end": 4813,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4552,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4638,
											"end": 4654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4656,
											"end": 4677,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4753,
											"end": 4756,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4724,
											"end": 4749,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 4724,
											"end": 4749,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4711,
											"end": 4721,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4711,
											"end": 4749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 4711,
											"end": 4749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4711,
											"end": 4749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4711,
											"end": 4749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 4711,
											"end": 4749,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4711,
											"end": 4749,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 4711,
											"end": 4749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4710,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 4710,
											"end": 4756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4710,
											"end": 4756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4710,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 4710,
											"end": 4756,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4710,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 4710,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4775,
											"end": 4793,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 4775,
											"end": 4793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4775,
											"end": 4793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4775,
											"end": 4793,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 4689,
											"end": 4756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4689,
											"end": 4756,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4552,
											"end": 4813,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4552,
											"end": 4813,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1291,
											"end": 1544,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1291,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1423,
											"end": 1446,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1440,
											"end": 1445,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1423,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1423,
											"end": 1446,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1423,
											"end": 1446,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1423,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1415,
											"end": 1420,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1415,
											"end": 1446,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1407,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 1407,
											"end": 1494,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1407,
											"end": 1494,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 1494,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1407,
											"end": 1494,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1407,
											"end": 1494,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9440,
											"end": 9442,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1407,
											"end": 1494,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1407,
											"end": 1494,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1407,
											"end": 1494,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9422,
											"end": 9443,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9479,
											"end": 9481,
											"name": "PUSH",
											"source": 15,
											"value": "2B"
										},
										{
											"begin": 9459,
											"end": 9477,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 9459,
											"end": 9477,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9459,
											"end": 9477,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9452,
											"end": 9482,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9518,
											"end": 9552,
											"name": "PUSH",
											"source": 15,
											"value": "455243373231456E756D657261626C653A206F776E657220696E646578206F75"
										},
										{
											"begin": 9498,
											"end": 9516,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 9498,
											"end": 9516,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9498,
											"end": 9516,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9491,
											"end": 9553,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "74206F6620626F756E6473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9569,
											"end": 9587,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 9569,
											"end": 9587,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9569,
											"end": 9587,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9562,
											"end": 9603,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9620,
											"end": 9639,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 9620,
											"end": 9639,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1407,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 9238,
											"end": 9645,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1407,
											"end": 1494,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 1407,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1511,
											"end": 1530,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1530,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1530,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1530,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1530,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1511,
											"end": 1530,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1530,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1530,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1523,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1511,
											"end": 1530,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1511,
											"end": 1530,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1530,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1530,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1530,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1511,
											"end": 1530,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1530,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1530,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1537,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1537,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1537,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1537,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1537,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1537,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1537,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1544,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 5273,
											"end": 5277,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5279,
											"end": 5281,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5283,
											"end": 5290,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5256,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1798,
											"end": 2028,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1798,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1880,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1908,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 1702,
											"end": 1712,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1702,
											"end": 1719,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1719,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1726,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1938,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 1908,
											"end": 1938,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 1905,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 1938,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 1892,
											"end": 1987,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 1987,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1892,
											"end": 1987,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1892,
											"end": 1987,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 1987,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9852,
											"end": 9854,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1892,
											"end": 1987,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1892,
											"end": 1987,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 1987,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9834,
											"end": 9855,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9891,
											"end": 9893,
											"name": "PUSH",
											"source": 15,
											"value": "2C"
										},
										{
											"begin": 9871,
											"end": 9889,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 9871,
											"end": 9889,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9871,
											"end": 9889,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9864,
											"end": 9894,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9930,
											"end": 9964,
											"name": "PUSH",
											"source": 15,
											"value": "455243373231456E756D657261626C653A20676C6F62616C20696E646578206F"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9903,
											"end": 9965,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7574206F6620626F756E6473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9981,
											"end": 9999,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 9981,
											"end": 9999,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9981,
											"end": 9999,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9974,
											"end": 10016,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10033,
											"end": 10052,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 10033,
											"end": 10052,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1892,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 9650,
											"end": 10058,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1892,
											"end": 1987,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 1892,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2004,
											"end": 2014,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2015,
											"end": 2020,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1997,
											"end": 2021,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1997,
											"end": 2021,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1798,
											"end": 2028,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1798,
											"end": 2028,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1798,
											"end": 2028,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1798,
											"end": 2028,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2263,
											"end": 2270,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2298,
											"end": 2305,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10397,
											"end": 10399,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10379,
											"end": 10400,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10436,
											"end": 10438,
											"name": "PUSH",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 10416,
											"end": 10434,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 10416,
											"end": 10434,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10416,
											"end": 10434,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10409,
											"end": 10439,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10475,
											"end": 10509,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
										},
										{
											"begin": 10455,
											"end": 10473,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 10455,
											"end": 10473,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10455,
											"end": 10473,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10448,
											"end": 10510,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10526,
											"end": 10544,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 10526,
											"end": 10544,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10526,
											"end": 10544,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10519,
											"end": 10558,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10575,
											"end": 10594,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 10575,
											"end": 10594,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 10195,
											"end": 10600,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2001,
											"end": 2008,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10807,
											"end": 10809,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10789,
											"end": 10810,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10846,
											"end": 10848,
											"name": "PUSH",
											"source": 15,
											"value": "2A"
										},
										{
											"begin": 10826,
											"end": 10844,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 10826,
											"end": 10844,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10826,
											"end": 10844,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10819,
											"end": 10849,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10885,
											"end": 10919,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A2062616C616E636520717565727920666F7220746865207A65"
										},
										{
											"begin": 10865,
											"end": 10883,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 10865,
											"end": 10883,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10865,
											"end": 10883,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10858,
											"end": 10920,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10936,
											"end": 10954,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 10936,
											"end": 10954,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10936,
											"end": 10954,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10929,
											"end": 10969,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10986,
											"end": 11005,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 10986,
											"end": 11005,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 10605,
											"end": 11011,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2120,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3668,
											"end": 4128,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3668,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3733,
											"end": 3761,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3774,
											"end": 3792,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3795,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 3805,
											"end": 3811,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3795,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3795,
											"end": 3812,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3795,
											"end": 3812,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 3795,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 3812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 3812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3822,
											"end": 3845,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3862,
											"end": 3872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3822,
											"end": 3873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3822,
											"end": 3873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3888,
											"end": 3898,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3902,
											"end": 3903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3888,
											"end": 3903,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3884,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 3884,
											"end": 4122,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3926,
											"end": 3942,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3926,
											"end": 3942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3926,
											"end": 3942,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3940,
											"end": 3941,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3926,
											"end": 3942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3926,
											"end": 3942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3926,
											"end": 3942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3926,
											"end": 3942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3926,
											"end": 3942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3926,
											"end": 3942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3926,
											"end": 3942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3926,
											"end": 3942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3926,
											"end": 3942,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3668,
											"end": 4128,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3884,
											"end": 4122,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 3884,
											"end": 4122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3978,
											"end": 3987,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 4085,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 3973,
											"end": 4085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3993,
											"end": 4003,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3991,
											"end": 3992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3991,
											"end": 4003,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4085,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 3973,
											"end": 4085,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4040,
											"end": 4070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 4060,
											"end": 4066,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4068,
											"end": 4069,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4040,
											"end": 4059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4040,
											"end": 4070,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4040,
											"end": 4070,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 4040,
											"end": 4070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4028,
											"end": 4034,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4035,
											"end": 4036,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4028,
											"end": 4037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4028,
											"end": 4037,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4028,
											"end": 4037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4028,
											"end": 4037,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4028,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 4028,
											"end": 4037,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4028,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 4028,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 4028,
											"end": 4037,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4028,
											"end": 4037,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 4028,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4028,
											"end": 4037,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4028,
											"end": 4037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4028,
											"end": 4037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4028,
											"end": 4037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4028,
											"end": 4037,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4028,
											"end": 4037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4028,
											"end": 4037,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4028,
											"end": 4037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4028,
											"end": 4037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4028,
											"end": 4070,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4005,
											"end": 4008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4005,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 4005,
											"end": 4008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4005,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 4005,
											"end": 4008,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4005,
											"end": 4008,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 4005,
											"end": 4008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4005,
											"end": 4008,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4005,
											"end": 4008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4005,
											"end": 4008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 3973,
											"end": 4085,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4085,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 3973,
											"end": 4085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4105,
											"end": 4111,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3668,
											"end": 4128,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3668,
											"end": 4128,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2706,
											"end": 2719,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2738,
											"end": 2745,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4378,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4411,
											"end": 4419,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4421,
											"end": 4429,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4378,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 4378,
											"end": 4430,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4378,
											"end": 4430,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 4378,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2529,
											"end": 2752,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2529,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2672,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 2654,
											"end": 2672,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2654,
											"end": 2672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2672,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2672,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2672,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2672,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2622,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 2622,
											"end": 2673,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2622,
											"end": 2673,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2622,
											"end": 2673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2622,
											"end": 2673,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2622,
											"end": 2673,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 2622,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2722,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 2704,
											"end": 2745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2745,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2704,
											"end": 2745,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2704,
											"end": 2745,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2745,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2745,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2745,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2745,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2745,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2745,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2752,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5570,
											"end": 5577,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5555,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 5537,
											"end": 5578,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5537,
											"end": 5578,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 5537,
											"end": 5578,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5642,
											"end": 5681,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 5656,
											"end": 5660,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5664,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5666,
											"end": 5673,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5675,
											"end": 5680,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 5642,
											"end": 5681,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5642,
											"end": 5681,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 5642,
											"end": 5681,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2983,
											"end": 3144,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2983,
											"end": 3144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3082,
											"end": 3095,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3114,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3129,
											"end": 3136,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3114,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 3114,
											"end": 3137,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5032,
											"end": 5582,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 5032,
											"end": 5582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5121,
											"end": 5136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1120,
											"name": "PUSH",
											"source": 0,
											"value": "1E61"
										},
										{
											"begin": 5160,
											"end": 5173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 1702,
											"end": 1712,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1702,
											"end": 1719,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1719,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1726,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5160,
											"end": 5173,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 5160,
											"end": 5173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5160,
											"end": 5187,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5160,
											"end": 5187,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 5152,
											"end": 5209,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5209,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5152,
											"end": 5209,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5152,
											"end": 5209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5209,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11719,
											"end": 11721,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5152,
											"end": 5209,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5152,
											"end": 5209,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5209,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11701,
											"end": 11722,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11758,
											"end": 11760,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 11738,
											"end": 11756,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 11738,
											"end": 11756,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11738,
											"end": 11756,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11731,
											"end": 11761,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105B1B081D1BDAD95B9CC81B5A5B9D1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11777,
											"end": 11795,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 11777,
											"end": 11795,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11777,
											"end": 11795,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11770,
											"end": 11817,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11834,
											"end": 11852,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 11834,
											"end": 11852,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5152,
											"end": 5209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 11517,
											"end": 11858,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5152,
											"end": 5209,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 5152,
											"end": 5209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5248,
											"end": 5249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5233,
											"end": 5237,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5227,
											"end": 5245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5227,
											"end": 5249,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5219,
											"end": 5250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 5219,
											"end": 5250,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5219,
											"end": 5250,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5219,
											"end": 5250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5219,
											"end": 5250,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5219,
											"end": 5250,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 5219,
											"end": 5250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5299,
											"end": 5305,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 5306,
											"end": 5310,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5299,
											"end": 5311,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5299,
											"end": 5311,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5299,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 5299,
											"end": 5311,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5299,
											"end": 5311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5299,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 5299,
											"end": 5311,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5299,
											"end": 5311,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 5299,
											"end": 5311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5299,
											"end": 5311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5299,
											"end": 5311,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5299,
											"end": 5311,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5299,
											"end": 5311,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5299,
											"end": 5311,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5299,
											"end": 5311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5299,
											"end": 5311,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5299,
											"end": 5311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5299,
											"end": 5311,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5299,
											"end": 5311,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5299,
											"end": 5311,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5299,
											"end": 5311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5299,
											"end": 5311,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5299,
											"end": 5311,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5299,
											"end": 5311,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5299,
											"end": 5311,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5299,
											"end": 5311,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5299,
											"end": 5316,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5291,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 5291,
											"end": 5317,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5291,
											"end": 5317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5291,
											"end": 5317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5291,
											"end": 5317,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5291,
											"end": 5317,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 5291,
											"end": 5317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5380,
											"end": 5381,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5365,
											"end": 5371,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 5372,
											"end": 5376,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5381,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5411,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 1702,
											"end": 1712,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1702,
											"end": 1719,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1719,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1726,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5411,
											"end": 5424,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 5411,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5411,
											"end": 5428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 5411,
											"end": 5428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5427,
											"end": 5428,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5411,
											"end": 5428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 5411,
											"end": 5428,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5411,
											"end": 5428,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 5411,
											"end": 5428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5391,
											"end": 5428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5391,
											"end": 5428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5438,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 5448,
											"end": 5457,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5459,
											"end": 5468,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5438,
											"end": 5447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 5438,
											"end": 5469,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5438,
											"end": 5469,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 5438,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5479,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 5492,
											"end": 5501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5503,
											"end": 5507,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5479,
											"end": 5491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 5479,
											"end": 5508,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5479,
											"end": 5508,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 5479,
											"end": 5508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5523,
											"end": 5549,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5523,
											"end": 5549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5523,
											"end": 5549,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12451,
											"end": 12476,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12451,
											"end": 12476,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12451,
											"end": 12476,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12512,
											"end": 12544,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 12512,
											"end": 12544,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 12507,
											"end": 12509,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12492,
											"end": 12510,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12492,
											"end": 12510,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12485,
											"end": 12545,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5523,
											"end": 5549,
											"name": "PUSH",
											"source": 0,
											"value": "F3CEA5493D790AF0133817606F7350A91D7F154EA52EAA79D179D4D231E50102"
										},
										{
											"begin": 5523,
											"end": 5549,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12424,
											"end": 12442,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5523,
											"end": 5549,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5523,
											"end": 5549,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5523,
											"end": 5549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5523,
											"end": 5549,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5523,
											"end": 5549,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5523,
											"end": 5549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5523,
											"end": 5549,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 5566,
											"end": 5575,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5032,
											"end": 5582,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5032,
											"end": 5582,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12758,
											"end": 12760,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12740,
											"end": 12761,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12797,
											"end": 12799,
											"name": "PUSH",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 12777,
											"end": 12795,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 12777,
											"end": 12795,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12777,
											"end": 12795,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12770,
											"end": 12800,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12836,
											"end": 12870,
											"name": "PUSH",
											"source": 15,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 12816,
											"end": 12834,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 12816,
											"end": 12834,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12816,
											"end": 12834,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12809,
											"end": 12871,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12887,
											"end": 12905,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 12887,
											"end": 12905,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12887,
											"end": 12905,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12880,
											"end": 12916,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12933,
											"end": 12952,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 12933,
											"end": 12952,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 12556,
											"end": 12958,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 990,
											"end": 1212,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 990,
											"end": 1212,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1092,
											"end": 1096,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1115,
											"end": 1165,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1165,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "780E9D63"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1115,
											"end": 1165,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1165,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 1115,
											"end": 1205,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1205,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1169,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 1193,
											"end": 1204,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1169,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 1169,
											"end": 1205,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7160,
											"end": 7285,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 7160,
											"end": 7285,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7225,
											"end": 7229,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7255,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7278,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7278,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7278,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7160,
											"end": 7285,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11169,
											"end": 11340,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 11169,
											"end": 11340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11258,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11296,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11296,
											"end": 11310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 11296,
											"end": 11319,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11296,
											"end": 11319,
											"name": "tag",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 11296,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 11169,
											"end": 11340,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11169,
											"end": 11340,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11169,
											"end": 11340,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7443,
											"end": 7787,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 7443,
											"end": 7787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7536,
											"end": 7540,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7560,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 7568,
											"end": 7575,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7560,
											"end": 7567,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 7560,
											"end": 7576,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7560,
											"end": 7576,
											"name": "tag",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 7560,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13165,
											"end": 13167,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13147,
											"end": 13168,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13204,
											"end": 13206,
											"name": "PUSH",
											"source": 15,
											"value": "2C"
										},
										{
											"begin": 13184,
											"end": 13202,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 13184,
											"end": 13202,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13184,
											"end": 13202,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13177,
											"end": 13207,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13243,
											"end": 13277,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
										},
										{
											"begin": 13223,
											"end": 13241,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 13223,
											"end": 13241,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13223,
											"end": 13241,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13216,
											"end": 13278,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13294,
											"end": 13312,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 13294,
											"end": 13312,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13294,
											"end": 13312,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13287,
											"end": 13329,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13346,
											"end": 13365,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 13346,
											"end": 13365,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 12963,
											"end": 13371,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "tag",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7635,
											"end": 7648,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7651,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 7666,
											"end": 7673,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7651,
											"end": 7665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 7651,
											"end": 7674,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7651,
											"end": 7674,
											"name": "tag",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 7651,
											"end": 7674,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7635,
											"end": 7674,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7635,
											"end": 7674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7703,
											"end": 7708,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7692,
											"end": 7708,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7692,
											"end": 7699,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7692,
											"end": 7708,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7692,
											"end": 7708,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7692,
											"end": 7744,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7692,
											"end": 7744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 7692,
											"end": 7744,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4600,
											"end": 4604,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7712,
											"end": 7744,
											"name": "tag",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 7712,
											"end": 7744,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7772,
											"end": 7779,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7748,
											"end": 7779,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7748,
											"end": 7768,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 7760,
											"end": 7767,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7748,
											"end": 7759,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 7748,
											"end": 7768,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7748,
											"end": 7768,
											"name": "tag",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 7748,
											"end": 7768,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7748,
											"end": 7779,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7748,
											"end": 7779,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "tag",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7684,
											"end": 7780,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 7443,
											"end": 7787,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7443,
											"end": 7787,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10453,
											"end": 11058,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 10453,
											"end": 11058,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10607,
											"end": 10611,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10580,
											"end": 10611,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10580,
											"end": 10603,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 10595,
											"end": 10602,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10580,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 10580,
											"end": 10603,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10580,
											"end": 10603,
											"name": "tag",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 10580,
											"end": 10603,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10580,
											"end": 10611,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10580,
											"end": 10611,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13578,
											"end": 13580,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13560,
											"end": 13581,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13617,
											"end": 13619,
											"name": "PUSH",
											"source": 15,
											"value": "25"
										},
										{
											"begin": 13597,
											"end": 13615,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 13597,
											"end": 13615,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13597,
											"end": 13615,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13590,
											"end": 13620,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13656,
											"end": 13690,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A207472616E736665722066726F6D20696E636F727265637420"
										},
										{
											"begin": 13636,
											"end": 13654,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 13636,
											"end": 13654,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13636,
											"end": 13654,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13629,
											"end": 13691,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13707,
											"end": 13725,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 13707,
											"end": 13725,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13707,
											"end": 13725,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13700,
											"end": 13735,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13752,
											"end": 13771,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 13752,
											"end": 13771,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 13376,
											"end": 13777,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "tag",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10671,
											"end": 10687,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10671,
											"end": 10687,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13984,
											"end": 13986,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13966,
											"end": 13987,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14023,
											"end": 14025,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 14003,
											"end": 14021,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 14003,
											"end": 14021,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14003,
											"end": 14021,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13996,
											"end": 14026,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14062,
											"end": 14096,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 14042,
											"end": 14060,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 14042,
											"end": 14060,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14042,
											"end": 14060,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14035,
											"end": 14097,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14113,
											"end": 14131,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 14113,
											"end": 14131,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14113,
											"end": 14131,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14106,
											"end": 14140,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14157,
											"end": 14176,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 14157,
											"end": 14176,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 13782,
											"end": 14182,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "tag",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10739,
											"end": 10778,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 10760,
											"end": 10764,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10766,
											"end": 10768,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10770,
											"end": 10777,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10739,
											"end": 10759,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 10739,
											"end": 10778,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10739,
											"end": 10778,
											"name": "tag",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 10739,
											"end": 10778,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10840,
											"end": 10869,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 10857,
											"end": 10858,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10861,
											"end": 10868,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10840,
											"end": 10848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 10840,
											"end": 10869,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10840,
											"end": 10869,
											"name": "tag",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 10840,
											"end": 10869,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10880,
											"end": 10889,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 10899,
											"end": 10900,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10899,
											"end": 10900,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10899,
											"end": 10900,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10899,
											"end": 10900,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "tag",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10910,
											"end": 10919,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 10927,
											"end": 10928,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10927,
											"end": 10928,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10927,
											"end": 10928,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10927,
											"end": 10928,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "tag",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 10945,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11625,
											"end": 11633,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11616,
											"end": 11633,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11616,
											"end": 11621,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11616,
											"end": 11633,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11616,
											"end": 11633,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14519,
											"end": 14521,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14501,
											"end": 14522,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14558,
											"end": 14560,
											"name": "PUSH",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 14538,
											"end": 14556,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 14538,
											"end": 14556,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14538,
											"end": 14556,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14531,
											"end": 14561,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14597,
											"end": 14624,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 14577,
											"end": 14595,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 14577,
											"end": 14595,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14577,
											"end": 14595,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14570,
											"end": 14625,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14642,
											"end": 14660,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 14642,
											"end": 14660,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 14317,
											"end": 14666,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "tag",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11691,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "PUSH",
											"source": 3,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6550,
											"end": 6857,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 6550,
											"end": 6857,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 6711,
											"end": 6715,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6717,
											"end": 6719,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6721,
											"end": 6728,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6701,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "tag",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6747,
											"end": 6795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 6770,
											"end": 6774,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6776,
											"end": 6778,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6787,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6789,
											"end": 6794,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6747,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 6747,
											"end": 6795,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6747,
											"end": 6795,
											"name": "tag",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 6747,
											"end": 6795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 467,
											"end": 1130,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 467,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 540,
											"end": 553,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 573,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 581,
											"end": 588,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 573,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 573,
											"end": 589,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 573,
											"end": 589,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 573,
											"end": 589,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 565,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 565,
											"end": 643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 565,
											"end": 643,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 565,
											"end": 643,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 565,
											"end": 643,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 565,
											"end": 643,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15292,
											"end": 15294,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 565,
											"end": 643,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 565,
											"end": 643,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 565,
											"end": 643,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15274,
											"end": 15295,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15331,
											"end": 15333,
											"name": "PUSH",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 15311,
											"end": 15329,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 15311,
											"end": 15329,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15311,
											"end": 15329,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15304,
											"end": 15334,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15370,
											"end": 15404,
											"name": "PUSH",
											"source": 15,
											"value": "45524337323155524953746F726167653A2055524920717565727920666F7220"
										},
										{
											"begin": 15350,
											"end": 15368,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 15350,
											"end": 15368,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15350,
											"end": 15368,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15343,
											"end": 15405,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3737B732BC34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15421,
											"end": 15439,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 15421,
											"end": 15439,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15421,
											"end": 15439,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15414,
											"end": 15461,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15478,
											"end": 15497,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 15478,
											"end": 15497,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 565,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 15090,
											"end": 15503,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 565,
											"end": 643,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 565,
											"end": 643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 654,
											"end": 677,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 699,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 680,
											"end": 699,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 680,
											"end": 699,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 680,
											"end": 690,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 680,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 699,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 680,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 699,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 680,
											"end": 699,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 709,
											"end": 727,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 730,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 730,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 730,
											"end": 740,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 730,
											"end": 740,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 730,
											"end": 740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 740,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 709,
											"end": 740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 819,
											"end": 823,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 813,
											"end": 831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 835,
											"end": 836,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 813,
											"end": 836,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 809,
											"end": 879,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 809,
											"end": 879,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 859,
											"end": 868,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 467,
											"end": 1130,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 467,
											"end": 1130,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 809,
											"end": 879,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 809,
											"end": 879,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 981,
											"end": 1004,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 981,
											"end": 1004,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 981,
											"end": 1008,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 977,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 977,
											"end": 1083,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1055,
											"end": 1059,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1070,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1024,
											"end": 1072,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1024,
											"end": 1072,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1024,
											"end": 1072,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1024,
											"end": 1072,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 467,
											"end": 1130,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 467,
											"end": 1130,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 467,
											"end": 1130,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 467,
											"end": 1130,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 977,
											"end": 1083,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 977,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1100,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 1115,
											"end": 1122,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 1100,
											"end": 1123,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8117,
											"end": 8225,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 8117,
											"end": 8225,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 8202,
											"end": 8204,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8206,
											"end": 8213,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8192,
											"end": 8201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1277,
											"end": 1491,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 1277,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1376,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 1384,
											"end": 1391,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1376,
											"end": 1383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 1376,
											"end": 1392,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1376,
											"end": 1392,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 1376,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16185,
											"end": 16187,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16167,
											"end": 16188,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16224,
											"end": 16226,
											"name": "PUSH",
											"source": 15,
											"value": "2E"
										},
										{
											"begin": 16204,
											"end": 16222,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 16204,
											"end": 16222,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16204,
											"end": 16222,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16197,
											"end": 16227,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16263,
											"end": 16297,
											"name": "PUSH",
											"source": 15,
											"value": "45524337323155524953746F726167653A2055524920736574206F66206E6F6E"
										},
										{
											"begin": 16243,
											"end": 16261,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 16243,
											"end": 16261,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16243,
											"end": 16261,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16236,
											"end": 16298,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32BC34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16314,
											"end": 16332,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 16314,
											"end": 16332,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16314,
											"end": 16332,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16307,
											"end": 16351,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16368,
											"end": 16387,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 16368,
											"end": 16387,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 15983,
											"end": 16393,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1453,
											"end": 1463,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1453,
											"end": 1484,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1453,
											"end": 1484,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1453,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 1453,
											"end": 1484,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1453,
											"end": 1484,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1453,
											"end": 1484,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1453,
											"end": 1484,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1453,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 1453,
											"end": 1484,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1672,
											"end": 1676,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "tag",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1991,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 1810,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1967,
											"end": 1971,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1973,
											"end": 1975,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 1983,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 1940,
											"end": 1984,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "tag",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12485,
											"end": 12489,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12505,
											"end": 12518,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12505,
											"end": 12518,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12501,
											"end": 13107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 12501,
											"end": 13107,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12576,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12576,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12576,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12576,
											"name": "PUSH",
											"source": 3,
											"value": "150B7A02"
										},
										{
											"begin": 12540,
											"end": 12576,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12591,
											"end": 12595,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 12591,
											"end": 12595,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12606,
											"end": 12611,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 12606,
											"end": 12611,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "391"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "tag",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "394"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "tag",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "tag",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "399"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "tag",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "tag",
											"source": 3,
											"value": "399"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12779,
											"end": 12785,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12779,
											"end": 12792,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12796,
											"end": 12797,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12779,
											"end": 12797,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12775,
											"end": 13041,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 12775,
											"end": 13041,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12775,
											"end": 13041,
											"name": "tag",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 12775,
											"end": 13041,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12993,
											"end": 12999,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12987,
											"end": 13000,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12978,
											"end": 12984,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12974,
											"end": 12976,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12970,
											"end": 12985,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12963,
											"end": 13001,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "tag",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12662,
											"end": 12713,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12662,
											"end": 12713,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 12662,
											"end": 12713,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12655,
											"end": 12713,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 12655,
											"end": 12713,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12501,
											"end": 13107,
											"name": "tag",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 12501,
											"end": 13107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13092,
											"end": 13096,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1677,
											"end": 1804,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 1677,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1729,
											"end": 1742,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1754,
											"end": 1797,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1754,
											"end": 1797,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1797,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1754,
											"end": 1797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1797,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1754,
											"end": 1797,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1797,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1754,
											"end": 1797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1797,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1797,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1754,
											"end": 1797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1797,
											"name": "PUSH data",
											"source": 0,
											"value": "9962ECE65B578AF633A4CD71E7E539261EBE22823AA4CA702EC34245D8300D7D"
										},
										{
											"begin": 1754,
											"end": 1797,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1754,
											"end": 1797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1797,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1677,
											"end": 1804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1677,
											"end": 1804,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "tag",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2891,
											"end": 2904,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2924,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "408"
										},
										{
											"begin": 2932,
											"end": 2939,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2924,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 2924,
											"end": 2940,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2924,
											"end": 2940,
											"name": "tag",
											"source": 3,
											"value": "408"
										},
										{
											"begin": 2924,
											"end": 2940,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "409"
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17348,
											"end": 17350,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17330,
											"end": 17351,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17387,
											"end": 17389,
											"name": "PUSH",
											"source": 15,
											"value": "2F"
										},
										{
											"begin": 17367,
											"end": 17385,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 17367,
											"end": 17385,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17367,
											"end": 17385,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17360,
											"end": 17390,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17426,
											"end": 17460,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732314D657461646174613A2055524920717565727920666F72206E6F"
										},
										{
											"begin": 17406,
											"end": 17424,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 17406,
											"end": 17424,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17406,
											"end": 17424,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17399,
											"end": 17461,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3732BC34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17477,
											"end": 17495,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 17477,
											"end": 17495,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17477,
											"end": 17495,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17470,
											"end": 17515,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17532,
											"end": 17551,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 17532,
											"end": 17551,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 17146,
											"end": 17557,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "tag",
											"source": 3,
											"value": "409"
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3003,
											"end": 3024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3027,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "412"
										},
										{
											"begin": 3027,
											"end": 3035,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 3027,
											"end": 3037,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3027,
											"end": 3037,
											"name": "tag",
											"source": 3,
											"value": "412"
										},
										{
											"begin": 3027,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3003,
											"end": 3037,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3003,
											"end": 3037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3078,
											"end": 3079,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3060,
											"end": 3067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3075,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3079,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "413"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "414"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "tag",
											"source": 3,
											"value": "413"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3106,
											"end": 3113,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "415"
										},
										{
											"begin": 3115,
											"end": 3122,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "416"
										},
										{
											"begin": 3115,
											"end": 3133,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3115,
											"end": 3133,
											"name": "tag",
											"source": 3,
											"value": "415"
										},
										{
											"begin": 3115,
											"end": 3133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "417"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "tag",
											"source": 3,
											"value": "417"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "tag",
											"source": 3,
											"value": "414"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3047,
											"end": 3140,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8446,
											"end": 8757,
											"name": "tag",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 8446,
											"end": 8757,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "419"
										},
										{
											"begin": 8577,
											"end": 8579,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8581,
											"end": 8588,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8571,
											"end": 8576,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "420"
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "tag",
											"source": 3,
											"value": "419"
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8620,
											"end": 8674,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "421"
										},
										{
											"begin": 8651,
											"end": 8652,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8655,
											"end": 8657,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8659,
											"end": 8666,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8668,
											"end": 8673,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8620,
											"end": 8642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 8620,
											"end": 8674,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8620,
											"end": 8674,
											"name": "tag",
											"source": 3,
											"value": "421"
										},
										{
											"begin": 8620,
											"end": 8674,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8599,
											"end": 8750,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 8599,
											"end": 8750,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8599,
											"end": 8750,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8599,
											"end": 8750,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8599,
											"end": 8750,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8599,
											"end": 8750,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8599,
											"end": 8750,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8599,
											"end": 8750,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8599,
											"end": 8750,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 8599,
											"end": 8750,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8599,
											"end": 8750,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 8599,
											"end": 8750,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2624,
											"end": 3196,
											"name": "tag",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 2624,
											"end": 3196,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2823,
											"end": 2841,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2841,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2819,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "428"
										},
										{
											"begin": 2819,
											"end": 3002,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2857,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 2889,
											"end": 2896,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4015,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4005,
											"end": 4022,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4022,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 3993,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4022,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4022,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4032,
											"end": 4056,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4032,
											"end": 4056,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4032,
											"end": 4056,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4032,
											"end": 4056,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4032,
											"end": 4056,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4032,
											"end": 4056,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4032,
											"end": 4056,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4032,
											"end": 4056,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4032,
											"end": 4056,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4032,
											"end": 4056,
											"name": "PUSH",
											"source": 6,
											"value": "6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF"
										},
										{
											"begin": 4032,
											"end": 4056,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4032,
											"end": 4056,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4063,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2857,
											"end": 2897,
											"name": "tag",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 2857,
											"end": 2897,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2819,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "433"
										},
										{
											"begin": 2819,
											"end": 3002,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2819,
											"end": 3002,
											"name": "tag",
											"source": 6,
											"value": "428"
										},
										{
											"begin": 2819,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2926,
											"end": 2928,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2918,
											"end": 2928,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2918,
											"end": 2922,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2918,
											"end": 2928,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2918,
											"end": 2928,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2914,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "433"
										},
										{
											"begin": 2914,
											"end": 3002,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2944,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "433"
										},
										{
											"begin": 2977,
											"end": 2981,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2983,
											"end": 2990,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2944,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "434"
										},
										{
											"begin": 2944,
											"end": 2991,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2944,
											"end": 2991,
											"name": "tag",
											"source": 6,
											"value": "433"
										},
										{
											"begin": 2944,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3015,
											"end": 3031,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3015,
											"end": 3031,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3011,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "435"
										},
										{
											"begin": 3011,
											"end": 3190,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3047,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 3084,
											"end": 3091,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3047,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "437"
										},
										{
											"begin": 3047,
											"end": 3092,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3011,
											"end": 3190,
											"name": "tag",
											"source": 6,
											"value": "435"
										},
										{
											"begin": 3011,
											"end": 3190,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3123,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3113,
											"end": 3123,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3115,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3113,
											"end": 3123,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3123,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3109,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 3109,
											"end": 3190,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3139,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 3167,
											"end": 3169,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3171,
											"end": 3178,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3139,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "441"
										},
										{
											"begin": 3139,
											"end": 3179,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "tag",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 384,
											"end": 397,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 601,
											"end": 606,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 610,
											"end": 611,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 611,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 597,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 627,
											"end": 637,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 627,
											"end": 637,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 627,
											"end": 637,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 627,
											"end": 637,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 627,
											"end": 637,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "tag",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 657,
											"end": 669,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "tag",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 718,
											"end": 727,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 718,
											"end": 727,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 711,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 743,
											"end": 751,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 743,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 743,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "tag",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 743,
											"end": 751,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 765,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 773,
											"end": 775,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 765,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "tag",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 765,
											"end": 775,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 765,
											"end": 775,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 711,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 711,
											"end": 786,
											"name": "tag",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 795,
											"end": 814,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "tag",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 817,
											"end": 834,
											"name": "tag",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 795,
											"end": 834,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 795,
											"end": 834,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 844,
											"end": 994,
											"name": "tag",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 851,
											"end": 861,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 851,
											"end": 861,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 844,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 877,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 877,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "tag",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 877,
											"end": 888,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 945,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 953,
											"end": 955,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 945,
											"end": 950,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 945,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "tag",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 932,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 932,
											"end": 934,
											"name": "PUSH",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "tag",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 919,
											"end": 958,
											"name": "PUSH",
											"source": 12,
											"value": "F8"
										},
										{
											"begin": 919,
											"end": 958,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 902,
											"end": 908,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 909,
											"end": 915,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 902,
											"end": 916,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 902,
											"end": 916,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "tag",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 902,
											"end": 958,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 902,
											"end": 958,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 902,
											"end": 958,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 902,
											"end": 958,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 958,
											"name": "BYTE",
											"source": 12
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 902,
											"end": 958,
											"name": "MSTORE8",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 972,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 981,
											"end": 983,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 972,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "tag",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 972,
											"end": 983,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 972,
											"end": 983,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 844,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9079,
											"end": 9506,
											"name": "tag",
											"source": 3,
											"value": "420"
										},
										{
											"begin": 9079,
											"end": 9506,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9158,
											"end": 9174,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9158,
											"end": 9174,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9150,
											"end": 9211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "462"
										},
										{
											"begin": 9150,
											"end": 9211,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9150,
											"end": 9211,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9150,
											"end": 9211,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9150,
											"end": 9211,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9150,
											"end": 9211,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17881,
											"end": 17883,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9150,
											"end": 9211,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9150,
											"end": 9211,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9150,
											"end": 9211,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17863,
											"end": 17884,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 17863,
											"end": 17884,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17863,
											"end": 17884,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17900,
											"end": 17918,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 17900,
											"end": 17918,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17900,
											"end": 17918,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17893,
											"end": 17923,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17959,
											"end": 17993,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
										},
										{
											"begin": 17939,
											"end": 17957,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 17939,
											"end": 17957,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17939,
											"end": 17957,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17932,
											"end": 17994,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18011,
											"end": 18029,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 18011,
											"end": 18029,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9150,
											"end": 9211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 17679,
											"end": 18035,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9150,
											"end": 9211,
											"name": "tag",
											"source": 3,
											"value": "462"
										},
										{
											"begin": 9150,
											"end": 9211,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9230,
											"end": 9246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "465"
										},
										{
											"begin": 9238,
											"end": 9245,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9230,
											"end": 9237,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 9230,
											"end": 9246,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9230,
											"end": 9246,
											"name": "tag",
											"source": 3,
											"value": "465"
										},
										{
											"begin": 9230,
											"end": 9246,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9229,
											"end": 9246,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9221,
											"end": 9279,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "466"
										},
										{
											"begin": 9221,
											"end": 9279,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9221,
											"end": 9279,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9221,
											"end": 9279,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9221,
											"end": 9279,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9221,
											"end": 9279,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 18242,
											"end": 18244,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9221,
											"end": 9279,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9221,
											"end": 9279,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9221,
											"end": 9279,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 18224,
											"end": 18245,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18281,
											"end": 18283,
											"name": "PUSH",
											"source": 15,
											"value": "1C"
										},
										{
											"begin": 18261,
											"end": 18279,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 18261,
											"end": 18279,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18261,
											"end": 18279,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18254,
											"end": 18284,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18320,
											"end": 18350,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
										},
										{
											"begin": 18300,
											"end": 18318,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 18300,
											"end": 18318,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18300,
											"end": 18318,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18293,
											"end": 18351,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18368,
											"end": 18386,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 18368,
											"end": 18386,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9221,
											"end": 9279,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 18040,
											"end": 18392,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9221,
											"end": 9279,
											"name": "tag",
											"source": 3,
											"value": "466"
										},
										{
											"begin": 9221,
											"end": 9279,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9290,
											"end": 9335,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "469"
										},
										{
											"begin": 9319,
											"end": 9320,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9323,
											"end": 9325,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9327,
											"end": 9334,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9290,
											"end": 9310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 9290,
											"end": 9335,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9290,
											"end": 9335,
											"name": "tag",
											"source": 3,
											"value": "469"
										},
										{
											"begin": 9290,
											"end": 9335,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9346,
											"end": 9359,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9346,
											"end": 9359,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9346,
											"end": 9359,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9346,
											"end": 9359,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9346,
											"end": 9359,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9346,
											"end": 9359,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9346,
											"end": 9355,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9346,
											"end": 9359,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9346,
											"end": 9359,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9346,
											"end": 9359,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9346,
											"end": 9359,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9346,
											"end": 9359,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9363,
											"end": 9364,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9363,
											"end": 9364,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9346,
											"end": 9359,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "470"
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9363,
											"end": 9364,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9363,
											"end": 9364,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "tag",
											"source": 3,
											"value": "470"
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9374,
											"end": 9381,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9374,
											"end": 9395,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9374,
											"end": 9395,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9374,
											"end": 9395,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9374,
											"end": 9395,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9374,
											"end": 9395,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9374,
											"end": 9395,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9374,
											"end": 9395,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9374,
											"end": 9395,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 9374,
											"end": 9395,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9374,
											"end": 9395,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9374,
											"end": 9395,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9411,
											"end": 9444,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9411,
											"end": 9444,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9411,
											"end": 9444,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9411,
											"end": 9444,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9411,
											"end": 9444,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4680,
											"end": 5650,
											"name": "tag",
											"source": 6,
											"value": "434"
										},
										{
											"begin": 4680,
											"end": 5650,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4942,
											"end": 4964,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4992,
											"end": 4993,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4967,
											"end": 4989,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "476"
										},
										{
											"begin": 4984,
											"end": 4988,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 4967,
											"end": 4989,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4967,
											"end": 4989,
											"name": "tag",
											"source": 6,
											"value": "476"
										},
										{
											"begin": 4967,
											"end": 4989,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 4993,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "477"
										},
										{
											"begin": 4967,
											"end": 4993,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 4993,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 4993,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 4967,
											"end": 4993,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4967,
											"end": 4993,
											"name": "tag",
											"source": 6,
											"value": "477"
										},
										{
											"begin": 4967,
											"end": 4993,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5003,
											"end": 5021,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5024,
											"end": 5050,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5024,
											"end": 5050,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5024,
											"end": 5050,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5024,
											"end": 5041,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5024,
											"end": 5050,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5024,
											"end": 5050,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5024,
											"end": 5050,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5024,
											"end": 5050,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5024,
											"end": 5050,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5024,
											"end": 5050,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4942,
											"end": 4993,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4942,
											"end": 4993,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5154,
											"end": 5182,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5154,
											"end": 5182,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5154,
											"end": 5182,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "478"
										},
										{
											"begin": 5150,
											"end": 5473,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5220,
											"end": 5238,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5238,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5198,
											"end": 5217,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5220,
											"end": 5238,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5238,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5238,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5232,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5220,
											"end": 5238,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5220,
											"end": 5238,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5238,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5238,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5238,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5220,
											"end": 5238,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5238,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5238,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5254,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5254,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5254,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5254,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5254,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5254,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5254,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5254,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5254,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5269,
											"end": 5299,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5269,
											"end": 5299,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5269,
											"end": 5299,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5269,
											"end": 5299,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5269,
											"end": 5299,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5269,
											"end": 5299,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5269,
											"end": 5313,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5269,
											"end": 5313,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5269,
											"end": 5313,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5385,
											"end": 5415,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5385,
											"end": 5415,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5385,
											"end": 5402,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5385,
											"end": 5415,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5385,
											"end": 5415,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5385,
											"end": 5415,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5385,
											"end": 5415,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5385,
											"end": 5415,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5385,
											"end": 5428,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5385,
											"end": 5428,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5385,
											"end": 5428,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5473,
											"name": "tag",
											"source": 6,
											"value": "478"
										},
										{
											"begin": 5150,
											"end": 5473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5566,
											"end": 5592,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5566,
											"end": 5592,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5592,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5592,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5583,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5566,
											"end": 5592,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5566,
											"end": 5592,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5592,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5592,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5592,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5566,
											"end": 5592,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5592,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5592,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5559,
											"end": 5592,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5559,
											"end": 5592,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5559,
											"end": 5592,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5609,
											"end": 5627,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5627,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5627,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5627,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5627,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5621,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5609,
											"end": 5627,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5627,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5627,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5627,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5627,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5643,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5643,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5643,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5643,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5643,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5643,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5643,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5602,
											"end": 5643,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 5650,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5938,
											"end": 6999,
											"name": "tag",
											"source": 6,
											"value": "437"
										},
										{
											"begin": 5938,
											"end": 6999,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6212,
											"end": 6222,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 6212,
											"end": 6229,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6187,
											"end": 6209,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6187,
											"end": 6209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6212,
											"end": 6233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "480"
										},
										{
											"begin": 6212,
											"end": 6233,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6232,
											"end": 6233,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6232,
											"end": 6233,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6212,
											"end": 6233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 6212,
											"end": 6233,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6212,
											"end": 6233,
											"name": "tag",
											"source": 6,
											"value": "480"
										},
										{
											"begin": 6212,
											"end": 6233,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6243,
											"end": 6261,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6264,
											"end": 6288,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6264,
											"end": 6288,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6264,
											"end": 6288,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6264,
											"end": 6279,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 6264,
											"end": 6288,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6264,
											"end": 6288,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6264,
											"end": 6288,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6264,
											"end": 6288,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6264,
											"end": 6288,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6264,
											"end": 6288,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6632,
											"end": 6642,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6187,
											"end": 6233,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6187,
											"end": 6233,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6264,
											"end": 6288,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6264,
											"end": 6288,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6187,
											"end": 6233,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6187,
											"end": 6233,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "482"
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "482"
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "tag",
											"source": 6,
											"value": "482"
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6658,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6658,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6694,
											"end": 6705,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6679,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 6680,
											"end": 6690,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "485"
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "485"
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "tag",
											"source": 6,
											"value": "485"
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6705,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6705,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6705,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6773,
											"end": 6801,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6773,
											"end": 6801,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6773,
											"end": 6801,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6773,
											"end": 6788,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 6773,
											"end": 6801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6773,
											"end": 6801,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6773,
											"end": 6801,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6773,
											"end": 6801,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6773,
											"end": 6801,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6773,
											"end": 6801,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6773,
											"end": 6801,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6773,
											"end": 6814,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6773,
											"end": 6814,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6773,
											"end": 6814,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6942,
											"end": 6966,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6942,
											"end": 6966,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6942,
											"end": 6966,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6942,
											"end": 6966,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6942,
											"end": 6966,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6935,
											"end": 6966,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 6986,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "488"
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "488"
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "489"
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "tag",
											"source": 6,
											"value": "488"
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6009,
											"end": 6999,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6009,
											"end": 6999,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6009,
											"end": 6999,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 6999,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 6999,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3490,
											"end": 3707,
											"name": "tag",
											"source": 6,
											"value": "441"
										},
										{
											"begin": 3490,
											"end": 3707,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3574,
											"end": 3588,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3591,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "492"
										},
										{
											"begin": 3608,
											"end": 3610,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3591,
											"end": 3607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 3591,
											"end": 3611,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3591,
											"end": 3611,
											"name": "tag",
											"source": 6,
											"value": "492"
										},
										{
											"begin": 3591,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3621,
											"end": 3637,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3637,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3637,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3637,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3621,
											"end": 3637,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3637,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3637,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3633,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3621,
											"end": 3637,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3621,
											"end": 3637,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3637,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3637,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3637,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3621,
											"end": 3637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3637,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3637,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3645,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3645,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3645,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3645,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3645,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3645,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3645,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3645,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3655,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3655,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3655,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3691,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3691,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3691,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3682,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3665,
											"end": 3691,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3691,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3691,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3691,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3691,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3691,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3700,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3700,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3700,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3700,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3490,
											"end": 3707,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "375"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "493"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "144"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "493"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "495"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "498"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "495"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "496"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "498"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "496"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "498"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "497"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "498"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "497"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "498"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "499"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "500"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "499"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "500"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "501"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "499"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "501"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 15,
											"value": "503"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "300"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "514"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 15,
											"value": "514"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "503"
										},
										{
											"begin": 335,
											"end": 365,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 592,
											"end": 850,
											"name": "tag",
											"source": 15,
											"value": "504"
										},
										{
											"begin": 592,
											"end": 850,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 664,
											"end": 665,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "tag",
											"source": 15,
											"value": "518"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 688,
											"end": 694,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 685,
											"end": 686,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 682,
											"end": 695,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 674,
											"end": 787,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 674,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "520"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 764,
											"end": 775,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 764,
											"end": 775,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 764,
											"end": 775,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 758,
											"end": 776,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 745,
											"end": 756,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 745,
											"end": 756,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 745,
											"end": 756,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 738,
											"end": 777,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 710,
											"end": 712,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 703,
											"end": 713,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 674,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "518"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 674,
											"end": 787,
											"name": "tag",
											"source": 15,
											"value": "520"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 805,
											"end": 811,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 802,
											"end": 803,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 799,
											"end": 812,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 796,
											"end": 844,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 796,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "261"
										},
										{
											"begin": 796,
											"end": 844,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 840,
											"end": 841,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 838,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 822,
											"end": 838,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 815,
											"end": 842,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 592,
											"end": 850,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "tag",
											"source": 15,
											"value": "505"
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 897,
											"end": 900,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 935,
											"end": 940,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 929,
											"end": 941,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 962,
											"end": 968,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 957,
											"end": 960,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 950,
											"end": 969,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "523"
										},
										{
											"begin": 1034,
											"end": 1040,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1027,
											"end": 1031,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1022,
											"end": 1025,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1018,
											"end": 1032,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1011,
											"end": 1015,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1004,
											"end": 1009,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1016,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "504"
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "tag",
											"source": 15,
											"value": "523"
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1095,
											"end": 1097,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1074,
											"end": 1089,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1070,
											"end": 1099,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1102,
											"end": 1106,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1057,
											"end": 1107,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1057,
											"end": 1107,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1118,
											"end": 1338,
											"name": "tag",
											"source": 15,
											"value": "43"
										},
										{
											"begin": 1118,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1267,
											"end": 1269,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1256,
											"end": 1265,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1249,
											"end": 1270,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1230,
											"end": 1234,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1287,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 1328,
											"end": 1330,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1317,
											"end": 1326,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1313,
											"end": 1331,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1305,
											"end": 1311,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1287,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "505"
										},
										{
											"begin": 1287,
											"end": 1332,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "tag",
											"source": 15,
											"value": "46"
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1402,
											"end": 1408,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1457,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1443,
											"end": 1452,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1434,
											"end": 1441,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1430,
											"end": 1453,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1458,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "527"
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1471,
											"end": 1472,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1469,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1461,
											"end": 1473,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "tag",
											"source": 15,
											"value": "527"
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1494,
											"end": 1517,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1494,
											"end": 1517,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "tag",
											"source": 15,
											"value": "506"
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1804,
											"end": 1824,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1804,
											"end": 1824,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1853,
											"end": 1884,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1853,
											"end": 1884,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1843,
											"end": 1885,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1843,
											"end": 1885,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "530"
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1896,
											"end": 1897,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1889,
											"end": 1901,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "tag",
											"source": 15,
											"value": "530"
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1914,
											"end": 2168,
											"name": "tag",
											"source": 15,
											"value": "52"
										},
										{
											"begin": 1914,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1982,
											"end": 1988,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 1996,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2043,
											"end": 2045,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2031,
											"end": 2040,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2022,
											"end": 2029,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2018,
											"end": 2041,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2014,
											"end": 2046,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "532"
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2059,
											"end": 2060,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2057,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "tag",
											"source": 15,
											"value": "532"
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "533"
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "506"
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "tag",
											"source": 15,
											"value": "533"
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2072,
											"end": 2111,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 2158,
											"end": 2160,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2130,
											"end": 2162,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2130,
											"end": 2162,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1914,
											"end": 2168,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "tag",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2432,
											"end": 2438,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2446,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2448,
											"end": 2454,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2501,
											"end": 2503,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 2489,
											"end": 2498,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2480,
											"end": 2487,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2476,
											"end": 2499,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2472,
											"end": 2504,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "536"
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2517,
											"end": 2518,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2514,
											"end": 2515,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "tag",
											"source": 15,
											"value": "536"
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "537"
										},
										{
											"begin": 2559,
											"end": 2568,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "506"
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "tag",
											"source": 15,
											"value": "537"
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2530,
											"end": 2569,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2530,
											"end": 2569,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2588,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "538"
										},
										{
											"begin": 2622,
											"end": 2624,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2611,
											"end": 2620,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2607,
											"end": 2625,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2588,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "506"
										},
										{
											"begin": 2588,
											"end": 2626,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2588,
											"end": 2626,
											"name": "tag",
											"source": 15,
											"value": "538"
										},
										{
											"begin": 2588,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2578,
											"end": 2626,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2578,
											"end": 2626,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2673,
											"end": 2675,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2662,
											"end": 2671,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2658,
											"end": 2676,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2645,
											"end": 2677,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2635,
											"end": 2677,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2635,
											"end": 2677,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2688,
											"end": 2936,
											"name": "tag",
											"source": 15,
											"value": "67"
										},
										{
											"begin": 2688,
											"end": 2936,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2756,
											"end": 2762,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2764,
											"end": 2770,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2817,
											"end": 2819,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2805,
											"end": 2814,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2796,
											"end": 2803,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2792,
											"end": 2815,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2788,
											"end": 2820,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2785,
											"end": 2837,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2785,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "540"
										},
										{
											"begin": 2785,
											"end": 2837,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2833,
											"end": 2834,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2831,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2823,
											"end": 2835,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2785,
											"end": 2837,
											"name": "tag",
											"source": 15,
											"value": "540"
										},
										{
											"begin": 2785,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2856,
											"end": 2879,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2856,
											"end": 2879,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2856,
											"end": 2879,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2926,
											"end": 2928,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2911,
											"end": 2929,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2911,
											"end": 2929,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2911,
											"end": 2929,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2898,
											"end": 2930,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2898,
											"end": 2930,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2688,
											"end": 2936,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 3220,
											"end": 3406,
											"name": "tag",
											"source": 15,
											"value": "91"
										},
										{
											"begin": 3220,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3279,
											"end": 3285,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3332,
											"end": 3334,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3320,
											"end": 3329,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3311,
											"end": 3318,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3307,
											"end": 3330,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3303,
											"end": 3335,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3300,
											"end": 3352,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3300,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "543"
										},
										{
											"begin": 3300,
											"end": 3352,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3348,
											"end": 3349,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3345,
											"end": 3346,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3338,
											"end": 3350,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3300,
											"end": 3352,
											"name": "tag",
											"source": 15,
											"value": "543"
										},
										{
											"begin": 3300,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3371,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3371,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "506"
										},
										{
											"begin": 3371,
											"end": 3400,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3411,
											"end": 4043,
											"name": "tag",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 3411,
											"end": 4043,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3582,
											"end": 3584,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3634,
											"end": 3655,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3634,
											"end": 3655,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3634,
											"end": 3655,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3704,
											"end": 3717,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3704,
											"end": 3717,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3607,
											"end": 3625,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3607,
											"end": 3625,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3607,
											"end": 3625,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3726,
											"end": 3748,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3726,
											"end": 3748,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3726,
											"end": 3748,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3553,
											"end": 3557,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3557,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3582,
											"end": 3584,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3805,
											"end": 3820,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3805,
											"end": 3820,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3805,
											"end": 3820,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3805,
											"end": 3820,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3779,
											"end": 3781,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3764,
											"end": 3782,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3764,
											"end": 3782,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3764,
											"end": 3782,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3553,
											"end": 3557,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3848,
											"end": 4017,
											"name": "tag",
											"source": 15,
											"value": "546"
										},
										{
											"begin": 3848,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3862,
											"end": 3868,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3859,
											"end": 3860,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3856,
											"end": 3869,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 3848,
											"end": 4017,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3848,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "548"
										},
										{
											"begin": 3848,
											"end": 4017,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3923,
											"end": 3936,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3923,
											"end": 3936,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3911,
											"end": 3937,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3911,
											"end": 3937,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3992,
											"end": 4007,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3992,
											"end": 4007,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3992,
											"end": 4007,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3992,
											"end": 4007,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3957,
											"end": 3969,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3957,
											"end": 3969,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3957,
											"end": 3969,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3957,
											"end": 3969,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3884,
											"end": 3885,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 3877,
											"end": 3886,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3848,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "546"
										},
										{
											"begin": 3848,
											"end": 4017,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3848,
											"end": 4017,
											"name": "tag",
											"source": 15,
											"value": "548"
										},
										{
											"begin": 3848,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4034,
											"end": 4037,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4034,
											"end": 4037,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 3411,
											"end": 4043,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3411,
											"end": 4043,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 4048,
											"end": 4395,
											"name": "tag",
											"source": 15,
											"value": "109"
										},
										{
											"begin": 4048,
											"end": 4395,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4113,
											"end": 4119,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4121,
											"end": 4127,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4174,
											"end": 4176,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4162,
											"end": 4171,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4153,
											"end": 4160,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4149,
											"end": 4172,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4145,
											"end": 4177,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4142,
											"end": 4194,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4142,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "550"
										},
										{
											"begin": 4142,
											"end": 4194,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4190,
											"end": 4191,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4187,
											"end": 4188,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4180,
											"end": 4192,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4142,
											"end": 4194,
											"name": "tag",
											"source": 15,
											"value": "550"
										},
										{
											"begin": 4142,
											"end": 4194,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4213,
											"end": 4242,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "551"
										},
										{
											"begin": 4232,
											"end": 4241,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4213,
											"end": 4242,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "506"
										},
										{
											"begin": 4213,
											"end": 4242,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4213,
											"end": 4242,
											"name": "tag",
											"source": 15,
											"value": "551"
										},
										{
											"begin": 4213,
											"end": 4242,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4203,
											"end": 4242,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4203,
											"end": 4242,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4292,
											"end": 4294,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4281,
											"end": 4290,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4277,
											"end": 4295,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4264,
											"end": 4296,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4339,
											"end": 4344,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4332,
											"end": 4345,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4325,
											"end": 4346,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4318,
											"end": 4323,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4315,
											"end": 4347,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 4305,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "552"
										},
										{
											"begin": 4305,
											"end": 4365,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4362,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4358,
											"end": 4359,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4351,
											"end": 4363,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4305,
											"end": 4365,
											"name": "tag",
											"source": 15,
											"value": "552"
										},
										{
											"begin": 4305,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4374,
											"end": 4389,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4374,
											"end": 4389,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4374,
											"end": 4389,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4048,
											"end": 4395,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4048,
											"end": 4395,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4048,
											"end": 4395,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4048,
											"end": 4395,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4048,
											"end": 4395,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4048,
											"end": 4395,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 4400,
											"end": 4527,
											"name": "tag",
											"source": 15,
											"value": "222"
										},
										{
											"begin": 4400,
											"end": 4527,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4461,
											"end": 4471,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 4456,
											"end": 4459,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 4452,
											"end": 4472,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 4449,
											"end": 4450,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4442,
											"end": 4473,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4492,
											"end": 4496,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 4489,
											"end": 4490,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 4482,
											"end": 4497,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4516,
											"end": 4520,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 4513,
											"end": 4514,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4506,
											"end": 4521,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4532,
											"end": 5163,
											"name": "tag",
											"source": 15,
											"value": "507"
										},
										{
											"begin": 4532,
											"end": 5163,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4596,
											"end": 4601,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4626,
											"end": 4644,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4667,
											"end": 4669,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4659,
											"end": 4665,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4656,
											"end": 4670,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 4653,
											"end": 4693,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4653,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "556"
										},
										{
											"begin": 4653,
											"end": 4693,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4673,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "556"
										},
										{
											"begin": 4673,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "222"
										},
										{
											"begin": 4673,
											"end": 4691,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4673,
											"end": 4691,
											"name": "tag",
											"source": 15,
											"value": "556"
										},
										{
											"begin": 4673,
											"end": 4691,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4748,
											"end": 4750,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4742,
											"end": 4751,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4716,
											"end": 4718,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 4802,
											"end": 4817,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4802,
											"end": 4817,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4798,
											"end": 4822,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4798,
											"end": 4822,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4798,
											"end": 4822,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4824,
											"end": 4826,
											"name": "PUSH",
											"source": 15,
											"value": "3F"
										},
										{
											"begin": 4794,
											"end": 4827,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4790,
											"end": 4832,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4778,
											"end": 4833,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4778,
											"end": 4833,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4778,
											"end": 4833,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4848,
											"end": 4866,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4848,
											"end": 4866,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4848,
											"end": 4866,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 4868,
											"end": 4890,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4868,
											"end": 4890,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4868,
											"end": 4890,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 4845,
											"end": 4891,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 4842,
											"end": 4914,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4842,
											"end": 4914,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "558"
										},
										{
											"begin": 4842,
											"end": 4914,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4894,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "558"
										},
										{
											"begin": 4894,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "222"
										},
										{
											"begin": 4894,
											"end": 4912,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4894,
											"end": 4912,
											"name": "tag",
											"source": 15,
											"value": "558"
										},
										{
											"begin": 4894,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4934,
											"end": 4944,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4930,
											"end": 4932,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4923,
											"end": 4945,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4963,
											"end": 4969,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4954,
											"end": 4969,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 4954,
											"end": 4969,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4993,
											"end": 4999,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4985,
											"end": 4991,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4978,
											"end": 5000,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5033,
											"end": 5036,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5024,
											"end": 5030,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5019,
											"end": 5022,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5015,
											"end": 5031,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5012,
											"end": 5037,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 5009,
											"end": 5054,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5009,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "559"
										},
										{
											"begin": 5009,
											"end": 5054,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5050,
											"end": 5051,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5047,
											"end": 5048,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5040,
											"end": 5052,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5009,
											"end": 5054,
											"name": "tag",
											"source": 15,
											"value": "559"
										},
										{
											"begin": 5009,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5100,
											"end": 5106,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5095,
											"end": 5098,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5088,
											"end": 5092,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5080,
											"end": 5086,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5076,
											"end": 5093,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5063,
											"end": 5107,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 5155,
											"end": 5156,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5148,
											"end": 5152,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5139,
											"end": 5145,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 5131,
											"end": 5137,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5127,
											"end": 5146,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5123,
											"end": 5153,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5116,
											"end": 5157,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5116,
											"end": 5157,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5116,
											"end": 5157,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5116,
											"end": 5157,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4532,
											"end": 5163,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 4532,
											"end": 5163,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4532,
											"end": 5163,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4532,
											"end": 5163,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4532,
											"end": 5163,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4532,
											"end": 5163,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 5168,
											"end": 5834,
											"name": "tag",
											"source": 15,
											"value": "119"
										},
										{
											"begin": 5168,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5263,
											"end": 5269,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5271,
											"end": 5277,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5279,
											"end": 5285,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5340,
											"end": 5343,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 5328,
											"end": 5337,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5319,
											"end": 5326,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 5315,
											"end": 5338,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5311,
											"end": 5344,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 5308,
											"end": 5361,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5308,
											"end": 5361,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "561"
										},
										{
											"begin": 5308,
											"end": 5361,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5357,
											"end": 5358,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5354,
											"end": 5355,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5359,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5308,
											"end": 5361,
											"name": "tag",
											"source": 15,
											"value": "561"
										},
										{
											"begin": 5308,
											"end": 5361,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5380,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "562"
										},
										{
											"begin": 5399,
											"end": 5408,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5380,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "506"
										},
										{
											"begin": 5380,
											"end": 5409,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5380,
											"end": 5409,
											"name": "tag",
											"source": 15,
											"value": "562"
										},
										{
											"begin": 5380,
											"end": 5409,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5370,
											"end": 5409,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5370,
											"end": 5409,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5428,
											"end": 5466,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "563"
										},
										{
											"begin": 5462,
											"end": 5464,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5451,
											"end": 5460,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5447,
											"end": 5465,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5428,
											"end": 5466,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "506"
										},
										{
											"begin": 5428,
											"end": 5466,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5428,
											"end": 5466,
											"name": "tag",
											"source": 15,
											"value": "563"
										},
										{
											"begin": 5428,
											"end": 5466,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5418,
											"end": 5466,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5418,
											"end": 5466,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5513,
											"end": 5515,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5502,
											"end": 5511,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5498,
											"end": 5516,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5485,
											"end": 5517,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 5475,
											"end": 5517,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5475,
											"end": 5517,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5568,
											"end": 5570,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 5557,
											"end": 5566,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5553,
											"end": 5571,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5540,
											"end": 5572,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 5595,
											"end": 5613,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5587,
											"end": 5593,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5584,
											"end": 5614,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 5581,
											"end": 5631,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5581,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "564"
										},
										{
											"begin": 5581,
											"end": 5631,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5627,
											"end": 5628,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5624,
											"end": 5625,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5617,
											"end": 5629,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5581,
											"end": 5631,
											"name": "tag",
											"source": 15,
											"value": "564"
										},
										{
											"begin": 5581,
											"end": 5631,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5650,
											"end": 5672,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5650,
											"end": 5672,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5703,
											"end": 5707,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 5695,
											"end": 5708,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5695,
											"end": 5708,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5691,
											"end": 5718,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 5681,
											"end": 5736,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "565"
										},
										{
											"begin": 5681,
											"end": 5736,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5732,
											"end": 5733,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5729,
											"end": 5730,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5722,
											"end": 5734,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5681,
											"end": 5736,
											"name": "tag",
											"source": 15,
											"value": "565"
										},
										{
											"begin": 5681,
											"end": 5736,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5755,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "566"
										},
										{
											"begin": 5820,
											"end": 5827,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 5815,
											"end": 5817,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5802,
											"end": 5818,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 5797,
											"end": 5799,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5793,
											"end": 5795,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5789,
											"end": 5800,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5755,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "507"
										},
										{
											"begin": 5755,
											"end": 5828,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5755,
											"end": 5828,
											"name": "tag",
											"source": 15,
											"value": "566"
										},
										{
											"begin": 5755,
											"end": 5828,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5745,
											"end": 5828,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5745,
											"end": 5828,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5745,
											"end": 5828,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5168,
											"end": 5834,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5168,
											"end": 5834,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 5168,
											"end": 5834,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5168,
											"end": 5834,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 5168,
											"end": 5834,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5168,
											"end": 5834,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5168,
											"end": 5834,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5168,
											"end": 5834,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 5839,
											"end": 6363,
											"name": "tag",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 5839,
											"end": 6363,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5917,
											"end": 5923,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5925,
											"end": 5931,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5978,
											"end": 5980,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5966,
											"end": 5975,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5957,
											"end": 5964,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5953,
											"end": 5976,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5949,
											"end": 5981,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 5946,
											"end": 5998,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5946,
											"end": 5998,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "568"
										},
										{
											"begin": 5946,
											"end": 5998,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5994,
											"end": 5995,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5991,
											"end": 5992,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5984,
											"end": 5996,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5946,
											"end": 5998,
											"name": "tag",
											"source": 15,
											"value": "568"
										},
										{
											"begin": 5946,
											"end": 5998,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6017,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "569"
										},
										{
											"begin": 6036,
											"end": 6045,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6017,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "506"
										},
										{
											"begin": 6017,
											"end": 6046,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6017,
											"end": 6046,
											"name": "tag",
											"source": 15,
											"value": "569"
										},
										{
											"begin": 6017,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6007,
											"end": 6046,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6007,
											"end": 6046,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6097,
											"end": 6099,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6086,
											"end": 6095,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6082,
											"end": 6100,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6069,
											"end": 6101,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 6124,
											"end": 6142,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6116,
											"end": 6122,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6113,
											"end": 6143,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 6110,
											"end": 6160,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6110,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "570"
										},
										{
											"begin": 6110,
											"end": 6160,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6156,
											"end": 6157,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6153,
											"end": 6154,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6146,
											"end": 6158,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6110,
											"end": 6160,
											"name": "tag",
											"source": 15,
											"value": "570"
										},
										{
											"begin": 6110,
											"end": 6160,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6232,
											"end": 6236,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 6224,
											"end": 6237,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6224,
											"end": 6237,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6220,
											"end": 6247,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 6210,
											"end": 6265,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "571"
										},
										{
											"begin": 6210,
											"end": 6265,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6261,
											"end": 6262,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6258,
											"end": 6259,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6251,
											"end": 6263,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6210,
											"end": 6265,
											"name": "tag",
											"source": 15,
											"value": "571"
										},
										{
											"begin": 6210,
											"end": 6265,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6284,
											"end": 6357,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "572"
										},
										{
											"begin": 6349,
											"end": 6356,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6344,
											"end": 6346,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6331,
											"end": 6347,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 6326,
											"end": 6328,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6322,
											"end": 6324,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6318,
											"end": 6329,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6284,
											"end": 6357,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "507"
										},
										{
											"begin": 6284,
											"end": 6357,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6284,
											"end": 6357,
											"name": "tag",
											"source": 15,
											"value": "572"
										},
										{
											"begin": 6284,
											"end": 6357,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6274,
											"end": 6357,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6274,
											"end": 6357,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6274,
											"end": 6357,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5839,
											"end": 6363,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5839,
											"end": 6363,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5839,
											"end": 6363,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5839,
											"end": 6363,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5839,
											"end": 6363,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5839,
											"end": 6363,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 6368,
											"end": 6628,
											"name": "tag",
											"source": 15,
											"value": "132"
										},
										{
											"begin": 6368,
											"end": 6628,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6436,
											"end": 6442,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6444,
											"end": 6450,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6497,
											"end": 6499,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6485,
											"end": 6494,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6476,
											"end": 6483,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6472,
											"end": 6495,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6468,
											"end": 6500,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 6465,
											"end": 6517,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6465,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "574"
										},
										{
											"begin": 6465,
											"end": 6517,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6513,
											"end": 6514,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6510,
											"end": 6511,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6503,
											"end": 6515,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6465,
											"end": 6517,
											"name": "tag",
											"source": 15,
											"value": "574"
										},
										{
											"begin": 6465,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6536,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "575"
										},
										{
											"begin": 6555,
											"end": 6564,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6536,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "506"
										},
										{
											"begin": 6536,
											"end": 6565,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6536,
											"end": 6565,
											"name": "tag",
											"source": 15,
											"value": "575"
										},
										{
											"begin": 6536,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6526,
											"end": 6565,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6526,
											"end": 6565,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6584,
											"end": 6622,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "576"
										},
										{
											"begin": 6618,
											"end": 6620,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6607,
											"end": 6616,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6603,
											"end": 6621,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6584,
											"end": 6622,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "506"
										},
										{
											"begin": 6584,
											"end": 6622,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 6584,
											"end": 6622,
											"name": "tag",
											"source": 15,
											"value": "576"
										},
										{
											"begin": 6584,
											"end": 6622,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6574,
											"end": 6622,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6574,
											"end": 6622,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6368,
											"end": 6628,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6368,
											"end": 6628,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6368,
											"end": 6628,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6368,
											"end": 6628,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6368,
											"end": 6628,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6368,
											"end": 6628,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 6633,
											"end": 7013,
											"name": "tag",
											"source": 15,
											"value": "144"
										},
										{
											"begin": 6633,
											"end": 7013,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6712,
											"end": 6713,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 6708,
											"end": 6720,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6708,
											"end": 6720,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6708,
											"end": 6720,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 6708,
											"end": 6720,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6755,
											"end": 6767,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6755,
											"end": 6767,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6755,
											"end": 6767,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6776,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "578"
										},
										{
											"begin": 6776,
											"end": 6837,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6830,
											"end": 6834,
											"name": "PUSH",
											"source": 15,
											"value": "7F"
										},
										{
											"begin": 6822,
											"end": 6828,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6818,
											"end": 6835,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6808,
											"end": 6835,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6808,
											"end": 6835,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6776,
											"end": 6837,
											"name": "tag",
											"source": 15,
											"value": "578"
										},
										{
											"begin": 6776,
											"end": 6837,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6883,
											"end": 6885,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6875,
											"end": 6881,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6872,
											"end": 6886,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 6852,
											"end": 6870,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6849,
											"end": 6887,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6846,
											"end": 7007,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "579"
										},
										{
											"begin": 6846,
											"end": 7007,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6929,
											"end": 6939,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 6924,
											"end": 6927,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 6920,
											"end": 6940,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 6917,
											"end": 6918,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6941,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6964,
											"end": 6968,
											"name": "PUSH",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 6961,
											"end": 6962,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 6954,
											"end": 6969,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6992,
											"end": 6996,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 6989,
											"end": 6990,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6982,
											"end": 6997,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6846,
											"end": 7007,
											"name": "tag",
											"source": 15,
											"value": "579"
										},
										{
											"begin": 6846,
											"end": 7007,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6846,
											"end": 7007,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6633,
											"end": 7013,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6633,
											"end": 7013,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6633,
											"end": 7013,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6633,
											"end": 7013,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 8258,
											"end": 8671,
											"name": "tag",
											"source": 15,
											"value": "177"
										},
										{
											"begin": 8258,
											"end": 8671,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8460,
											"end": 8462,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8442,
											"end": 8463,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8442,
											"end": 8463,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8442,
											"end": 8463,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8499,
											"end": 8501,
											"name": "PUSH",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 8479,
											"end": 8497,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8479,
											"end": 8497,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8479,
											"end": 8497,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8472,
											"end": 8502,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8538,
											"end": 8572,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
										},
										{
											"begin": 8533,
											"end": 8535,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8518,
											"end": 8536,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8518,
											"end": 8536,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8511,
											"end": 8573,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1DDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8604,
											"end": 8606,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 8589,
											"end": 8607,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8589,
											"end": 8607,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8582,
											"end": 8629,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8661,
											"end": 8664,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 8646,
											"end": 8665,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8646,
											"end": 8665,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8258,
											"end": 8671,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 8676,
											"end": 8803,
											"name": "tag",
											"source": 15,
											"value": "508"
										},
										{
											"begin": 8676,
											"end": 8803,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8737,
											"end": 8747,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 8732,
											"end": 8735,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 8728,
											"end": 8748,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 8725,
											"end": 8726,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8718,
											"end": 8749,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8768,
											"end": 8772,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 8765,
											"end": 8766,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 8758,
											"end": 8773,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8792,
											"end": 8796,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 8789,
											"end": 8790,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8782,
											"end": 8797,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8808,
											"end": 8976,
											"name": "tag",
											"source": 15,
											"value": "182"
										},
										{
											"begin": 8808,
											"end": 8976,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8848,
											"end": 8855,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8914,
											"end": 8915,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8910,
											"end": 8911,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8906,
											"end": 8912,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 8902,
											"end": 8916,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 8899,
											"end": 8900,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8896,
											"end": 8917,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 8891,
											"end": 8892,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8884,
											"end": 8893,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8877,
											"end": 8894,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8873,
											"end": 8918,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8870,
											"end": 8941,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8870,
											"end": 8941,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "587"
										},
										{
											"begin": 8870,
											"end": 8941,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8921,
											"end": 8939,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "587"
										},
										{
											"begin": 8921,
											"end": 8939,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "508"
										},
										{
											"begin": 8921,
											"end": 8939,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 8921,
											"end": 8939,
											"name": "tag",
											"source": 15,
											"value": "587"
										},
										{
											"begin": 8921,
											"end": 8939,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8961,
											"end": 8970,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 8961,
											"end": 8970,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8808,
											"end": 8976,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 8981,
											"end": 9108,
											"name": "tag",
											"source": 15,
											"value": "509"
										},
										{
											"begin": 8981,
											"end": 9108,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9042,
											"end": 9052,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 9037,
											"end": 9040,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 9033,
											"end": 9053,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 9030,
											"end": 9031,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9023,
											"end": 9054,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9073,
											"end": 9077,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 9070,
											"end": 9071,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 9063,
											"end": 9078,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9097,
											"end": 9101,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 9094,
											"end": 9095,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9087,
											"end": 9102,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 9113,
											"end": 9233,
											"name": "tag",
											"source": 15,
											"value": "184"
										},
										{
											"begin": 9113,
											"end": 9233,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9153,
											"end": 9154,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9179,
											"end": 9180,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9169,
											"end": 9204,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "591"
										},
										{
											"begin": 9169,
											"end": 9204,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9184,
											"end": 9202,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "591"
										},
										{
											"begin": 9184,
											"end": 9202,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "509"
										},
										{
											"begin": 9184,
											"end": 9202,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 9184,
											"end": 9202,
											"name": "tag",
											"source": 15,
											"value": "591"
										},
										{
											"begin": 9184,
											"end": 9202,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9218,
											"end": 9227,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 9218,
											"end": 9227,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9113,
											"end": 9233,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 10063,
											"end": 10190,
											"name": "tag",
											"source": 15,
											"value": "199"
										},
										{
											"begin": 10063,
											"end": 10190,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10124,
											"end": 10134,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 10119,
											"end": 10122,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 10115,
											"end": 10135,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 10112,
											"end": 10113,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10105,
											"end": 10136,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10155,
											"end": 10159,
											"name": "PUSH",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 10152,
											"end": 10153,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 10145,
											"end": 10160,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10179,
											"end": 10183,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 10176,
											"end": 10177,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10169,
											"end": 10184,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 11016,
											"end": 11372,
											"name": "tag",
											"source": 15,
											"value": "214"
										},
										{
											"begin": 11016,
											"end": 11372,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11218,
											"end": 11220,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11200,
											"end": 11221,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11200,
											"end": 11221,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11200,
											"end": 11221,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11237,
											"end": 11255,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11237,
											"end": 11255,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11237,
											"end": 11255,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11230,
											"end": 11260,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11296,
											"end": 11330,
											"name": "PUSH",
											"source": 15,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 11291,
											"end": 11293,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 11276,
											"end": 11294,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11276,
											"end": 11294,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11269,
											"end": 11331,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11363,
											"end": 11365,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 11348,
											"end": 11366,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11348,
											"end": 11366,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11016,
											"end": 11372,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 11377,
											"end": 11512,
											"name": "tag",
											"source": 15,
											"value": "236"
										},
										{
											"begin": 11377,
											"end": 11512,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11416,
											"end": 11419,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11437,
											"end": 11454,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 11437,
											"end": 11454,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11437,
											"end": 11454,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11434,
											"end": 11477,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "600"
										},
										{
											"begin": 11434,
											"end": 11477,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11457,
											"end": 11475,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "600"
										},
										{
											"begin": 11457,
											"end": 11475,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "508"
										},
										{
											"begin": 11457,
											"end": 11475,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 11457,
											"end": 11475,
											"name": "tag",
											"source": 15,
											"value": "600"
										},
										{
											"begin": 11457,
											"end": 11475,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11504,
											"end": 11505,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 11493,
											"end": 11506,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11493,
											"end": 11506,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11377,
											"end": 11512,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 11863,
											"end": 12139,
											"name": "tag",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 11863,
											"end": 12139,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11994,
											"end": 11997,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12032,
											"end": 12038,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12026,
											"end": 12039,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 12048,
											"end": 12101,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "603"
										},
										{
											"begin": 12094,
											"end": 12100,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12089,
											"end": 12092,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12082,
											"end": 12086,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12074,
											"end": 12080,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 12070,
											"end": 12087,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12048,
											"end": 12101,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "504"
										},
										{
											"begin": 12048,
											"end": 12101,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 12048,
											"end": 12101,
											"name": "tag",
											"source": 15,
											"value": "603"
										},
										{
											"begin": 12048,
											"end": 12101,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12117,
											"end": 12133,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12117,
											"end": 12133,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12117,
											"end": 12133,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12117,
											"end": 12133,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12117,
											"end": 12133,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11863,
											"end": 12139,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11863,
											"end": 12139,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 12144,
											"end": 12272,
											"name": "tag",
											"source": 15,
											"value": "283"
										},
										{
											"begin": 12144,
											"end": 12272,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12184,
											"end": 12187,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12215,
											"end": 12216,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12211,
											"end": 12217,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 12208,
											"end": 12209,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12205,
											"end": 12218,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 12202,
											"end": 12241,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12202,
											"end": 12241,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "606"
										},
										{
											"begin": 12202,
											"end": 12241,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12221,
											"end": 12239,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "606"
										},
										{
											"begin": 12221,
											"end": 12239,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "508"
										},
										{
											"begin": 12221,
											"end": 12239,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 12221,
											"end": 12239,
											"name": "tag",
											"source": 15,
											"value": "606"
										},
										{
											"begin": 12221,
											"end": 12239,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12257,
											"end": 12266,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12257,
											"end": 12266,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12144,
											"end": 12272,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 14187,
											"end": 14312,
											"name": "tag",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 14187,
											"end": 14312,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14227,
											"end": 14231,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14255,
											"end": 14256,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14252,
											"end": 14253,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14249,
											"end": 14257,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 14246,
											"end": 14280,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 14246,
											"end": 14280,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "614"
										},
										{
											"begin": 14246,
											"end": 14280,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 14260,
											"end": 14278,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "614"
										},
										{
											"begin": 14260,
											"end": 14278,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "508"
										},
										{
											"begin": 14260,
											"end": 14278,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 14260,
											"end": 14278,
											"name": "tag",
											"source": 15,
											"value": "614"
										},
										{
											"begin": 14260,
											"end": 14278,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14297,
											"end": 14306,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 14297,
											"end": 14306,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14187,
											"end": 14312,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 14671,
											"end": 15085,
											"name": "tag",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 14671,
											"end": 15085,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14873,
											"end": 14875,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14855,
											"end": 14876,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 14855,
											"end": 14876,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14855,
											"end": 14876,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14912,
											"end": 14914,
											"name": "PUSH",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 14892,
											"end": 14910,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14892,
											"end": 14910,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14892,
											"end": 14910,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14885,
											"end": 14915,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14951,
											"end": 14985,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 14946,
											"end": 14948,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 14931,
											"end": 14949,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14931,
											"end": 14949,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14924,
											"end": 14986,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15017,
											"end": 15019,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 15002,
											"end": 15020,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15002,
											"end": 15020,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14995,
											"end": 15043,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15075,
											"end": 15078,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 15060,
											"end": 15079,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15060,
											"end": 15079,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14671,
											"end": 15085,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 15508,
											"end": 15978,
											"name": "tag",
											"source": 15,
											"value": "363"
										},
										{
											"begin": 15508,
											"end": 15978,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15687,
											"end": 15690,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15725,
											"end": 15731,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15719,
											"end": 15732,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 15741,
											"end": 15794,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "619"
										},
										{
											"begin": 15787,
											"end": 15793,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15782,
											"end": 15785,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15775,
											"end": 15779,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15767,
											"end": 15773,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 15763,
											"end": 15780,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15741,
											"end": 15794,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "504"
										},
										{
											"begin": 15741,
											"end": 15794,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 15741,
											"end": 15794,
											"name": "tag",
											"source": 15,
											"value": "619"
										},
										{
											"begin": 15741,
											"end": 15794,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15857,
											"end": 15870,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15857,
											"end": 15870,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 15816,
											"end": 15832,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15816,
											"end": 15832,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15816,
											"end": 15832,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15816,
											"end": 15832,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15879,
											"end": 15936,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "620"
										},
										{
											"begin": 15857,
											"end": 15870,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15816,
											"end": 15832,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15913,
											"end": 15917,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15901,
											"end": 15918,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 15901,
											"end": 15918,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15879,
											"end": 15936,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "504"
										},
										{
											"begin": 15879,
											"end": 15936,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 15879,
											"end": 15936,
											"name": "tag",
											"source": 15,
											"value": "620"
										},
										{
											"begin": 15879,
											"end": 15936,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15952,
											"end": 15972,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15952,
											"end": 15972,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 15508,
											"end": 15978,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15508,
											"end": 15978,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 16398,
											"end": 16887,
											"name": "tag",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 16398,
											"end": 16887,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16667,
											"end": 16682,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 16667,
											"end": 16682,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16667,
											"end": 16682,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 16649,
											"end": 16683,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16649,
											"end": 16683,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16719,
											"end": 16734,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 16719,
											"end": 16734,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 16714,
											"end": 16716,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16699,
											"end": 16717,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16699,
											"end": 16717,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16692,
											"end": 16735,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16766,
											"end": 16768,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 16751,
											"end": 16769,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16751,
											"end": 16769,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16744,
											"end": 16778,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16744,
											"end": 16778,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16744,
											"end": 16778,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16814,
											"end": 16817,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 16809,
											"end": 16811,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 16794,
											"end": 16812,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16794,
											"end": 16812,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16787,
											"end": 16818,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16787,
											"end": 16818,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16787,
											"end": 16818,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16592,
											"end": 16596,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16592,
											"end": 16596,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16835,
											"end": 16881,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "623"
										},
										{
											"begin": 16835,
											"end": 16881,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16861,
											"end": 16880,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16861,
											"end": 16880,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16853,
											"end": 16859,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 16835,
											"end": 16881,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "505"
										},
										{
											"begin": 16835,
											"end": 16881,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 16835,
											"end": 16881,
											"name": "tag",
											"source": 15,
											"value": "623"
										},
										{
											"begin": 16835,
											"end": 16881,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16827,
											"end": 16881,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 16398,
											"end": 16887,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16398,
											"end": 16887,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 16892,
											"end": 17141,
											"name": "tag",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 16892,
											"end": 17141,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16961,
											"end": 16967,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17014,
											"end": 17016,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 17002,
											"end": 17011,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16993,
											"end": 17000,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 16989,
											"end": 17012,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 16985,
											"end": 17017,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 16982,
											"end": 17034,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 16982,
											"end": 17034,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "625"
										},
										{
											"begin": 16982,
											"end": 17034,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 17030,
											"end": 17031,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17027,
											"end": 17028,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 17020,
											"end": 17032,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 16982,
											"end": 17034,
											"name": "tag",
											"source": 15,
											"value": "625"
										},
										{
											"begin": 16982,
											"end": 17034,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17062,
											"end": 17071,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 17056,
											"end": 17072,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 17081,
											"end": 17111,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 17105,
											"end": 17110,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 17081,
											"end": 17111,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "503"
										},
										{
											"begin": 17081,
											"end": 17111,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 17562,
											"end": 17674,
											"name": "tag",
											"source": 15,
											"value": "456"
										},
										{
											"begin": 17562,
											"end": 17674,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17594,
											"end": 17595,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17620,
											"end": 17621,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17610,
											"end": 17645,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "630"
										},
										{
											"begin": 17610,
											"end": 17645,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 17625,
											"end": 17643,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "630"
										},
										{
											"begin": 17625,
											"end": 17643,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "509"
										},
										{
											"begin": 17625,
											"end": 17643,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 17625,
											"end": 17643,
											"name": "tag",
											"source": 15,
											"value": "630"
										},
										{
											"begin": 17625,
											"end": 17643,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17659,
											"end": 17668,
											"name": "MOD",
											"source": 15
										},
										{
											"begin": 17659,
											"end": 17668,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17562,
											"end": 17674,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 18397,
											"end": 18524,
											"name": "tag",
											"source": 15,
											"value": "489"
										},
										{
											"begin": 18397,
											"end": 18524,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18458,
											"end": 18468,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 18453,
											"end": 18456,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 18449,
											"end": 18469,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 18446,
											"end": 18447,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18439,
											"end": 18470,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18489,
											"end": 18493,
											"name": "PUSH",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 18486,
											"end": 18487,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 18479,
											"end": 18494,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18513,
											"end": 18517,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 18510,
											"end": 18511,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18503,
											"end": 18518,
											"name": "REVERT",
											"source": 15
										}
									],
									".data": {
										"9962ECE65B578AF633A4CD71E7E539261EBE22823AA4CA702EC34245D8300D7D": "68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"MAX_SUPPLY()": "32cb6b0c",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,string)": "d0def521",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"renounceOwnership()": "715018a6",
							"royaltiesPercentageInBips()": "2175c990",
							"royaltiesReceiver()": "a3a51bd5",
							"royaltyInfo(uint256,uint256)": "2a55205a",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setRoyaltiesReceiver(address)": "b5143715",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"tokensOfOwner(address)": "8462151c",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialRoyaltiesReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_royaltiesPercentageInBips\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"hash\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltiesPercentageInBips\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltiesReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRoyaltiesReceiver\",\"type\":\"address\"}],\"name\":\"setRoyaltiesReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"ownerTokens\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extends ERC-721 NFT contract and implements ERC-2981\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"mint(address,string)\":{\"params\":{\"hash\":\"- the IPFS hash of the token's resource\",\"recipient\":\"- the address to which the token will be transfered\"},\"returns\":{\"tokenId\":\"- the id of the token\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"royaltiesReceiver()\":{\"returns\":{\"_0\":\"the address of the royalties recipient\"}},\"royaltyInfo(uint256,uint256)\":{\"params\":{\"_salePrice\":\"- sale price of the NFT asset specified by _tokenId\",\"_tokenId\":\"- the NFT asset queried for royalty information\"},\"returns\":{\"receiver\":\"- address of who should be sent the royalty payment\",\"royaltyAmount\":\"- the royalty payment amount for _value sale price\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setRoyaltiesReceiver(address)\":{\"params\":{\"newRoyaltiesReceiver\":\"- address of the new royalties recipient\"}},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\",\"params\":{\"tokenId\":\"- the id of the token whose URI to return\"},\"returns\":{\"_0\":\"a string containing an URI pointing to the token's ressource\"}},\"tokensOfOwner(address)\":{\"params\":{\"_owner\":\"- the address to query\"},\"returns\":{\"ownerTokens\":\"- an array containing the ids of all tokens         owned by the address\"}},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Sample NFT contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"mint(address,string)\":{\"notice\":\"Mints tokens\"},\"royaltiesReceiver()\":{\"notice\":\"Getter function for _royaltiesReceiver\"},\"setRoyaltiesReceiver(address)\":{\"notice\":\"Changes the royalties' recipient address (in case rights are         transferred for instance)\"},\"supportsInterface(bytes4)\":{\"notice\":\"Informs callers that this contract supports ERC2981\"},\"tokenURI(uint256)\":{\"notice\":\"Returns a token's URI\"},\"tokensOfOwner(address)\":{\"notice\":\"Returns all the tokens owned by an address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTCollection.sol\":\"Token\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTCollection.sol\":{\"keccak256\":\"0x098725c5a4f8049e69398deaed14c965bea7cce0146a82a73522119bb53d2a9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f2a031d74aea7cd7004473c3cf1e58672d34e31c274ece55e8254ce06960cc3\",\"dweb:/ipfs/QmaRctzBGVLn7F4oz8s6eyajEMgSjhnrxG4cJA2KZzqYbY\"]},\"contracts/interface/IERC2981.sol\":{\"keccak256\":\"0xe60d271229c7396bfd6d2a8b69cc357ff62dba0888c4f8584d5426f84480207b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a72b1603a1723912a2ba3e265c54fad9e49500b01585867c8602f2631335b7f3\",\"dweb:/ipfs/QmV5C9BvF43pjmDYP1ZdA5hYRWRwHtdR8nkcCAyh8FtP3y\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x38ecbca9e6fb443b914b65ad115d20ab1ac3b675424591c549fcba1ff1147c9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd4bb8f45aaac22eec2165263a0bc3def8638af01e927ba677f8518af90af515\",\"dweb:/ipfs/QmeYhUpBbLa8vskLVAP7foGqk2oQS5PoodhpsvHHzGWkm2\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb0308d8c5873c6e6c9a712669d33f77f3eb04dfbd3559ed901fa8d799673d176\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0280faa8e071ed4648d8538354452be776b7e5ba5b965d4cf9b4d3f6509c920c\",\"dweb:/ipfs/QmT9qNNpCH6NLMheAwxRHinRvuQZvLdg3TsQmCnk1aMVaq\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afbedcf17f31db719e6fdc56caa8f458799c5fa2eb94cb1e94ef18f89af85768\",\"dweb:/ipfs/QmVmqRdBfbgYThpZSoAJ5o9mnAMjx8mCHHjv3Rh8cQAAg3\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x1cbe42915bc66227970fe99bc0f783eb1de30f2b48f984af01ad45edb9658698\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2baa08eb67d9da46e6c4c049f17b7684a1c68c5268d0f466cfa0eb23ce2bf9b0\",\"dweb:/ipfs/Qmdnj8zj4PfErB2HM2eKmDt7FrqrhggsZ6Qd8MpD593tgj\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"mint(address,string)": {
								"notice": "Mints tokens"
							},
							"royaltiesReceiver()": {
								"notice": "Getter function for _royaltiesReceiver"
							},
							"setRoyaltiesReceiver(address)": {
								"notice": "Changes the royalties' recipient address (in case rights are         transferred for instance)"
							},
							"supportsInterface(bytes4)": {
								"notice": "Informs callers that this contract supports ERC2981"
							},
							"tokenURI(uint256)": {
								"notice": "Returns a token's URI"
							},
							"tokensOfOwner(address)": {
								"notice": "Returns all the tokens owned by an address"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/interface/IERC2981.sol": {
				"IERC2981": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_salePrice",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "royaltyAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the NFT Royalty Standard",
						"kind": "dev",
						"methods": {
							"royaltyInfo(uint256,uint256)": {
								"params": {
									"_salePrice": "- the sale price of the NFT asset specified by _tokenId",
									"_tokenId": "- the NFT asset queried for royalty information"
								},
								"returns": {
									"receiver": "- address of who should be sent the royalty payment",
									"royaltyAmount": "- the royalty payment amount for _salePrice"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"royaltyInfo(uint256,uint256)": "2a55205a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the NFT Royalty Standard\",\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"params\":{\"_salePrice\":\"- the sale price of the NFT asset specified by _tokenId\",\"_tokenId\":\"- the NFT asset queried for royalty information\"},\"returns\":{\"receiver\":\"- address of who should be sent the royalty payment\",\"royaltyAmount\":\"- the royalty payment amount for _salePrice\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IERC2981.sol\":\"IERC2981\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/IERC2981.sol\":{\"keccak256\":\"0xe60d271229c7396bfd6d2a8b69cc357ff62dba0888c4f8584d5426f84480207b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a72b1603a1723912a2ba3e265c54fad9e49500b01585867c8602f2631335b7f3\",\"dweb:/ipfs/QmV5C9BvF43pjmDYP1ZdA5hYRWRwHtdR8nkcCAyh8FtP3y\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":628:14286  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1456:1469  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1456:1461  _name */\n  0x00\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1456:1469  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1479:1496  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1479:1486  _symbol */\n  0x01\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1479:1496  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":628:14286  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  jump(tag_23)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:141   */\ntag_21:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1031   */\ntag_22:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_26:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_28\n  tag_21\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_30\n  tag_21\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_31:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_32:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_32)\ntag_34:\n    /* \"#utility.yul\":930:932   */\n  dup4\n    /* \"#utility.yul\":927:928   */\n  dup3\n    /* \"#utility.yul\":924:933   */\n  gt\n    /* \"#utility.yul\":921:1001   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":989:990   */\n  0x00\n    /* \"#utility.yul\":984:986   */\n  dup4\n    /* \"#utility.yul\":979:981   */\n  dup6\n    /* \"#utility.yul\":971:977   */\n  dup4\n    /* \"#utility.yul\":967:982   */\n  add\n    /* \"#utility.yul\":963:987   */\n  add\n    /* \"#utility.yul\":956:991   */\n  mstore\n    /* \"#utility.yul\":921:1001   */\ntag_35:\n    /* \"#utility.yul\":1019:1025   */\n  swap7\n    /* \"#utility.yul\":146:1031   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1036:1598   */\ntag_3:\n    /* \"#utility.yul\":1135:1141   */\n  0x00\n    /* \"#utility.yul\":1143:1149   */\n  dup1\n    /* \"#utility.yul\":1196:1198   */\n  0x40\n    /* \"#utility.yul\":1184:1193   */\n  dup4\n    /* \"#utility.yul\":1175:1182   */\n  dup6\n    /* \"#utility.yul\":1171:1194   */\n  sub\n    /* \"#utility.yul\":1167:1199   */\n  slt\n    /* \"#utility.yul\":1164:1216   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1212:1213   */\n  0x00\n    /* \"#utility.yul\":1209:1210   */\n  dup1\n    /* \"#utility.yul\":1202:1214   */\n  revert\n    /* \"#utility.yul\":1164:1216   */\ntag_37:\n    /* \"#utility.yul\":1239:1255   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1304:1318   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1301:1335   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1331:1332   */\n  0x00\n    /* \"#utility.yul\":1328:1329   */\n  dup1\n    /* \"#utility.yul\":1321:1333   */\n  revert\n    /* \"#utility.yul\":1301:1335   */\ntag_38:\n    /* \"#utility.yul\":1354:1415   */\n  tag_39\n    /* \"#utility.yul\":1407:1414   */\n  dup7\n    /* \"#utility.yul\":1398:1404   */\n  dup4\n    /* \"#utility.yul\":1387:1396   */\n  dup8\n    /* \"#utility.yul\":1383:1405   */\n  add\n    /* \"#utility.yul\":1354:1415   */\n  tag_22\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1344:1415   */\n  swap4\n  pop\n    /* \"#utility.yul\":1461:1463   */\n  0x20\n    /* \"#utility.yul\":1450:1459   */\n  dup6\n    /* \"#utility.yul\":1446:1464   */\n  add\n    /* \"#utility.yul\":1440:1465   */\n  mload\n    /* \"#utility.yul\":1424:1465   */\n  swap2\n  pop\n    /* \"#utility.yul\":1490:1492   */\n  dup1\n    /* \"#utility.yul\":1480:1488   */\n  dup3\n    /* \"#utility.yul\":1477:1493   */\n  gt\n    /* \"#utility.yul\":1474:1510   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1506:1507   */\n  0x00\n    /* \"#utility.yul\":1503:1504   */\n  dup1\n    /* \"#utility.yul\":1496:1508   */\n  revert\n    /* \"#utility.yul\":1474:1510   */\ntag_40:\n  pop\n    /* \"#utility.yul\":1529:1592   */\n  tag_41\n    /* \"#utility.yul\":1584:1591   */\n  dup6\n    /* \"#utility.yul\":1573:1581   */\n  dup3\n    /* \"#utility.yul\":1562:1571   */\n  dup7\n    /* \"#utility.yul\":1558:1582   */\n  add\n    /* \"#utility.yul\":1529:1592   */\n  tag_22\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1519:1592   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1036:1598   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1603:1983   */\ntag_11:\n    /* \"#utility.yul\":1682:1683   */\n  0x01\n    /* \"#utility.yul\":1678:1690   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1725:1737   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1746:1807   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1800:1804   */\n  0x7f\n    /* \"#utility.yul\":1792:1798   */\n  dup3\n    /* \"#utility.yul\":1788:1805   */\n  and\n    /* \"#utility.yul\":1778:1805   */\n  swap2\n  pop\n    /* \"#utility.yul\":1746:1807   */\ntag_43:\n    /* \"#utility.yul\":1853:1855   */\n  0x20\n    /* \"#utility.yul\":1845:1851   */\n  dup3\n    /* \"#utility.yul\":1842:1856   */\n  lt\n    /* \"#utility.yul\":1822:1840   */\n  dup2\n    /* \"#utility.yul\":1819:1857   */\n  sub\n    /* \"#utility.yul\":1816:1977   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1899:1909   */\n  0x4e487b71\n    /* \"#utility.yul\":1894:1897   */\n  0xe0\n    /* \"#utility.yul\":1890:1910   */\n  shl\n    /* \"#utility.yul\":1887:1888   */\n  0x00\n    /* \"#utility.yul\":1880:1911   */\n  mstore\n    /* \"#utility.yul\":1934:1938   */\n  0x22\n    /* \"#utility.yul\":1931:1932   */\n  0x04\n    /* \"#utility.yul\":1924:1939   */\n  mstore\n    /* \"#utility.yul\":1962:1966   */\n  0x24\n    /* \"#utility.yul\":1959:1960   */\n  0x00\n    /* \"#utility.yul\":1952:1967   */\n  revert\n    /* \"#utility.yul\":1816:1977   */\ntag_44:\n  pop\n    /* \"#utility.yul\":1603:1983   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_23:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":628:14286  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":628:14286  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2488:2586  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4000:4217  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_5:\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1692:1724   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1674:1725   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1662:1664   */\n      0x20\n        /* \"#utility.yul\":1647:1665   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4000:4217  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_22\n        /* \"#utility.yul\":1528:1731   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3538:3939  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_6:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4727:5057  function transferFrom(... */\n    tag_7:\n      tag_34\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5123:5302  function safeTransferFrom(... */\n    tag_8:\n      tag_34\n      tag_43\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2191:2426  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      tag_28\n      tag_46\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1929:2134  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_49\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n        /* \"#utility.yul\":2843:2868   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2831:2833   */\n      0x20\n        /* \"#utility.yul\":2816:2834   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1929:2134  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      tag_22\n        /* \"#utility.yul\":2697:2874   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2650:2752  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      tag_24\n      tag_56\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4284:4437  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      tag_34\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5368:5688  function safeTransferFrom(... */\n    tag_13:\n      tag_34\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2818:3147  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      tag_24\n      tag_67\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4503:4665  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_15:\n      tag_18\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4600:4604  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4623:4641  _operatorApprovals */\n      0x05\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4623:4658  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4503:4665  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1672:1676  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1707:1747  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n      tag_76\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1763:1811  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n    tag_76:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1707:1863  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_78\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1827:1863  super.supportsInterface(interfaceId) */\n    tag_78:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1688:1863  return... */\n      swap3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2488:2586  function name() public view virtual override returns (string memory) {... */\n    tag_25:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2542:2555  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2574:2579  _name */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2567:2579  return _name */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_83\n      swap1\n      tag_82\n      jump\t// in\n    tag_83:\n      dup1\n      iszero\n      tag_84\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_85\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_84)\n    tag_85:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_86:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_86\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2488:2586  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4000:4217  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_31:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4076:4083  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7248:7255  _owners */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4095:4168  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5358:5360   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4095:4168  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5340:5361   */\n      mstore\n        /* \"#utility.yul\":5397:5399   */\n      0x2c\n        /* \"#utility.yul\":5377:5395   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5370:5400   */\n      mstore\n        /* \"#utility.yul\":5436:5470   */\n      0x4552433732313a20617070726f76656420717565727920666f72206e6f6e6578\n        /* \"#utility.yul\":5416:5434   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5409:5471   */\n      mstore\n      shl(0xa1, 0x34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":5487:5505   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5480:5522   */\n      mstore\n        /* \"#utility.yul\":5539:5558   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4095:4168  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4186:4210  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4186:4201  _tokenApprovals */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4186:4210  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4000:4217  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3538:3939  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_37:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3618:3631  address owner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3634:3657  ERC721.ownerOf(tokenId) */\n      tag_94\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3649:3656  tokenId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3634:3648  ERC721.ownerOf */\n      tag_47\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3634:3657  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_94:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3618:3657  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3681:3686  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3675:3686  to != owner */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3675:3677  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3675:3686  to != owner */\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3667:3724  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5771:5773   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3667:3724  require(to != owner, \"ERC721: approval to current owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5753:5774   */\n      mstore\n        /* \"#utility.yul\":5810:5812   */\n      0x21\n        /* \"#utility.yul\":5790:5808   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5783:5813   */\n      mstore\n        /* \"#utility.yul\":5849:5883   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":5829:5847   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5822:5884   */\n      mstore\n      shl(0xf9, 0x39)\n        /* \"#utility.yul\":5900:5918   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5893:5924   */\n      mstore\n        /* \"#utility.yul\":5941:5960   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3667:3724  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_91\n        /* \"#utility.yul\":5569:5966   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3667:3724  require(to != owner, \"ERC721: approval to current owner\") */\n    tag_95:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3756:3777  _msgSender() == owner */\n      dup3\n      and\n      eq\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3756:3818  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      tag_101\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3781:3818  isApprovedForAll(owner, _msgSender()) */\n      tag_101\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3798:3803  owner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4503:4665  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_71\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3781:3818  isApprovedForAll(owner, _msgSender()) */\n    tag_101:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3735:3900  require(... */\n      tag_103\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6173:6175   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3735:3900  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6155:6176   */\n      mstore\n        /* \"#utility.yul\":6212:6214   */\n      0x38\n        /* \"#utility.yul\":6192:6210   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6185:6215   */\n      mstore\n        /* \"#utility.yul\":6251:6285   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77\n        /* \"#utility.yul\":6231:6249   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6224:6286   */\n      mstore\n        /* \"#utility.yul\":6322:6348   */\n      0x6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000\n        /* \"#utility.yul\":6302:6320   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6295:6349   */\n      mstore\n        /* \"#utility.yul\":6366:6385   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3735:3900  require(... */\n      tag_91\n        /* \"#utility.yul\":5971:6391   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3735:3900  require(... */\n    tag_103:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3911:3932  _approve(to, tokenId) */\n      tag_106\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3920:3922  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3924:3931  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3911:3919  _approve */\n      tag_107\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3911:3932  _approve(to, tokenId) */\n      jump\t// in\n    tag_106:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3608:3939  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3538:3939  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4727:5057  function transferFrom(... */\n    tag_41:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4916:4957  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_109\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4949:4956  tokenId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4916:4934  _isApprovedOrOwner */\n      tag_111\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4916:4957  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_109:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4908:5011  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_114\n      jump\t// in\n    tag_112:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5022:5050  _transfer(from, to, tokenId) */\n      tag_106\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5032:5036  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5038:5040  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5042:5049  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5022:5031  _transfer */\n      tag_116\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5022:5050  _transfer(from, to, tokenId) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5123:5302  function safeTransferFrom(... */\n    tag_44:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5256:5295  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_106\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5273:5277  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5279:5281  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5283:5290  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5256:5295  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5256:5272  safeTransferFrom */\n      tag_65\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5256:5295  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2191:2426  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_47:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2263:2270  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2298:2314  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2298:2305  _owners */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2298:2314  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2324:2397  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7016:7018   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2324:2397  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6998:7019   */\n      mstore\n        /* \"#utility.yul\":7055:7057   */\n      0x29\n        /* \"#utility.yul\":7035:7053   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7028:7058   */\n      mstore\n        /* \"#utility.yul\":7094:7128   */\n      0x4552433732313a206f776e657220717565727920666f72206e6f6e6578697374\n        /* \"#utility.yul\":7074:7092   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7067:7129   */\n      mstore\n      shl(0xb9, 0x32b73a103a37b5b2b7)\n        /* \"#utility.yul\":7145:7163   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7138:7177   */\n      mstore\n        /* \"#utility.yul\":7194:7213   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2324:2397  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      tag_91\n        /* \"#utility.yul\":6814:7219   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1929:2134  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_52:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2001:2008  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2028:2047  owner != address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2020:2094  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7426:7428   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2020:2094  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7408:7429   */\n      mstore\n        /* \"#utility.yul\":7465:7467   */\n      0x2a\n        /* \"#utility.yul\":7445:7463   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7438:7468   */\n      mstore\n        /* \"#utility.yul\":7504:7538   */\n      0x4552433732313a2062616c616e636520717565727920666f7220746865207a65\n        /* \"#utility.yul\":7484:7502   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7477:7539   */\n      mstore\n      shl(0xb0, 0x726f2061646472657373)\n        /* \"#utility.yul\":7555:7573   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7548:7588   */\n      mstore\n        /* \"#utility.yul\":7605:7624   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2020:2094  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      tag_91\n        /* \"#utility.yul\":7224:7630   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2020:2094  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n    tag_124:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2111:2127  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2111:2120  _balances */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2111:2127  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1929:2134  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2650:2752  function symbol() public view virtual override returns (string memory) {... */\n    tag_56:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2706:2719  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2738:2745  _symbol */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2731:2745  return _symbol */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4284:4437  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_61:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4378:4430  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_134\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4411:4419  operator */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4421:4429  approved */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4378:4396  _setApprovalForAll */\n      tag_136\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4378:4430  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_134:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4284:4437  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5368:5688  function safeTransferFrom(... */\n    tag_65:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5537:5578  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_138\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5570:5577  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5537:5555  _isApprovedOrOwner */\n      tag_111\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5537:5578  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_138:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5529:5632  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_114\n      jump\t// in\n    tag_140:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5642:5681  _safeTransfer(from, to, tokenId, _data) */\n      tag_142\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5656:5660  from */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5662:5664  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5666:5673  tokenId */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5675:5680  _data */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5642:5655  _safeTransfer */\n      tag_143\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5642:5681  _safeTransfer(from, to, tokenId, _data) */\n      jump\t// in\n    tag_142:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5368:5688  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2818:3147  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_68:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7225:7229  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7248:7255  _owners */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2891:2904  string memory */\n      0x60\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2916:2992  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7837:7839   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2916:2992  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7819:7840   */\n      mstore\n        /* \"#utility.yul\":7876:7878   */\n      0x2f\n        /* \"#utility.yul\":7856:7874   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7849:7879   */\n      mstore\n        /* \"#utility.yul\":7915:7949   */\n      0x4552433732314d657461646174613a2055524920717565727920666f72206e6f\n        /* \"#utility.yul\":7895:7913   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7888:7950   */\n      mstore\n      shl(0x89, 0x3732bc34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":7966:7984   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7959:8004   */\n      mstore\n        /* \"#utility.yul\":8021:8040   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2916:2992  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n      tag_91\n        /* \"#utility.yul\":7635:8046   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2916:2992  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n    tag_146:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3003:3024  string memory baseURI */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3027:3037  _baseURI() */\n      tag_149\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3465:3474  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3389:3481  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3027:3037  _baseURI() */\n    tag_149:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3003:3037  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3078:3079  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3060:3067  baseURI */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3054:3075  bytes(baseURI).length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3054:3079  bytes(baseURI).length > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3054:3140  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_151\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_152)\n    tag_151:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3106:3113  baseURI */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3115:3133  tokenId.toString() */\n      tag_153\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3115:3122  tokenId */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3115:3131  tokenId.toString */\n      tag_154\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3115:3133  tokenId.toString() */\n      jump\t// in\n    tag_153:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3089:3134  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_155\n      swap3\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3054:3140  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_152:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3047:3140  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2818:3147  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11169:11340  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_107:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11243:11267  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11243:11258  _tokenApprovals */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11243:11267  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11243:11272  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11243:11267  _tokenApprovals[tokenId] */\n      dup2\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11296:11319  ERC721.ownerOf(tokenId) */\n      tag_162\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11243:11267  _tokenApprovals[tokenId] */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11296:11310  ERC721.ownerOf */\n      tag_47\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11296:11319  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11287:11333  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11169:11340  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7443:7787  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_111:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7536:7540  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7248:7255  _owners */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7552:7625  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8728:8730   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7552:7625  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8710:8731   */\n      mstore\n        /* \"#utility.yul\":8767:8769   */\n      0x2c\n        /* \"#utility.yul\":8747:8765   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8740:8770   */\n      mstore\n        /* \"#utility.yul\":8806:8840   */\n      0x4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578\n        /* \"#utility.yul\":8786:8804   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8779:8841   */\n      mstore\n      shl(0xa1, 0x34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":8857:8875   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8850:8892   */\n      mstore\n        /* \"#utility.yul\":8909:8928   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7552:7625  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      tag_91\n        /* \"#utility.yul\":8526:8934   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7552:7625  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n    tag_165:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7635:7648  address owner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7651:7674  ERC721.ownerOf(tokenId) */\n      tag_168\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7666:7673  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7651:7665  ERC721.ownerOf */\n      tag_47\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7651:7674  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_168:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7635:7674  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7703:7708  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7692:7708  spender == owner */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7692:7699  spender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7692:7708  spender == owner */\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7692:7744  spender == owner || isApprovedForAll(owner, spender) */\n      dup1\n      tag_170\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      dup1\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4600:4604  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4623:4641  _operatorApprovals */\n      0x05\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4623:4658  _operatorApprovals[owner][operator] */\n      swap4\n      dup9\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7712:7744  isApprovedForAll(owner, spender) */\n    tag_170:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7692:7779  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n      dup1\n      tag_171\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7772:7779  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7748:7779  getApproved(tokenId) == spender */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7748:7768  getApproved(tokenId) */\n      tag_172\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7760:7767  tokenId */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7748:7759  getApproved */\n      tag_31\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7748:7768  getApproved(tokenId) */\n      jump\t// in\n    tag_172:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7748:7779  getApproved(tokenId) == spender */\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7692:7779  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n    tag_171:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7684:7780  return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender) */\n      swap5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7443:7787  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10453:11058  function _transfer(... */\n    tag_116:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10607:10611  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10580:10611  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10580:10603  ERC721.ownerOf(tokenId) */\n      tag_174\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10595:10602  tokenId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10580:10594  ERC721.ownerOf */\n      tag_47\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10580:10603  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_174:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10580:10611  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10572:10653  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9141:9143   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10572:10653  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9123:9144   */\n      mstore\n        /* \"#utility.yul\":9180:9182   */\n      0x25\n        /* \"#utility.yul\":9160:9178   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9153:9183   */\n      mstore\n        /* \"#utility.yul\":9219:9253   */\n      0x4552433732313a207472616e736665722066726f6d20696e636f727265637420\n        /* \"#utility.yul\":9199:9217   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9192:9254   */\n      mstore\n      shl(0xd9, 0x37bbb732b9)\n        /* \"#utility.yul\":9270:9288   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9263:9298   */\n      mstore\n        /* \"#utility.yul\":9315:9334   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10572:10653  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_91\n        /* \"#utility.yul\":8939:9340   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10572:10653  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n    tag_175:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10671:10687  to != address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10663:10728  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9547:9549   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10663:10728  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9529:9550   */\n      mstore\n        /* \"#utility.yul\":9586:9588   */\n      0x24\n        /* \"#utility.yul\":9566:9584   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9559:9589   */\n      mstore\n        /* \"#utility.yul\":9625:9659   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":9605:9623   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9598:9660   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":9676:9694   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9669:9703   */\n      mstore\n        /* \"#utility.yul\":9720:9739   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10663:10728  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_91\n        /* \"#utility.yul\":9345:9745   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10663:10728  require(to != address(0), \"ERC721: transfer to the zero address\") */\n    tag_178:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10840:10869  _approve(address(0), tokenId) */\n      tag_183\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10857:10858  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10861:10868  tokenId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10840:10848  _approve */\n      tag_107\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10840:10869  _approve(address(0), tokenId) */\n      jump\t// in\n    tag_183:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10880:10895  _balances[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10880:10889  _balances */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10880:10895  _balances[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10880:10900  _balances[from] -= 1 */\n      dup1\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10899:10900  1 */\n      0x01\n      swap3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10880:10895  _balances[from] */\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10880:10900  _balances[from] -= 1 */\n      tag_184\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10899:10900  1 */\n      dup5\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10880:10900  _balances[from] -= 1 */\n      tag_185\n      jump\t// in\n    tag_184:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10910:10923  _balances[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10910:10919  _balances */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10910:10923  _balances[to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10910:10928  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10927:10928  1 */\n      0x01\n      swap3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10910:10923  _balances[to] */\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10910:10928  _balances[to] += 1 */\n      tag_186\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10927:10928  1 */\n      dup5\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10910:10928  _balances[to] += 1 */\n      tag_187\n      jump\t// in\n    tag_186:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10938:10954  _owners[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10938:10945  _owners */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10938:10954  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10938:10959  _owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10975:11002  Transfer(from, to, tokenId) */\n      swap2\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10938:10954  _owners[tokenId] */\n      dup5\n      swap4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10975:11002  Transfer(from, to, tokenId) */\n      swap2\n      dup8\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3608:3939  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3538:3939  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11475:11782  function _setApprovalForAll(... */\n    tag_136:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11625:11633  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11616:11633  owner != operator */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11616:11621  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11616:11633  owner != operator */\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11608:11663  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10347:10349   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11608:11663  require(owner != operator, \"ERC721: approve to caller\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10329:10350   */\n      mstore\n        /* \"#utility.yul\":10386:10388   */\n      0x19\n        /* \"#utility.yul\":10366:10384   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10359:10389   */\n      mstore\n        /* \"#utility.yul\":10425:10452   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":10405:10423   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10398:10453   */\n      mstore\n        /* \"#utility.yul\":10470:10488   */\n      0x64\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11608:11663  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_91\n        /* \"#utility.yul\":10145:10494   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11608:11663  require(owner != operator, \"ERC721: approve to caller\") */\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11673:11698  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11673:11691  _operatorApprovals */\n      0x05\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11673:11698  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11673:11708  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11673:11719  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11734:11775  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap2\n      dup3\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11734:11775  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11734:11775  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":11475:11782  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6550:6857  function _safeTransfer(... */\n    tag_143:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6701:6729  _transfer(from, to, tokenId) */\n      tag_196\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6711:6715  from */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6717:6719  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6721:6728  tokenId */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6701:6710  _transfer */\n      tag_116\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6701:6729  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_196:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6747:6795  _checkOnERC721Received(from, to, tokenId, _data) */\n      tag_197\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6770:6774  from */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6776:6778  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6780:6787  tokenId */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6789:6794  _data */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6747:6769  _checkOnERC721Received */\n      tag_198\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6747:6795  _checkOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_197:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6739:6850  require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_201\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":328:1031  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_154:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":384:397  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":601:606  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":610:611  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":601:611  value == 0 */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":597:648  if (value == 0) {... */\n      tag_204\n      jumpi\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":627:637  return \"0\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x01\n      dup2\n      mstore\n      shl(0xfc, 0x03)\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":328:1031  function toString(uint256 value) internal pure returns (string memory) {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":597:648  if (value == 0) {... */\n    tag_204:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":672:677  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":657:669  uint256 temp */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n    tag_205:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":718:727  temp != 0 */\n      dup2\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n      tag_206\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":743:751  digits++ */\n      dup1\n      tag_207\n      dup2\n      tag_208\n      jump\t// in\n    tag_207:\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":765:775  temp /= 10 */\n      tag_209\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":773:775  10 */\n      0x0a\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":765:775  temp /= 10 */\n      dup4\n      tag_210\n      jump\t// in\n    tag_209:\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n      jump(tag_205)\n    tag_206:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":795:814  bytes memory buffer */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":827:833  digits */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":817:834  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_212\n      jumpi\n      tag_212\n      tag_213\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_214\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_214:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":795:834  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n    tag_215:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":851:861  value != 0 */\n      dup5\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n      tag_171\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":877:888  digits -= 1 */\n      tag_217\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":887:888  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":877:888  digits -= 1 */\n      dup4\n      tag_185\n      jump\t// in\n    tag_217:\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":945:955  value % 10 */\n      tag_218\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":953:955  10 */\n      0x0a\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":945:950  value */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":945:955  value % 10 */\n      tag_219\n      jump\t// in\n    tag_218:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":932:956  48 + uint256(value % 10) */\n      tag_220\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":932:934  48 */\n      0x30\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":932:956  48 + uint256(value % 10) */\n      tag_187\n      jump\t// in\n    tag_220:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":919:958  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":902:908  buffer */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":909:915  digits */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":902:916  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_222\n      jumpi\n      tag_222\n      tag_223\n      jump\t// in\n    tag_222:\n      0x20\n      add\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":902:958  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":972:983  value /= 10 */\n      tag_224\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":981:983  10 */\n      0x0a\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":972:983  value /= 10 */\n      dup7\n      tag_210\n      jump\t// in\n    tag_224:\n      swap5\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n      jump(tag_215)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12335:13113  function _checkOnERC721Received(... */\n    tag_198:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12485:12489  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12505:12518  to.isContract */\n      dup5\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12501:13107  if (to.isContract()) {... */\n      tag_230\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12540:12612  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12540:12576  IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12540:12612  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      tag_232\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12591:12595  from */\n      dup10\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12597:12604  tokenId */\n      dup9\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12606:12611  _data */\n      dup9\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12540:12612  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      0x04\n      add\n      tag_233\n      jump\t// in\n    tag_232:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_234\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_235\n      swap2\n      dup2\n      add\n      swap1\n      tag_236\n      jump\t// in\n    tag_235:\n      0x01\n    tag_234:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12536:13055  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n      tag_237\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_242\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_241)\n    tag_242:\n      0x60\n      swap2\n      pop\n    tag_241:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12779:12785  reason */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12779:12792  reason.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12796:12797  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12779:12797  reason.length == 0 */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12775:13041  if (reason.length == 0) {... */\n      tag_243\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12821:12881  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_201\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12775:13041  if (reason.length == 0) {... */\n    tag_243:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12993:12999  reason */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12987:13000  mload(reason) */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12978:12984  reason */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12974:12976  32 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12970:12985  add(32, reason) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12963:13001  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12536:13055  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n    tag_237:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12662:12713  retval == IERC721Receiver.onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12655:12713  return retval == IERC721Receiver.onERC721Received.selector */\n      jump(tag_171)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12501:13107  if (to.isContract()) {... */\n    tag_230:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":13092:13096  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":12335:13113  function _checkOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_249:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_257\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":68:139   */\n    tag_257:\n        /* \"#utility.yul\":14:145   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:395   */\n    tag_20:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_259:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_152\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_249\n      jump\t// in\n        /* \"#utility.yul\":592:850   */\n    tag_250:\n        /* \"#utility.yul\":664:665   */\n      0x00\n        /* \"#utility.yul\":674:787   */\n    tag_263:\n        /* \"#utility.yul\":688:694   */\n      dup4\n        /* \"#utility.yul\":685:686   */\n      dup2\n        /* \"#utility.yul\":682:695   */\n      lt\n        /* \"#utility.yul\":674:787   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":764:775   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":758:776   */\n      mload\n        /* \"#utility.yul\":745:756   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":738:777   */\n      mstore\n        /* \"#utility.yul\":710:712   */\n      0x20\n        /* \"#utility.yul\":703:713   */\n      add\n        /* \"#utility.yul\":674:787   */\n      jump(tag_263)\n    tag_265:\n        /* \"#utility.yul\":805:811   */\n      dup4\n        /* \"#utility.yul\":802:803   */\n      dup2\n        /* \"#utility.yul\":799:812   */\n      gt\n        /* \"#utility.yul\":796:844   */\n      iszero\n      tag_142\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":840:841   */\n      0x00\n        /* \"#utility.yul\":822:838   */\n      swap2\n      add\n        /* \"#utility.yul\":815:842   */\n      mstore\n        /* \"#utility.yul\":592:850   */\n      jump\t// out\n        /* \"#utility.yul\":855:1113   */\n    tag_251:\n        /* \"#utility.yul\":897:900   */\n      0x00\n        /* \"#utility.yul\":935:940   */\n      dup2\n        /* \"#utility.yul\":929:941   */\n      mload\n        /* \"#utility.yul\":962:968   */\n      dup1\n        /* \"#utility.yul\":957:960   */\n      dup5\n        /* \"#utility.yul\":950:969   */\n      mstore\n        /* \"#utility.yul\":978:1041   */\n      tag_268\n        /* \"#utility.yul\":1034:1040   */\n      dup2\n        /* \"#utility.yul\":1027:1031   */\n      0x20\n        /* \"#utility.yul\":1022:1025   */\n      dup7\n        /* \"#utility.yul\":1018:1032   */\n      add\n        /* \"#utility.yul\":1011:1015   */\n      0x20\n        /* \"#utility.yul\":1004:1009   */\n      dup7\n        /* \"#utility.yul\":1000:1016   */\n      add\n        /* \"#utility.yul\":978:1041   */\n      tag_250\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":1095:1097   */\n      0x1f\n        /* \"#utility.yul\":1074:1089   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1070:1099   */\n      and\n        /* \"#utility.yul\":1061:1100   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1102:1106   */\n      0x20\n        /* \"#utility.yul\":1057:1107   */\n      add\n      swap3\n        /* \"#utility.yul\":855:1113   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1118:1338   */\n    tag_27:\n        /* \"#utility.yul\":1267:1269   */\n      0x20\n        /* \"#utility.yul\":1256:1265   */\n      dup2\n        /* \"#utility.yul\":1249:1270   */\n      mstore\n        /* \"#utility.yul\":1230:1234   */\n      0x00\n        /* \"#utility.yul\":1287:1332   */\n      tag_152\n        /* \"#utility.yul\":1328:1330   */\n      0x20\n        /* \"#utility.yul\":1317:1326   */\n      dup4\n        /* \"#utility.yul\":1313:1331   */\n      add\n        /* \"#utility.yul\":1305:1311   */\n      dup5\n        /* \"#utility.yul\":1287:1332   */\n      tag_251\n      jump\t// in\n        /* \"#utility.yul\":1343:1523   */\n    tag_30:\n        /* \"#utility.yul\":1402:1408   */\n      0x00\n        /* \"#utility.yul\":1455:1457   */\n      0x20\n        /* \"#utility.yul\":1443:1452   */\n      dup3\n        /* \"#utility.yul\":1434:1441   */\n      dup5\n        /* \"#utility.yul\":1430:1453   */\n      sub\n        /* \"#utility.yul\":1426:1458   */\n      slt\n        /* \"#utility.yul\":1423:1475   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":1471:1472   */\n      0x00\n        /* \"#utility.yul\":1468:1469   */\n      dup1\n        /* \"#utility.yul\":1461:1473   */\n      revert\n        /* \"#utility.yul\":1423:1475   */\n    tag_272:\n      pop\n        /* \"#utility.yul\":1494:1517   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1343:1523   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1736:1909   */\n    tag_252:\n        /* \"#utility.yul\":1804:1824   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1853:1884   */\n      dup2\n      and\n        /* \"#utility.yul\":1843:1885   */\n      dup2\n      eq\n        /* \"#utility.yul\":1833:1903   */\n      tag_275\n      jumpi\n        /* \"#utility.yul\":1899:1900   */\n      0x00\n        /* \"#utility.yul\":1896:1897   */\n      dup1\n        /* \"#utility.yul\":1889:1901   */\n      revert\n        /* \"#utility.yul\":1833:1903   */\n    tag_275:\n        /* \"#utility.yul\":1736:1909   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1914:2168   */\n    tag_36:\n        /* \"#utility.yul\":1982:1988   */\n      0x00\n        /* \"#utility.yul\":1990:1996   */\n      dup1\n        /* \"#utility.yul\":2043:2045   */\n      0x40\n        /* \"#utility.yul\":2031:2040   */\n      dup4\n        /* \"#utility.yul\":2022:2029   */\n      dup6\n        /* \"#utility.yul\":2018:2041   */\n      sub\n        /* \"#utility.yul\":2014:2046   */\n      slt\n        /* \"#utility.yul\":2011:2063   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":2059:2060   */\n      0x00\n        /* \"#utility.yul\":2056:2057   */\n      dup1\n        /* \"#utility.yul\":2049:2061   */\n      revert\n        /* \"#utility.yul\":2011:2063   */\n    tag_277:\n        /* \"#utility.yul\":2082:2111   */\n      tag_278\n        /* \"#utility.yul\":2101:2110   */\n      dup4\n        /* \"#utility.yul\":2082:2111   */\n      tag_252\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":2072:2111   */\n      swap5\n        /* \"#utility.yul\":2158:2160   */\n      0x20\n        /* \"#utility.yul\":2143:2161   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2130:2162   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1914:2168   */\n      jump\t// out\n        /* \"#utility.yul\":2173:2501   */\n    tag_40:\n        /* \"#utility.yul\":2250:2256   */\n      0x00\n        /* \"#utility.yul\":2258:2264   */\n      dup1\n        /* \"#utility.yul\":2266:2272   */\n      0x00\n        /* \"#utility.yul\":2319:2321   */\n      0x60\n        /* \"#utility.yul\":2307:2316   */\n      dup5\n        /* \"#utility.yul\":2298:2305   */\n      dup7\n        /* \"#utility.yul\":2294:2317   */\n      sub\n        /* \"#utility.yul\":2290:2322   */\n      slt\n        /* \"#utility.yul\":2287:2339   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":2335:2336   */\n      0x00\n        /* \"#utility.yul\":2332:2333   */\n      dup1\n        /* \"#utility.yul\":2325:2337   */\n      revert\n        /* \"#utility.yul\":2287:2339   */\n    tag_280:\n        /* \"#utility.yul\":2358:2387   */\n      tag_281\n        /* \"#utility.yul\":2377:2386   */\n      dup5\n        /* \"#utility.yul\":2358:2387   */\n      tag_252\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":2348:2387   */\n      swap3\n      pop\n        /* \"#utility.yul\":2406:2444   */\n      tag_282\n        /* \"#utility.yul\":2440:2442   */\n      0x20\n        /* \"#utility.yul\":2429:2438   */\n      dup6\n        /* \"#utility.yul\":2425:2443   */\n      add\n        /* \"#utility.yul\":2406:2444   */\n      tag_252\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":2396:2444   */\n      swap2\n      pop\n        /* \"#utility.yul\":2491:2493   */\n      0x40\n        /* \"#utility.yul\":2480:2489   */\n      dup5\n        /* \"#utility.yul\":2476:2494   */\n      add\n        /* \"#utility.yul\":2463:2495   */\n      calldataload\n        /* \"#utility.yul\":2453:2495   */\n      swap1\n      pop\n        /* \"#utility.yul\":2173:2501   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2506:2692   */\n    tag_51:\n        /* \"#utility.yul\":2565:2571   */\n      0x00\n        /* \"#utility.yul\":2618:2620   */\n      0x20\n        /* \"#utility.yul\":2606:2615   */\n      dup3\n        /* \"#utility.yul\":2597:2604   */\n      dup5\n        /* \"#utility.yul\":2593:2616   */\n      sub\n        /* \"#utility.yul\":2589:2621   */\n      slt\n        /* \"#utility.yul\":2586:2638   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":2634:2635   */\n      0x00\n        /* \"#utility.yul\":2631:2632   */\n      dup1\n        /* \"#utility.yul\":2624:2636   */\n      revert\n        /* \"#utility.yul\":2586:2638   */\n    tag_284:\n        /* \"#utility.yul\":2657:2686   */\n      tag_152\n        /* \"#utility.yul\":2676:2685   */\n      dup3\n        /* \"#utility.yul\":2657:2686   */\n      tag_252\n      jump\t// in\n        /* \"#utility.yul\":2879:3226   */\n    tag_60:\n        /* \"#utility.yul\":2944:2950   */\n      0x00\n        /* \"#utility.yul\":2952:2958   */\n      dup1\n        /* \"#utility.yul\":3005:3007   */\n      0x40\n        /* \"#utility.yul\":2993:3002   */\n      dup4\n        /* \"#utility.yul\":2984:2991   */\n      dup6\n        /* \"#utility.yul\":2980:3003   */\n      sub\n        /* \"#utility.yul\":2976:3008   */\n      slt\n        /* \"#utility.yul\":2973:3025   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":3021:3022   */\n      0x00\n        /* \"#utility.yul\":3018:3019   */\n      dup1\n        /* \"#utility.yul\":3011:3023   */\n      revert\n        /* \"#utility.yul\":2973:3025   */\n    tag_288:\n        /* \"#utility.yul\":3044:3073   */\n      tag_289\n        /* \"#utility.yul\":3063:3072   */\n      dup4\n        /* \"#utility.yul\":3044:3073   */\n      tag_252\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":3034:3073   */\n      swap2\n      pop\n        /* \"#utility.yul\":3123:3125   */\n      0x20\n        /* \"#utility.yul\":3112:3121   */\n      dup4\n        /* \"#utility.yul\":3108:3126   */\n      add\n        /* \"#utility.yul\":3095:3127   */\n      calldataload\n        /* \"#utility.yul\":3170:3175   */\n      dup1\n        /* \"#utility.yul\":3163:3176   */\n      iszero\n        /* \"#utility.yul\":3156:3177   */\n      iszero\n        /* \"#utility.yul\":3149:3154   */\n      dup2\n        /* \"#utility.yul\":3146:3178   */\n      eq\n        /* \"#utility.yul\":3136:3196   */\n      tag_290\n      jumpi\n        /* \"#utility.yul\":3192:3193   */\n      0x00\n        /* \"#utility.yul\":3189:3190   */\n      dup1\n        /* \"#utility.yul\":3182:3194   */\n      revert\n        /* \"#utility.yul\":3136:3196   */\n    tag_290:\n        /* \"#utility.yul\":3215:3220   */\n      dup1\n        /* \"#utility.yul\":3205:3220   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2879:3226   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3231:3358   */\n    tag_213:\n        /* \"#utility.yul\":3292:3302   */\n      0x4e487b71\n        /* \"#utility.yul\":3287:3290   */\n      0xe0\n        /* \"#utility.yul\":3283:3303   */\n      shl\n        /* \"#utility.yul\":3280:3281   */\n      0x00\n        /* \"#utility.yul\":3273:3304   */\n      mstore\n        /* \"#utility.yul\":3323:3327   */\n      0x41\n        /* \"#utility.yul\":3320:3321   */\n      0x04\n        /* \"#utility.yul\":3313:3328   */\n      mstore\n        /* \"#utility.yul\":3347:3351   */\n      0x24\n        /* \"#utility.yul\":3344:3345   */\n      0x00\n        /* \"#utility.yul\":3337:3352   */\n      revert\n        /* \"#utility.yul\":3363:4501   */\n    tag_64:\n        /* \"#utility.yul\":3458:3464   */\n      0x00\n        /* \"#utility.yul\":3466:3472   */\n      dup1\n        /* \"#utility.yul\":3474:3480   */\n      0x00\n        /* \"#utility.yul\":3482:3488   */\n      dup1\n        /* \"#utility.yul\":3535:3538   */\n      0x80\n        /* \"#utility.yul\":3523:3532   */\n      dup6\n        /* \"#utility.yul\":3514:3521   */\n      dup8\n        /* \"#utility.yul\":3510:3533   */\n      sub\n        /* \"#utility.yul\":3506:3539   */\n      slt\n        /* \"#utility.yul\":3503:3556   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":3552:3553   */\n      0x00\n        /* \"#utility.yul\":3549:3550   */\n      dup1\n        /* \"#utility.yul\":3542:3554   */\n      revert\n        /* \"#utility.yul\":3503:3556   */\n    tag_293:\n        /* \"#utility.yul\":3575:3604   */\n      tag_294\n        /* \"#utility.yul\":3594:3603   */\n      dup6\n        /* \"#utility.yul\":3575:3604   */\n      tag_252\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":3565:3604   */\n      swap4\n      pop\n        /* \"#utility.yul\":3623:3661   */\n      tag_295\n        /* \"#utility.yul\":3657:3659   */\n      0x20\n        /* \"#utility.yul\":3646:3655   */\n      dup7\n        /* \"#utility.yul\":3642:3660   */\n      add\n        /* \"#utility.yul\":3623:3661   */\n      tag_252\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":3613:3661   */\n      swap3\n      pop\n        /* \"#utility.yul\":3708:3710   */\n      0x40\n        /* \"#utility.yul\":3697:3706   */\n      dup6\n        /* \"#utility.yul\":3693:3711   */\n      add\n        /* \"#utility.yul\":3680:3712   */\n      calldataload\n        /* \"#utility.yul\":3670:3712   */\n      swap2\n      pop\n        /* \"#utility.yul\":3763:3765   */\n      0x60\n        /* \"#utility.yul\":3752:3761   */\n      dup6\n        /* \"#utility.yul\":3748:3766   */\n      add\n        /* \"#utility.yul\":3735:3767   */\n      calldataload\n        /* \"#utility.yul\":3786:3804   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3827:3829   */\n      dup1\n        /* \"#utility.yul\":3819:3825   */\n      dup3\n        /* \"#utility.yul\":3816:3830   */\n      gt\n        /* \"#utility.yul\":3813:3847   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":3843:3844   */\n      0x00\n        /* \"#utility.yul\":3840:3841   */\n      dup1\n        /* \"#utility.yul\":3833:3845   */\n      revert\n        /* \"#utility.yul\":3813:3847   */\n    tag_296:\n        /* \"#utility.yul\":3881:3887   */\n      dup2\n        /* \"#utility.yul\":3870:3879   */\n      dup8\n        /* \"#utility.yul\":3866:3888   */\n      add\n        /* \"#utility.yul\":3856:3888   */\n      swap2\n      pop\n        /* \"#utility.yul\":3926:3933   */\n      dup8\n        /* \"#utility.yul\":3919:3923   */\n      0x1f\n        /* \"#utility.yul\":3915:3917   */\n      dup4\n        /* \"#utility.yul\":3911:3924   */\n      add\n        /* \"#utility.yul\":3907:3934   */\n      slt\n        /* \"#utility.yul\":3897:3952   */\n      tag_297\n      jumpi\n        /* \"#utility.yul\":3948:3949   */\n      0x00\n        /* \"#utility.yul\":3945:3946   */\n      dup1\n        /* \"#utility.yul\":3938:3950   */\n      revert\n        /* \"#utility.yul\":3897:3952   */\n    tag_297:\n        /* \"#utility.yul\":3984:3986   */\n      dup2\n        /* \"#utility.yul\":3971:3987   */\n      calldataload\n        /* \"#utility.yul\":4006:4008   */\n      dup2\n        /* \"#utility.yul\":4002:4004   */\n      dup2\n        /* \"#utility.yul\":3999:4009   */\n      gt\n        /* \"#utility.yul\":3996:4032   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":4012:4030   */\n      tag_299\n      tag_213\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":4087:4089   */\n      0x40\n        /* \"#utility.yul\":4081:4090   */\n      mload\n        /* \"#utility.yul\":4055:4057   */\n      0x1f\n        /* \"#utility.yul\":4141:4154   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4137:4159   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4161:4163   */\n      0x3f\n        /* \"#utility.yul\":4133:4164   */\n      add\n        /* \"#utility.yul\":4129:4169   */\n      and\n        /* \"#utility.yul\":4117:4170   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4185:4203   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":4205:4227   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":4182:4228   */\n      or\n        /* \"#utility.yul\":4179:4251   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":4231:4249   */\n      tag_301\n      tag_213\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":4271:4281   */\n      dup2\n        /* \"#utility.yul\":4267:4269   */\n      0x40\n        /* \"#utility.yul\":4260:4282   */\n      mstore\n        /* \"#utility.yul\":4306:4308   */\n      dup3\n        /* \"#utility.yul\":4298:4304   */\n      dup2\n        /* \"#utility.yul\":4291:4309   */\n      mstore\n        /* \"#utility.yul\":4346:4353   */\n      dup11\n        /* \"#utility.yul\":4341:4343   */\n      0x20\n        /* \"#utility.yul\":4336:4338   */\n      dup5\n        /* \"#utility.yul\":4332:4334   */\n      dup8\n        /* \"#utility.yul\":4328:4339   */\n      add\n        /* \"#utility.yul\":4324:4344   */\n      add\n        /* \"#utility.yul\":4321:4354   */\n      gt\n        /* \"#utility.yul\":4318:4371   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":4367:4368   */\n      0x00\n        /* \"#utility.yul\":4364:4365   */\n      dup1\n        /* \"#utility.yul\":4357:4369   */\n      revert\n        /* \"#utility.yul\":4318:4371   */\n    tag_302:\n        /* \"#utility.yul\":4423:4425   */\n      dup3\n        /* \"#utility.yul\":4418:4420   */\n      0x20\n        /* \"#utility.yul\":4414:4416   */\n      dup7\n        /* \"#utility.yul\":4410:4421   */\n      add\n        /* \"#utility.yul\":4405:4407   */\n      0x20\n        /* \"#utility.yul\":4397:4403   */\n      dup4\n        /* \"#utility.yul\":4393:4408   */\n      add\n        /* \"#utility.yul\":4380:4426   */\n      calldatacopy\n        /* \"#utility.yul\":4468:4469   */\n      0x00\n        /* \"#utility.yul\":4463:4465   */\n      0x20\n        /* \"#utility.yul\":4458:4460   */\n      dup5\n        /* \"#utility.yul\":4450:4456   */\n      dup4\n        /* \"#utility.yul\":4446:4461   */\n      add\n        /* \"#utility.yul\":4442:4466   */\n      add\n        /* \"#utility.yul\":4435:4470   */\n      mstore\n        /* \"#utility.yul\":4489:4495   */\n      dup1\n        /* \"#utility.yul\":4479:4495   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3363:4501   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4506:4766   */\n    tag_72:\n        /* \"#utility.yul\":4574:4580   */\n      0x00\n        /* \"#utility.yul\":4582:4588   */\n      dup1\n        /* \"#utility.yul\":4635:4637   */\n      0x40\n        /* \"#utility.yul\":4623:4632   */\n      dup4\n        /* \"#utility.yul\":4614:4621   */\n      dup6\n        /* \"#utility.yul\":4610:4633   */\n      sub\n        /* \"#utility.yul\":4606:4638   */\n      slt\n        /* \"#utility.yul\":4603:4655   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":4651:4652   */\n      0x00\n        /* \"#utility.yul\":4648:4649   */\n      dup1\n        /* \"#utility.yul\":4641:4653   */\n      revert\n        /* \"#utility.yul\":4603:4655   */\n    tag_304:\n        /* \"#utility.yul\":4674:4703   */\n      tag_305\n        /* \"#utility.yul\":4693:4702   */\n      dup4\n        /* \"#utility.yul\":4674:4703   */\n      tag_252\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":4664:4703   */\n      swap2\n      pop\n        /* \"#utility.yul\":4722:4760   */\n      tag_306\n        /* \"#utility.yul\":4756:4758   */\n      0x20\n        /* \"#utility.yul\":4745:4754   */\n      dup5\n        /* \"#utility.yul\":4741:4759   */\n      add\n        /* \"#utility.yul\":4722:4760   */\n      tag_252\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":4712:4760   */\n      swap1\n      pop\n        /* \"#utility.yul\":4506:4766   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4771:5151   */\n    tag_82:\n        /* \"#utility.yul\":4850:4851   */\n      0x01\n        /* \"#utility.yul\":4846:4858   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4893:4905   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4914:4975   */\n      tag_308\n      jumpi\n        /* \"#utility.yul\":4968:4972   */\n      0x7f\n        /* \"#utility.yul\":4960:4966   */\n      dup3\n        /* \"#utility.yul\":4956:4973   */\n      and\n        /* \"#utility.yul\":4946:4973   */\n      swap2\n      pop\n        /* \"#utility.yul\":4914:4975   */\n    tag_308:\n        /* \"#utility.yul\":5021:5023   */\n      0x20\n        /* \"#utility.yul\":5013:5019   */\n      dup3\n        /* \"#utility.yul\":5010:5024   */\n      lt\n        /* \"#utility.yul\":4990:5008   */\n      dup2\n        /* \"#utility.yul\":4987:5025   */\n      sub\n        /* \"#utility.yul\":4984:5145   */\n      tag_309\n      jumpi\n        /* \"#utility.yul\":5067:5077   */\n      0x4e487b71\n        /* \"#utility.yul\":5062:5065   */\n      0xe0\n        /* \"#utility.yul\":5058:5078   */\n      shl\n        /* \"#utility.yul\":5055:5056   */\n      0x00\n        /* \"#utility.yul\":5048:5079   */\n      mstore\n        /* \"#utility.yul\":5102:5106   */\n      0x22\n        /* \"#utility.yul\":5099:5100   */\n      0x04\n        /* \"#utility.yul\":5092:5107   */\n      mstore\n        /* \"#utility.yul\":5130:5134   */\n      0x24\n        /* \"#utility.yul\":5127:5128   */\n      0x00\n        /* \"#utility.yul\":5120:5135   */\n      revert\n        /* \"#utility.yul\":4984:5145   */\n    tag_309:\n      pop\n        /* \"#utility.yul\":4771:5151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6396:6809   */\n    tag_114:\n        /* \"#utility.yul\":6598:6600   */\n      0x20\n        /* \"#utility.yul\":6580:6601   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6637:6639   */\n      0x31\n        /* \"#utility.yul\":6617:6635   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6610:6640   */\n      mstore\n        /* \"#utility.yul\":6676:6710   */\n      0x4552433732313a207472616e736665722063616c6c6572206973206e6f74206f\n        /* \"#utility.yul\":6671:6673   */\n      0x40\n        /* \"#utility.yul\":6656:6674   */\n      dup3\n      add\n        /* \"#utility.yul\":6649:6711   */\n      mstore\n      shl(0x7a, 0x1ddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":6742:6744   */\n      0x60\n        /* \"#utility.yul\":6727:6745   */\n      dup3\n      add\n        /* \"#utility.yul\":6720:6767   */\n      mstore\n        /* \"#utility.yul\":6799:6802   */\n      0x80\n        /* \"#utility.yul\":6784:6803   */\n      add\n      swap1\n        /* \"#utility.yul\":6396:6809   */\n      jump\t// out\n        /* \"#utility.yul\":8051:8521   */\n    tag_156:\n        /* \"#utility.yul\":8230:8233   */\n      0x00\n        /* \"#utility.yul\":8268:8274   */\n      dup4\n        /* \"#utility.yul\":8262:8275   */\n      mload\n        /* \"#utility.yul\":8284:8337   */\n      tag_318\n        /* \"#utility.yul\":8330:8336   */\n      dup2\n        /* \"#utility.yul\":8325:8328   */\n      dup5\n        /* \"#utility.yul\":8318:8322   */\n      0x20\n        /* \"#utility.yul\":8310:8316   */\n      dup9\n        /* \"#utility.yul\":8306:8323   */\n      add\n        /* \"#utility.yul\":8284:8337   */\n      tag_250\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":8400:8413   */\n      dup4\n      mload\n        /* \"#utility.yul\":8359:8375   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":8422:8479   */\n      tag_319\n        /* \"#utility.yul\":8400:8413   */\n      dup2\n        /* \"#utility.yul\":8359:8375   */\n      dup4\n        /* \"#utility.yul\":8456:8460   */\n      0x20\n        /* \"#utility.yul\":8444:8461   */\n      dup9\n      add\n        /* \"#utility.yul\":8422:8479   */\n      tag_250\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":8495:8515   */\n      add\n      swap5\n        /* \"#utility.yul\":8051:8521   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9750:9877   */\n    tag_253:\n        /* \"#utility.yul\":9811:9821   */\n      0x4e487b71\n        /* \"#utility.yul\":9806:9809   */\n      0xe0\n        /* \"#utility.yul\":9802:9822   */\n      shl\n        /* \"#utility.yul\":9799:9800   */\n      0x00\n        /* \"#utility.yul\":9792:9823   */\n      mstore\n        /* \"#utility.yul\":9842:9846   */\n      0x11\n        /* \"#utility.yul\":9839:9840   */\n      0x04\n        /* \"#utility.yul\":9832:9847   */\n      mstore\n        /* \"#utility.yul\":9866:9870   */\n      0x24\n        /* \"#utility.yul\":9863:9864   */\n      0x00\n        /* \"#utility.yul\":9856:9871   */\n      revert\n        /* \"#utility.yul\":9882:10007   */\n    tag_185:\n        /* \"#utility.yul\":9922:9926   */\n      0x00\n        /* \"#utility.yul\":9950:9951   */\n      dup3\n        /* \"#utility.yul\":9947:9948   */\n      dup3\n        /* \"#utility.yul\":9944:9952   */\n      lt\n        /* \"#utility.yul\":9941:9975   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":9955:9973   */\n      tag_326\n      tag_253\n      jump\t// in\n    tag_326:\n      pop\n        /* \"#utility.yul\":9992:10001   */\n      sub\n      swap1\n        /* \"#utility.yul\":9882:10007   */\n      jump\t// out\n        /* \"#utility.yul\":10012:10140   */\n    tag_187:\n        /* \"#utility.yul\":10052:10055   */\n      0x00\n        /* \"#utility.yul\":10083:10084   */\n      dup3\n        /* \"#utility.yul\":10079:10085   */\n      not\n        /* \"#utility.yul\":10076:10077   */\n      dup3\n        /* \"#utility.yul\":10073:10086   */\n      gt\n        /* \"#utility.yul\":10070:10109   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":10089:10107   */\n      tag_329\n      tag_253\n      jump\t// in\n    tag_329:\n      pop\n        /* \"#utility.yul\":10125:10134   */\n      add\n      swap1\n        /* \"#utility.yul\":10012:10140   */\n      jump\t// out\n        /* \"#utility.yul\":10499:10913   */\n    tag_201:\n        /* \"#utility.yul\":10701:10703   */\n      0x20\n        /* \"#utility.yul\":10683:10704   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10740:10742   */\n      0x32\n        /* \"#utility.yul\":10720:10738   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10713:10743   */\n      mstore\n        /* \"#utility.yul\":10779:10813   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":10774:10776   */\n      0x40\n        /* \"#utility.yul\":10759:10777   */\n      dup3\n      add\n        /* \"#utility.yul\":10752:10814   */\n      mstore\n      shl(0x71, 0x31b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":10845:10847   */\n      0x60\n        /* \"#utility.yul\":10830:10848   */\n      dup3\n      add\n        /* \"#utility.yul\":10823:10871   */\n      mstore\n        /* \"#utility.yul\":10903:10906   */\n      0x80\n        /* \"#utility.yul\":10888:10907   */\n      add\n      swap1\n        /* \"#utility.yul\":10499:10913   */\n      jump\t// out\n        /* \"#utility.yul\":10918:11053   */\n    tag_208:\n        /* \"#utility.yul\":10957:10960   */\n      0x00\n        /* \"#utility.yul\":10978:10995   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":10975:11018   */\n      tag_334\n      jumpi\n        /* \"#utility.yul\":10998:11016   */\n      tag_334\n      tag_253\n      jump\t// in\n    tag_334:\n      pop\n        /* \"#utility.yul\":11045:11046   */\n      0x01\n        /* \"#utility.yul\":11034:11047   */\n      add\n      swap1\n        /* \"#utility.yul\":10918:11053   */\n      jump\t// out\n        /* \"#utility.yul\":11058:11185   */\n    tag_254:\n        /* \"#utility.yul\":11119:11129   */\n      0x4e487b71\n        /* \"#utility.yul\":11114:11117   */\n      0xe0\n        /* \"#utility.yul\":11110:11130   */\n      shl\n        /* \"#utility.yul\":11107:11108   */\n      0x00\n        /* \"#utility.yul\":11100:11131   */\n      mstore\n        /* \"#utility.yul\":11150:11154   */\n      0x12\n        /* \"#utility.yul\":11147:11148   */\n      0x04\n        /* \"#utility.yul\":11140:11155   */\n      mstore\n        /* \"#utility.yul\":11174:11178   */\n      0x24\n        /* \"#utility.yul\":11171:11172   */\n      0x00\n        /* \"#utility.yul\":11164:11179   */\n      revert\n        /* \"#utility.yul\":11190:11310   */\n    tag_210:\n        /* \"#utility.yul\":11230:11231   */\n      0x00\n        /* \"#utility.yul\":11256:11257   */\n      dup3\n        /* \"#utility.yul\":11246:11281   */\n      tag_338\n      jumpi\n        /* \"#utility.yul\":11261:11279   */\n      tag_338\n      tag_254\n      jump\t// in\n    tag_338:\n      pop\n        /* \"#utility.yul\":11295:11304   */\n      div\n      swap1\n        /* \"#utility.yul\":11190:11310   */\n      jump\t// out\n        /* \"#utility.yul\":11315:11427   */\n    tag_219:\n        /* \"#utility.yul\":11347:11348   */\n      0x00\n        /* \"#utility.yul\":11373:11374   */\n      dup3\n        /* \"#utility.yul\":11363:11398   */\n      tag_341\n      jumpi\n        /* \"#utility.yul\":11378:11396   */\n      tag_341\n      tag_254\n      jump\t// in\n    tag_341:\n      pop\n        /* \"#utility.yul\":11412:11421   */\n      mod\n      swap1\n        /* \"#utility.yul\":11315:11427   */\n      jump\t// out\n        /* \"#utility.yul\":11432:11559   */\n    tag_223:\n        /* \"#utility.yul\":11493:11503   */\n      0x4e487b71\n        /* \"#utility.yul\":11488:11491   */\n      0xe0\n        /* \"#utility.yul\":11484:11504   */\n      shl\n        /* \"#utility.yul\":11481:11482   */\n      0x00\n        /* \"#utility.yul\":11474:11505   */\n      mstore\n        /* \"#utility.yul\":11524:11528   */\n      0x32\n        /* \"#utility.yul\":11521:11522   */\n      0x04\n        /* \"#utility.yul\":11514:11529   */\n      mstore\n        /* \"#utility.yul\":11548:11552   */\n      0x24\n        /* \"#utility.yul\":11545:11546   */\n      0x00\n        /* \"#utility.yul\":11538:11553   */\n      revert\n        /* \"#utility.yul\":11564:12053   */\n    tag_233:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11833:11848   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":11815:11849   */\n      dup3\n      mstore\n        /* \"#utility.yul\":11885:11900   */\n      dup5\n      and\n        /* \"#utility.yul\":11880:11882   */\n      0x20\n        /* \"#utility.yul\":11865:11883   */\n      dup3\n      add\n        /* \"#utility.yul\":11858:11901   */\n      mstore\n        /* \"#utility.yul\":11932:11934   */\n      0x40\n        /* \"#utility.yul\":11917:11935   */\n      dup2\n      add\n        /* \"#utility.yul\":11910:11944   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":11980:11983   */\n      0x80\n        /* \"#utility.yul\":11975:11977   */\n      0x60\n        /* \"#utility.yul\":11960:11978   */\n      dup3\n      add\n        /* \"#utility.yul\":11953:11984   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11758:11762   */\n      0x00\n      swap1\n        /* \"#utility.yul\":12001:12047   */\n      tag_344\n      swap1\n        /* \"#utility.yul\":12027:12046   */\n      dup4\n      add\n        /* \"#utility.yul\":12019:12025   */\n      dup5\n        /* \"#utility.yul\":12001:12047   */\n      tag_251\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":11993:12047   */\n      swap7\n        /* \"#utility.yul\":11564:12053   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12058:12307   */\n    tag_236:\n        /* \"#utility.yul\":12127:12133   */\n      0x00\n        /* \"#utility.yul\":12180:12182   */\n      0x20\n        /* \"#utility.yul\":12168:12177   */\n      dup3\n        /* \"#utility.yul\":12159:12166   */\n      dup5\n        /* \"#utility.yul\":12155:12178   */\n      sub\n        /* \"#utility.yul\":12151:12183   */\n      slt\n        /* \"#utility.yul\":12148:12200   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":12196:12197   */\n      0x00\n        /* \"#utility.yul\":12193:12194   */\n      dup1\n        /* \"#utility.yul\":12186:12198   */\n      revert\n        /* \"#utility.yul\":12148:12200   */\n    tag_346:\n        /* \"#utility.yul\":12228:12237   */\n      dup2\n        /* \"#utility.yul\":12222:12238   */\n      mload\n        /* \"#utility.yul\":12247:12277   */\n      tag_152\n        /* \"#utility.yul\":12271:12276   */\n      dup2\n        /* \"#utility.yul\":12247:12277   */\n      tag_249\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220141897d05b6183e2287bee1b26ac89e81b55bb1774ec3fadeaddde1981f70b7664736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_506": {
									"entryPoint": null,
									"id": 506,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:15",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:15",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:821:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:15"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:15"
															},
															"nodeType": "YulIf",
															"src": "220:55:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:15",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:15"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:15"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:15"
															},
															"nodeType": "YulIf",
															"src": "353:36:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:15"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:15"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:15"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:15",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:15"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:15"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:15",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:15"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:15"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:15"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:15"
															},
															"nodeType": "YulIf",
															"src": "536:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:15",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:15"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:15"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:15"
															},
															"nodeType": "YulIf",
															"src": "698:53:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:15"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:15"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:15"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:15"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:15"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:15"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:15"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:15"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:15"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:15"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:15"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:15",
																"statements": []
															},
															"src": "779:133:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "942:59:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "971:6:15"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "979:2:15"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "967:3:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "967:15:15"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "984:2:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "963:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "963:24:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "989:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "956:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:35:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "956:35:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "927:1:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "930:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "924:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "924:9:15"
															},
															"nodeType": "YulIf",
															"src": "921:80:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1010:15:15",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1019:6:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1010:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:15",
														"type": ""
													}
												],
												"src": "146:885:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1154:444:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1200:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1209:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1212:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1202:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1202:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1202:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1175:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1184:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1171:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1171:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1196:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1167:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1167:32:15"
															},
															"nodeType": "YulIf",
															"src": "1164:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1225:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1245:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1239:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:16:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1229:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1264:28:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1282:2:15",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1286:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1278:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1278:10:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1290:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1274:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:18:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1268:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1319:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1328:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1331:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1321:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1321:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1321:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1315:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1304:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1304:14:15"
															},
															"nodeType": "YulIf",
															"src": "1301:34:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1344:71:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1387:9:15"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1398:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1383:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1383:22:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1407:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1354:28:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:61:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1344:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1424:41:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1450:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1461:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1446:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1446:18:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1440:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:25:15"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1428:8:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1494:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1503:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1506:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1496:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1496:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1496:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1480:8:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1490:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1477:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1477:16:15"
															},
															"nodeType": "YulIf",
															"src": "1474:36:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1519:73:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1562:9:15"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1573:8:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1558:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1558:24:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1584:7:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1529:28:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:63:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1519:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1112:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1123:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1135:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1143:6:15",
														"type": ""
													}
												],
												"src": "1036:562:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1658:325:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1668:22:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1682:1:15",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1685:4:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1678:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1699:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1729:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1735:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1725:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1725:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1703:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1776:31:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1778:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1792:6:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1800:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1788:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1788:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1778:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1756:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1749:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1749:26:15"
															},
															"nodeType": "YulIf",
															"src": "1746:61:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:111:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1887:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1894:3:15",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1899:10:15",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1890:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1890:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1880:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1880:31:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1880:31:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1931:1:15",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1934:4:15",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1924:15:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1924:15:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1962:4:15",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1952:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1952:15:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1952:15:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1822:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1845:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1853:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1842:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1842:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1819:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1819:38:15"
															},
															"nodeType": "YulIf",
															"src": "1816:161:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1638:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1647:6:15",
														"type": ""
													}
												],
												"src": "1603:380:15"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620014de380380620014de8339810160408190526200003491620001db565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b50505062000281565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b6020821081036200027b57634e487b7160e01b600052602260045260246000fd5b50919050565b61124d80620002916000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610d60565b610228565b60405190151581526020015b60405180910390f35b61010461027a565b6040516100f39190610dd5565b61012461011f366004610de8565b61030c565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610e1d565b6103a6565b005b61014f61015f366004610e47565b6104bb565b61014f610172366004610e47565b6104ec565b610124610185366004610de8565b610507565b61019d610198366004610e83565b61057e565b6040519081526020016100f3565b610104610605565b61014f6101c1366004610e9e565b610614565b61014f6101d4366004610ef0565b610623565b6101046101e7366004610de8565b61065b565b6100e76101fa366004610fcc565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061025957506001600160e01b03198216635b5e139f60e01b145b8061027457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461028990610fff565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590610fff565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661038a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103b182610507565b9050806001600160a01b0316836001600160a01b03160361041e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610381565b336001600160a01b038216148061043a575061043a81336101fa565b6104ac5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610381565b6104b68383610743565b505050565b6104c533826107b1565b6104e15760405162461bcd60e51b815260040161038190611039565b6104b68383836108a8565b6104b683838360405180602001604052806000815250610623565b6000818152600260205260408120546001600160a01b0316806102745760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610381565b60006001600160a01b0382166105e95760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610381565b506001600160a01b031660009081526003602052604090205490565b60606001805461028990610fff565b61061f338383610a44565b5050565b61062d33836107b1565b6106495760405162461bcd60e51b815260040161038190611039565b61065584848484610b12565b50505050565b6000818152600260205260409020546060906001600160a01b03166106da5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610381565b60006106f160408051602081019091526000815290565b90506000815111610711576040518060200160405280600081525061073c565b8061071b84610b45565b60405160200161072c92919061108a565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061077882610507565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b031661082a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610381565b600061083583610507565b9050806001600160a01b0316846001600160a01b0316148061087c57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806108a05750836001600160a01b03166108958461030c565b6001600160a01b0316145b949350505050565b826001600160a01b03166108bb82610507565b6001600160a01b03161461091f5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610381565b6001600160a01b0382166109815760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610381565b61098c600082610743565b6001600160a01b03831660009081526003602052604081208054600192906109b59084906110cf565b90915550506001600160a01b03821660009081526003602052604081208054600192906109e39084906110e6565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610aa55760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610381565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610b1d8484846108a8565b610b2984848484610c46565b6106555760405162461bcd60e51b8152600401610381906110fe565b606081600003610b6c5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b965780610b8081611150565b9150610b8f9050600a8361117f565b9150610b70565b60008167ffffffffffffffff811115610bb157610bb1610eda565b6040519080825280601f01601f191660200182016040528015610bdb576020820181803683370190505b5090505b84156108a057610bf06001836110cf565b9150610bfd600a86611193565b610c089060306110e6565b60f81b818381518110610c1d57610c1d6111a7565b60200101906001600160f81b031916908160001a905350610c3f600a8661117f565b9450610bdf565b60006001600160a01b0384163b15610d3c57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c8a9033908990889088906004016111bd565b6020604051808303816000875af1925050508015610cc5575060408051601f3d908101601f19168201909252610cc2918101906111fa565b60015b610d22573d808015610cf3576040519150601f19603f3d011682016040523d82523d6000602084013e610cf8565b606091505b508051600003610d1a5760405162461bcd60e51b8152600401610381906110fe565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108a0565b506001949350505050565b6001600160e01b031981168114610d5d57600080fd5b50565b600060208284031215610d7257600080fd5b813561073c81610d47565b60005b83811015610d98578181015183820152602001610d80565b838111156106555750506000910152565b60008151808452610dc1816020860160208601610d7d565b601f01601f19169290920160200192915050565b60208152600061073c6020830184610da9565b600060208284031215610dfa57600080fd5b5035919050565b80356001600160a01b0381168114610e1857600080fd5b919050565b60008060408385031215610e3057600080fd5b610e3983610e01565b946020939093013593505050565b600080600060608486031215610e5c57600080fd5b610e6584610e01565b9250610e7360208501610e01565b9150604084013590509250925092565b600060208284031215610e9557600080fd5b61073c82610e01565b60008060408385031215610eb157600080fd5b610eba83610e01565b915060208301358015158114610ecf57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610f0657600080fd5b610f0f85610e01565b9350610f1d60208601610e01565b925060408501359150606085013567ffffffffffffffff80821115610f4157600080fd5b818701915087601f830112610f5557600080fd5b813581811115610f6757610f67610eda565b604051601f8201601f19908116603f01168101908382118183101715610f8f57610f8f610eda565b816040528281528a6020848701011115610fa857600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610fdf57600080fd5b610fe883610e01565b9150610ff660208401610e01565b90509250929050565b600181811c9082168061101357607f821691505b60208210810361103357634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6000835161109c818460208801610d7d565b8351908301906110b0818360208801610d7d565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156110e1576110e16110b9565b500390565b600082198211156110f9576110f96110b9565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600060018201611162576111626110b9565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261118e5761118e611169565b500490565b6000826111a2576111a2611169565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906111f090830184610da9565b9695505050505050565b60006020828403121561120c57600080fd5b815161073c81610d4756fea2646970667358221220141897d05b6183e2287bee1b26ac89e81b55bb1774ec3fadeaddde1981f70b7664736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x14DE CODESIZE SUB DUP1 PUSH3 0x14DE DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1DB JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x281 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x245 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x153 JUMPI PUSH3 0x153 PUSH3 0x10E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x17E JUMPI PUSH3 0x17E PUSH3 0x10E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1BF JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1A0 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1D1 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x215 DUP7 DUP4 DUP8 ADD PUSH3 0x124 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x23B DUP6 DUP3 DUP7 ADD PUSH3 0x124 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x25A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x27B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x124D DUP1 PUSH3 0x291 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD60 JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xDD5 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xE1D JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xE47 JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xE47 JUMP JUMPDEST PUSH2 0x4EC JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xE83 JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x605 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xE9E JUMP JUMPDEST PUSH2 0x614 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xEF0 JUMP JUMPDEST PUSH2 0x623 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x65B JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xFFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0xFFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B1 DUP3 PUSH2 0x507 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x41E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x43A JUMPI POP PUSH2 0x43A DUP2 CALLER PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x4B6 DUP4 DUP4 PUSH2 0x743 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4C5 CALLER DUP3 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x4E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x1039 JUMP JUMPDEST PUSH2 0x4B6 DUP4 DUP4 DUP4 PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x4B6 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x623 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xFFF JUMP JUMPDEST PUSH2 0x61F CALLER DUP4 DUP4 PUSH2 0xA44 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x62D CALLER DUP4 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x649 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x1039 JUMP JUMPDEST PUSH2 0x655 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB12 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F1 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x711 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x73C JUMP JUMPDEST DUP1 PUSH2 0x71B DUP5 PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x72C SWAP3 SWAP2 SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x778 DUP3 PUSH2 0x507 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x82A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x835 DUP4 PUSH2 0x507 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x87C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x8A0 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x895 DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8BB DUP3 PUSH2 0x507 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x91F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x981 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x98C PUSH1 0x0 DUP3 PUSH2 0x743 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9B5 SWAP1 DUP5 SWAP1 PUSH2 0x10CF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9E3 SWAP1 DUP5 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xAA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xB1D DUP5 DUP5 DUP5 PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0xB29 DUP5 DUP5 DUP5 DUP5 PUSH2 0xC46 JUMP JUMPDEST PUSH2 0x655 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0xB6C JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xB96 JUMPI DUP1 PUSH2 0xB80 DUP2 PUSH2 0x1150 JUMP JUMPDEST SWAP2 POP PUSH2 0xB8F SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x117F JUMP JUMPDEST SWAP2 POP PUSH2 0xB70 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBB1 JUMPI PUSH2 0xBB1 PUSH2 0xEDA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBDB JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x8A0 JUMPI PUSH2 0xBF0 PUSH1 0x1 DUP4 PUSH2 0x10CF JUMP JUMPDEST SWAP2 POP PUSH2 0xBFD PUSH1 0xA DUP7 PUSH2 0x1193 JUMP JUMPDEST PUSH2 0xC08 SWAP1 PUSH1 0x30 PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC1D JUMPI PUSH2 0xC1D PUSH2 0x11A7 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xC3F PUSH1 0xA DUP7 PUSH2 0x117F JUMP JUMPDEST SWAP5 POP PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xD3C JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC8A SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCC5 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCC2 SWAP2 DUP2 ADD SWAP1 PUSH2 0x11FA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD22 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xCF3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xD1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x10FE JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x8A0 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xD5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x73C DUP2 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD98 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD80 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x655 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xDC1 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xD7D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x73C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDA9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE39 DUP4 PUSH2 0xE01 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE65 DUP5 PUSH2 0xE01 JUMP JUMPDEST SWAP3 POP PUSH2 0xE73 PUSH1 0x20 DUP6 ADD PUSH2 0xE01 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x73C DUP3 PUSH2 0xE01 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEBA DUP4 PUSH2 0xE01 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xECF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xF06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF0F DUP6 PUSH2 0xE01 JUMP JUMPDEST SWAP4 POP PUSH2 0xF1D PUSH1 0x20 DUP7 ADD PUSH2 0xE01 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF67 JUMPI PUSH2 0xF67 PUSH2 0xEDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xF8F JUMPI PUSH2 0xF8F PUSH2 0xEDA JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xFA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFE8 DUP4 PUSH2 0xE01 JUMP JUMPDEST SWAP2 POP PUSH2 0xFF6 PUSH1 0x20 DUP5 ADD PUSH2 0xE01 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1013 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1033 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x109C DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xD7D JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x10B0 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xD7D JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x10E1 JUMPI PUSH2 0x10E1 PUSH2 0x10B9 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x10F9 JUMPI PUSH2 0x10F9 PUSH2 0x10B9 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1162 JUMPI PUSH2 0x1162 PUSH2 0x10B9 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x118E JUMPI PUSH2 0x118E PUSH2 0x1169 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11A2 JUMPI PUSH2 0x11A2 PUSH2 0x1169 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11F0 SWAP1 DUP4 ADD DUP5 PUSH2 0xDA9 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x120C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x73C DUP2 PUSH2 0xD47 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ XOR SWAP8 0xD0 JUMPDEST PUSH2 0x83E2 0x28 PUSH28 0xEE1B26AC89E81B55BB1774EC3FADEADDDE1981F70B7664736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "628:13658:3:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1456:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1479:17:3;;;;:7;;:17;;;;;:::i;:::-;;1390:113;;628:13658;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;628:13658:3;;;-1:-1:-1;628:13658:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:15;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:15;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:15;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:15:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:15;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;628:13658:3;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1308": {
									"entryPoint": null,
									"id": 1308,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1192": {
									"entryPoint": 1859,
									"id": 1192,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_660": {
									"entryPoint": null,
									"id": 660,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1297": {
									"entryPoint": null,
									"id": 1297,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1286": {
									"entryPoint": 3142,
									"id": 1286,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_882": {
									"entryPoint": null,
									"id": 882,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_923": {
									"entryPoint": 1969,
									"id": 923,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_2274": {
									"entryPoint": null,
									"id": 2274,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeTransfer_864": {
									"entryPoint": 2834,
									"id": 864,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1224": {
									"entryPoint": 2628,
									"id": 1224,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_1168": {
									"entryPoint": 2216,
									"id": 1168,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_703": {
									"entryPoint": 934,
									"id": 703,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_561": {
									"entryPoint": 1406,
									"id": 561,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_724": {
									"entryPoint": 780,
									"id": 724,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_759": {
									"entryPoint": null,
									"id": 759,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1985": {
									"entryPoint": null,
									"id": 1985,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_599": {
									"entryPoint": 634,
									"id": 599,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_589": {
									"entryPoint": 1287,
									"id": 589,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_805": {
									"entryPoint": 1260,
									"id": 805,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_835": {
									"entryPoint": 1571,
									"id": 835,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_741": {
									"entryPoint": 1556,
									"id": 741,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_2510": {
									"entryPoint": null,
									"id": 2510,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_537": {
									"entryPoint": 552,
									"id": 537,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_609": {
									"entryPoint": 1541,
									"id": 609,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_2369": {
									"entryPoint": 2885,
									"id": 2369,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_651": {
									"entryPoint": 1627,
									"id": 651,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_786": {
									"entryPoint": 1211,
									"id": 786,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 3824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4234,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4541,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 3453,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4095,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 4432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 4499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4281,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4457,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4519,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3802,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 3399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12309:15",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:15",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "58:87:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "103:3:15",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "108:10:15",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "71:51:15"
															},
															"nodeType": "YulIf",
															"src": "68:71:15"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "47:5:15",
														"type": ""
													}
												],
												"src": "14:131:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:176:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "265:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "274:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "277:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "261:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:32:15"
															},
															"nodeType": "YulIf",
															"src": "229:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "303:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "294:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "335:30:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "374:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "384:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "185:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "196:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "208:6:15",
														"type": ""
													}
												],
												"src": "150:245:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "495:92:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "505:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "528:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:41:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "540:41:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "464:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "475:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "486:4:15",
														"type": ""
													}
												],
												"src": "400:187:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "645:205:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "655:10:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "664:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "659:1:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "724:63:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "749:3:15"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "754:1:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "745:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "745:11:15"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "768:3:15"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "773:1:15"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "764:3:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "764:11:15"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "758:5:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "758:18:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "738:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "738:39:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "738:39:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "685:1:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "688:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "682:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "682:13:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "696:19:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "698:15:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "707:1:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "710:2:15",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "703:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:10:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "698:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "678:3:15",
																"statements": []
															},
															"src": "674:113:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "813:31:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "826:3:15"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "831:6:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "822:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "822:16:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "840:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "815:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "815:27:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "815:27:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "802:1:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "805:6:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "799:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "799:13:15"
															},
															"nodeType": "YulIf",
															"src": "796:48:15"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "623:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "628:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "633:6:15",
														"type": ""
													}
												],
												"src": "592:258:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "905:208:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "915:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "935:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "929:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "929:12:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "919:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "957:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "962:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "950:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "950:19:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "950:19:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1004:5:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1011:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1000:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1000:16:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1022:3:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1027:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1018:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1018:14:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1034:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "978:21:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "978:63:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "978:63:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1050:57:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1065:3:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1078:6:15"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1086:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1074:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1074:15:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1095:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1091:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1091:7:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1070:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1070:29:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1061:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1061:39:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1102:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1057:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1057:50:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1050:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "882:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "889:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "897:3:15",
														"type": ""
													}
												],
												"src": "855:258:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1239:99:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1256:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1267:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1249:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1249:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1249:21:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1279:53:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1305:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1317:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1328:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1287:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1287:45:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1279:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1208:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1219:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1230:4:15",
														"type": ""
													}
												],
												"src": "1118:220:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1413:110:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1459:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1468:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1471:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1461:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1461:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1461:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1434:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1443:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1430:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1430:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1455:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1426:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1426:32:15"
															},
															"nodeType": "YulIf",
															"src": "1423:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1484:33:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1507:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1494:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1494:23:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1484:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1379:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1390:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1402:6:15",
														"type": ""
													}
												],
												"src": "1343:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1629:102:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1639:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1651:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1647:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1647:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1639:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1681:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1696:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1712:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1717:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1708:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1708:11:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1721:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1704:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1704:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1692:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1692:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1674:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1674:51:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1674:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1598:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1609:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1620:4:15",
														"type": ""
													}
												],
												"src": "1528:203:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1785:124:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1795:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1817:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1804:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1804:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1795:5:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1887:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1896:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1899:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1889:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1889:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1889:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1846:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1857:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1872:3:15",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1877:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1868:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1868:11:15"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1881:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1864:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1864:19:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1853:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1853:31:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1843:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1843:42:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1836:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:50:15"
															},
															"nodeType": "YulIf",
															"src": "1833:70:15"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1764:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1775:5:15",
														"type": ""
													}
												],
												"src": "1736:173:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2001:167:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2047:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2056:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2059:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2049:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2049:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2049:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2022:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2031:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2043:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2014:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2014:32:15"
															},
															"nodeType": "YulIf",
															"src": "2011:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2072:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2101:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2082:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2082:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2072:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2120:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2147:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2158:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2143:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2130:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2130:32:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2120:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1959:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1970:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1982:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1990:6:15",
														"type": ""
													}
												],
												"src": "1914:254:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2277:224:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2323:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2332:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2335:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2325:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2325:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2325:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2298:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2307:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2294:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2294:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2319:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2290:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2290:32:15"
															},
															"nodeType": "YulIf",
															"src": "2287:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2348:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2377:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2358:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2358:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2348:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2396:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2429:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2440:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2425:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2425:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2406:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2406:38:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2396:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2453:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2480:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2491:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2476:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2476:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2463:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2463:32:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2453:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2227:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2238:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2250:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2258:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2266:6:15",
														"type": ""
													}
												],
												"src": "2173:328:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2576:116:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2622:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2631:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2634:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2624:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2624:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2624:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2597:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2606:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2593:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2593:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2618:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2589:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2589:32:15"
															},
															"nodeType": "YulIf",
															"src": "2586:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2647:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2676:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2657:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2657:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2647:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2542:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2553:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2565:6:15",
														"type": ""
													}
												],
												"src": "2506:186:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2798:76:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2808:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2820:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2831:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2816:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2816:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2808:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2850:9:15"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2861:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2843:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2843:25:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2843:25:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2767:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2778:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2789:4:15",
														"type": ""
													}
												],
												"src": "2697:177:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2963:263:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3009:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3018:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3021:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3011:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3011:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3011:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2984:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2993:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2980:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2980:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3005:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2976:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2976:32:15"
															},
															"nodeType": "YulIf",
															"src": "2973:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3034:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3063:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3044:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3044:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3034:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3082:45:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3112:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3123:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3108:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3108:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3095:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3095:32:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3086:5:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3180:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3189:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3192:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3182:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3182:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3182:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3149:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3170:5:15"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3163:6:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3163:13:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3156:6:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3156:21:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3146:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3146:32:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3139:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3139:40:15"
															},
															"nodeType": "YulIf",
															"src": "3136:60:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3205:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3215:5:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3205:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2921:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2932:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2944:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2952:6:15",
														"type": ""
													}
												],
												"src": "2879:347:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3263:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3280:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3287:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3292:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3283:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3283:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3273:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3273:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3273:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3320:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3323:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3313:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3313:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3313:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3344:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3347:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3337:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3337:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3337:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3231:127:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3493:1008:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3540:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3549:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3552:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3542:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3542:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3542:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3514:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3523:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3510:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3510:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3535:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3506:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3506:33:15"
															},
															"nodeType": "YulIf",
															"src": "3503:53:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3565:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3594:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3575:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3575:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3565:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3613:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3646:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3657:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3642:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3642:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3623:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3623:38:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3613:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3670:42:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3697:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3708:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3693:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3693:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3680:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3680:32:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3670:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3721:46:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3752:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3763:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3748:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3748:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3735:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3735:32:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3725:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3776:28:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3786:18:15",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3780:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3831:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3840:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3843:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3833:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3833:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3833:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3819:6:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3827:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3816:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3816:14:15"
															},
															"nodeType": "YulIf",
															"src": "3813:34:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3856:32:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3870:9:15"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3881:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3866:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3866:22:15"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3860:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3936:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3945:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3948:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3938:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3938:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3938:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "3915:2:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3919:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3911:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3911:13:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3926:7:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3907:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3907:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3900:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3900:35:15"
															},
															"nodeType": "YulIf",
															"src": "3897:55:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3961:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3984:2:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3971:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3971:16:15"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "3965:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4010:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4012:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4012:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4012:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4002:2:15"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4006:2:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3999:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3999:10:15"
															},
															"nodeType": "YulIf",
															"src": "3996:36:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4041:17:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4055:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4051:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4051:7:15"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "4045:2:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4067:23:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4087:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4081:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4081:9:15"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "4071:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4099:71:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4121:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "4145:2:15"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4149:4:15",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4141:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4141:13:15"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "4156:2:15"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "4137:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4137:22:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4161:2:15",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4133:31:15"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "4166:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4129:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4129:40:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4117:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4117:53:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "4103:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4229:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4231:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4231:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4231:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4188:10:15"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4200:2:15"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4185:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4185:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4208:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4220:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4205:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4205:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4182:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4182:46:15"
															},
															"nodeType": "YulIf",
															"src": "4179:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4267:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4271:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4260:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4260:22:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4260:22:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4298:6:15"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4306:2:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4291:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4291:18:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4291:18:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4355:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4364:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4367:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4357:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4357:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4357:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4332:2:15"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4336:2:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4328:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4328:11:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4341:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4324:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4324:20:15"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4346:7:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4321:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4321:33:15"
															},
															"nodeType": "YulIf",
															"src": "4318:53:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4397:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4405:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4393:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4393:15:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "4414:2:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4418:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4410:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4410:11:15"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4423:2:15"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4380:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4380:46:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4380:46:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "4450:6:15"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4458:2:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4446:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4446:15:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4463:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4442:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4442:24:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4468:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4435:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4435:35:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4435:35:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4479:16:15",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4489:6:15"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3435:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3446:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3458:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3466:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3474:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3482:6:15",
														"type": ""
													}
												],
												"src": "3363:1138:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4593:173:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4639:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4648:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4651:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4641:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4641:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4641:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4614:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4623:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4610:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4610:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4635:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4606:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4606:32:15"
															},
															"nodeType": "YulIf",
															"src": "4603:52:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4664:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4693:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4674:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4674:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4664:6:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4712:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4745:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4756:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4741:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4741:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4722:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4722:38:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4712:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4551:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4562:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4574:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4582:6:15",
														"type": ""
													}
												],
												"src": "4506:260:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4826:325:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4836:22:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4850:1:15",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4853:4:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4846:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4846:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4836:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4867:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4897:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4903:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4893:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4893:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4871:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4944:31:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4946:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4960:6:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4968:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4956:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4956:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4946:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4924:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4917:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4917:26:15"
															},
															"nodeType": "YulIf",
															"src": "4914:61:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5034:111:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5055:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5062:3:15",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5067:10:15",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5058:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5058:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5048:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5048:31:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5048:31:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5099:1:15",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5102:4:15",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5092:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5092:15:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5092:15:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5127:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5130:4:15",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5120:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5120:15:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5120:15:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4990:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5013:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5021:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5010:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5010:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4987:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4987:38:15"
															},
															"nodeType": "YulIf",
															"src": "4984:161:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4806:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4815:6:15",
														"type": ""
													}
												],
												"src": "4771:380:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5330:234:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5347:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5358:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5340:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5340:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5340:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5381:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5392:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5377:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5377:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5397:2:15",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5370:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5370:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5370:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5420:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5431:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5416:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5416:18:15"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5436:34:15",
																		"type": "",
																		"value": "ERC721: approved query for nonex"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5409:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5409:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5409:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5491:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5502:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5487:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5487:18:15"
																	},
																	{
																		"hexValue": "697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5507:14:15",
																		"type": "",
																		"value": "istent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5480:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5480:42:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5480:42:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5531:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5543:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5554:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5539:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5539:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5531:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5307:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5321:4:15",
														"type": ""
													}
												],
												"src": "5156:408:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5743:223:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5760:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5771:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5753:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5753:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5753:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5794:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5805:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5790:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5790:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5810:2:15",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5783:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5783:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5783:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5833:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5844:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5829:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5829:18:15"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5849:34:15",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5822:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5822:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5822:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5904:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5915:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5900:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5900:18:15"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5920:3:15",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5893:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5893:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5893:31:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5933:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5945:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5956:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5941:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5941:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5933:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5720:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5734:4:15",
														"type": ""
													}
												],
												"src": "5569:397:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6145:246:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6162:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6173:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6155:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6155:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6155:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6196:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6207:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6192:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6192:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6212:2:15",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6185:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6185:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6185:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6235:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6246:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6231:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6231:18:15"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6251:34:15",
																		"type": "",
																		"value": "ERC721: approve caller is not ow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6224:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6224:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6224:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6306:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6317:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6302:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6302:18:15"
																	},
																	{
																		"hexValue": "6e6572206e6f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6322:26:15",
																		"type": "",
																		"value": "ner nor approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6295:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6295:54:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6295:54:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6358:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6370:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6381:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6366:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6366:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6358:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6122:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6136:4:15",
														"type": ""
													}
												],
												"src": "5971:420:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6570:239:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6587:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6598:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6580:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6580:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6580:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6621:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6632:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6617:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6617:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6637:2:15",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6610:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6610:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6610:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6660:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6671:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6656:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6656:18:15"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6676:34:15",
																		"type": "",
																		"value": "ERC721: transfer caller is not o"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6649:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6649:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6649:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6731:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6742:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6727:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6727:18:15"
																	},
																	{
																		"hexValue": "776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6747:19:15",
																		"type": "",
																		"value": "wner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6720:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6720:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6720:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6776:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6788:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6799:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6784:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6784:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6776:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6547:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6561:4:15",
														"type": ""
													}
												],
												"src": "6396:413:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6988:231:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7005:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7016:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6998:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6998:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6998:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7039:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7050:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7035:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7035:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7055:2:15",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7028:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7028:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7028:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7078:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7089:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7074:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7074:18:15"
																	},
																	{
																		"hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7094:34:15",
																		"type": "",
																		"value": "ERC721: owner query for nonexist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7067:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7067:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7067:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7149:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7160:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7145:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7145:18:15"
																	},
																	{
																		"hexValue": "656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7165:11:15",
																		"type": "",
																		"value": "ent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7138:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7138:39:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7138:39:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7186:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7198:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7209:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7194:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7194:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7186:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6965:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6979:4:15",
														"type": ""
													}
												],
												"src": "6814:405:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7398:232:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7415:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7426:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7408:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7408:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7408:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7449:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7460:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7445:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7445:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7465:2:15",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7438:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7438:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7438:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7488:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7499:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7484:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7484:18:15"
																	},
																	{
																		"hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7504:34:15",
																		"type": "",
																		"value": "ERC721: balance query for the ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7477:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7477:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7477:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7559:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7570:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7555:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7555:18:15"
																	},
																	{
																		"hexValue": "726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7575:12:15",
																		"type": "",
																		"value": "ro address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7548:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7548:40:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7548:40:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7597:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7609:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7620:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7605:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7605:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7597:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7375:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7389:4:15",
														"type": ""
													}
												],
												"src": "7224:406:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7809:237:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7826:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7837:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7819:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7819:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7819:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7860:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7871:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7856:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7856:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7876:2:15",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7849:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7849:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7849:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7899:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7910:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7895:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7895:18:15"
																	},
																	{
																		"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7915:34:15",
																		"type": "",
																		"value": "ERC721Metadata: URI query for no"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7888:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7888:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7888:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7970:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7981:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7966:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7966:18:15"
																	},
																	{
																		"hexValue": "6e6578697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7986:17:15",
																		"type": "",
																		"value": "nexistent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7959:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7959:45:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7959:45:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8013:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8025:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8036:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8021:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8021:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8013:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7786:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7800:4:15",
														"type": ""
													}
												],
												"src": "7635:411:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8238:283:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8248:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8268:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8262:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8262:13:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8252:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8310:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8318:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8306:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8306:17:15"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8325:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8330:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8284:21:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8284:53:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8284:53:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8346:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8363:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8368:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8359:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8359:16:15"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "8350:5:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8384:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8406:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8400:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8400:13:15"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "8388:8:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8448:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8456:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8444:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8444:17:15"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "8463:5:15"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "8470:8:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8422:21:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8422:57:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8422:57:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8488:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "8499:5:15"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "8506:8:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8495:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8495:20:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8488:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8206:3:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8211:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8219:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8230:3:15",
														"type": ""
													}
												],
												"src": "8051:470:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8700:234:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8717:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8728:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8710:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8710:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8710:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8751:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8762:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8747:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8747:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8767:2:15",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8740:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8740:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8740:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8790:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8801:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8786:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8786:18:15"
																	},
																	{
																		"hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8806:34:15",
																		"type": "",
																		"value": "ERC721: operator query for nonex"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8779:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8779:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8779:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8861:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8872:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8857:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8857:18:15"
																	},
																	{
																		"hexValue": "697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8877:14:15",
																		"type": "",
																		"value": "istent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8850:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8850:42:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8850:42:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8901:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8913:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8924:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8909:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8909:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8901:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8677:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8691:4:15",
														"type": ""
													}
												],
												"src": "8526:408:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9113:227:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9130:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9141:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9123:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9123:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9123:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9164:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9175:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9160:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9160:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9180:2:15",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9153:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9153:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9153:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9203:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9214:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9199:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9199:18:15"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f727265637420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9219:34:15",
																		"type": "",
																		"value": "ERC721: transfer from incorrect "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9192:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9192:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9192:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9274:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9285:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9270:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9270:18:15"
																	},
																	{
																		"hexValue": "6f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9290:7:15",
																		"type": "",
																		"value": "owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9263:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9263:35:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9263:35:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9307:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9319:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9330:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9315:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9315:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9307:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9090:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9104:4:15",
														"type": ""
													}
												],
												"src": "8939:401:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9519:226:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9536:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9547:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9529:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9529:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9529:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9570:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9581:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9566:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9566:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9586:2:15",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9559:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9559:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9559:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9609:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9620:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9605:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9605:18:15"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9625:34:15",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9598:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9598:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9598:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9680:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9691:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9676:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9676:18:15"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9696:6:15",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9669:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9669:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9669:34:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9712:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9724:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9735:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9720:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9720:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9712:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9496:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9510:4:15",
														"type": ""
													}
												],
												"src": "9345:400:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9782:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9799:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9806:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9811:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9802:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9802:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9792:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9792:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9792:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9842:4:15",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9832:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9832:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9832:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9863:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9866:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9856:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9856:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9856:15:15"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9750:127:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9931:76:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9953:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9955:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9955:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9955:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9947:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9950:1:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9944:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9944:8:15"
															},
															"nodeType": "YulIf",
															"src": "9941:34:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9984:17:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9996:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9999:1:15"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9992:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9992:9:15"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "9984:4:15"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9913:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9916:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "9922:4:15",
														"type": ""
													}
												],
												"src": "9882:125:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10060:80:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10087:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10089:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10089:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10089:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10076:1:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10083:1:15"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10079:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10079:6:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10073:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10073:13:15"
															},
															"nodeType": "YulIf",
															"src": "10070:39:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10118:16:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10129:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10132:1:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10125:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10125:9:15"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10118:3:15"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10043:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10046:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10052:3:15",
														"type": ""
													}
												],
												"src": "10012:128:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10319:175:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10336:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10347:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10329:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10329:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10329:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10370:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10381:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10366:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10366:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10386:2:15",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10359:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10359:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10359:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10409:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10420:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10405:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10405:18:15"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10425:27:15",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10398:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10398:55:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10398:55:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10462:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10474:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10485:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10470:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10470:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10462:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10296:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10310:4:15",
														"type": ""
													}
												],
												"src": "10145:349:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10673:240:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10690:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10701:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10683:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10683:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10683:21:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10724:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10735:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10720:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10720:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10740:2:15",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10713:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10713:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10713:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10763:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10774:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10759:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10759:18:15"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10779:34:15",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10752:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10752:62:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10752:62:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10834:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10845:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10830:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10830:18:15"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10850:20:15",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10823:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10823:48:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10823:48:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10880:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10892:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10903:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10888:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10888:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10880:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10650:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10664:4:15",
														"type": ""
													}
												],
												"src": "10499:414:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10965:88:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10996:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10998:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10998:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10998:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10981:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10992:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10988:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10988:6:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10978:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10978:17:15"
															},
															"nodeType": "YulIf",
															"src": "10975:43:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11027:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11038:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11045:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11034:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11034:13:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "11027:3:15"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10947:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10957:3:15",
														"type": ""
													}
												],
												"src": "10918:135:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11090:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11107:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11114:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11119:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11110:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11110:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11100:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11100:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11100:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11147:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11150:4:15",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11140:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11140:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11140:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11171:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11174:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11164:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11164:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11164:15:15"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "11058:127:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11236:74:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11259:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "11261:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11261:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11261:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11256:1:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11249:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11249:9:15"
															},
															"nodeType": "YulIf",
															"src": "11246:35:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11290:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11299:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11302:1:15"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11295:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11295:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "11290:1:15"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11221:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11224:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11230:1:15",
														"type": ""
													}
												],
												"src": "11190:120:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11353:74:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11376:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "11378:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11378:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11378:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11373:1:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11366:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11366:9:15"
															},
															"nodeType": "YulIf",
															"src": "11363:35:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11407:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11416:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11419:1:15"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "11412:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11412:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "11407:1:15"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11338:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11341:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11347:1:15",
														"type": ""
													}
												],
												"src": "11315:112:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11464:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11481:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11488:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11493:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11484:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11484:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11474:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11474:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11474:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11521:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11524:4:15",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11514:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11514:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11514:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11545:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11548:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11538:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11538:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11538:15:15"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "11432:127:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11767:286:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11777:29:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11795:3:15",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11800:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11791:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11791:11:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11804:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11787:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11787:19:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "11781:2:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11822:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11837:6:15"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11845:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11833:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11833:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11815:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11815:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11815:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11869:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11880:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11865:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11865:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "11889:6:15"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11897:2:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11885:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11885:15:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11858:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11858:43:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11858:43:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11921:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11932:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11917:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11917:18:15"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11937:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11910:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11910:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11910:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11964:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11975:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11960:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11960:18:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11980:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11953:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11953:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11953:31:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11993:54:15",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "12019:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12031:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12042:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12027:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12027:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "12001:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12001:46:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11993:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11712:9:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11723:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11731:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11739:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11747:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11758:4:15",
														"type": ""
													}
												],
												"src": "11564:489:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12138:169:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12184:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12193:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12196:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12186:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12186:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12186:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12159:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12168:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12155:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12155:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12180:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12151:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12151:32:15"
															},
															"nodeType": "YulIf",
															"src": "12148:52:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12209:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12228:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12222:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12222:16:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "12213:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12271:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "12247:23:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12247:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12247:30:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12286:15:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "12296:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "12286:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12104:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12115:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12127:6:15",
														"type": ""
													}
												],
												"src": "12058:249:15"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721: approved query for nonex\")\n        mstore(add(headStart, 96), \"istent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not ow\")\n        mstore(add(headStart, 96), \"ner nor approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"ERC721: transfer caller is not o\")\n        mstore(add(headStart, 96), \"wner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: owner query for nonexist\")\n        mstore(add(headStart, 96), \"ent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC721: balance query for the ze\")\n        mstore(add(headStart, 96), \"ro address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"ERC721Metadata: URI query for no\")\n        mstore(add(headStart, 96), \"nexistent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721: operator query for nonex\")\n        mstore(add(headStart, 96), \"istent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610d60565b610228565b60405190151581526020015b60405180910390f35b61010461027a565b6040516100f39190610dd5565b61012461011f366004610de8565b61030c565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610e1d565b6103a6565b005b61014f61015f366004610e47565b6104bb565b61014f610172366004610e47565b6104ec565b610124610185366004610de8565b610507565b61019d610198366004610e83565b61057e565b6040519081526020016100f3565b610104610605565b61014f6101c1366004610e9e565b610614565b61014f6101d4366004610ef0565b610623565b6101046101e7366004610de8565b61065b565b6100e76101fa366004610fcc565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061025957506001600160e01b03198216635b5e139f60e01b145b8061027457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461028990610fff565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590610fff565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661038a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103b182610507565b9050806001600160a01b0316836001600160a01b03160361041e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610381565b336001600160a01b038216148061043a575061043a81336101fa565b6104ac5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610381565b6104b68383610743565b505050565b6104c533826107b1565b6104e15760405162461bcd60e51b815260040161038190611039565b6104b68383836108a8565b6104b683838360405180602001604052806000815250610623565b6000818152600260205260408120546001600160a01b0316806102745760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610381565b60006001600160a01b0382166105e95760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610381565b506001600160a01b031660009081526003602052604090205490565b60606001805461028990610fff565b61061f338383610a44565b5050565b61062d33836107b1565b6106495760405162461bcd60e51b815260040161038190611039565b61065584848484610b12565b50505050565b6000818152600260205260409020546060906001600160a01b03166106da5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610381565b60006106f160408051602081019091526000815290565b90506000815111610711576040518060200160405280600081525061073c565b8061071b84610b45565b60405160200161072c92919061108a565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061077882610507565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b031661082a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610381565b600061083583610507565b9050806001600160a01b0316846001600160a01b0316148061087c57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806108a05750836001600160a01b03166108958461030c565b6001600160a01b0316145b949350505050565b826001600160a01b03166108bb82610507565b6001600160a01b03161461091f5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610381565b6001600160a01b0382166109815760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610381565b61098c600082610743565b6001600160a01b03831660009081526003602052604081208054600192906109b59084906110cf565b90915550506001600160a01b03821660009081526003602052604081208054600192906109e39084906110e6565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610aa55760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610381565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610b1d8484846108a8565b610b2984848484610c46565b6106555760405162461bcd60e51b8152600401610381906110fe565b606081600003610b6c5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b965780610b8081611150565b9150610b8f9050600a8361117f565b9150610b70565b60008167ffffffffffffffff811115610bb157610bb1610eda565b6040519080825280601f01601f191660200182016040528015610bdb576020820181803683370190505b5090505b84156108a057610bf06001836110cf565b9150610bfd600a86611193565b610c089060306110e6565b60f81b818381518110610c1d57610c1d6111a7565b60200101906001600160f81b031916908160001a905350610c3f600a8661117f565b9450610bdf565b60006001600160a01b0384163b15610d3c57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c8a9033908990889088906004016111bd565b6020604051808303816000875af1925050508015610cc5575060408051601f3d908101601f19168201909252610cc2918101906111fa565b60015b610d22573d808015610cf3576040519150601f19603f3d011682016040523d82523d6000602084013e610cf8565b606091505b508051600003610d1a5760405162461bcd60e51b8152600401610381906110fe565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108a0565b506001949350505050565b6001600160e01b031981168114610d5d57600080fd5b50565b600060208284031215610d7257600080fd5b813561073c81610d47565b60005b83811015610d98578181015183820152602001610d80565b838111156106555750506000910152565b60008151808452610dc1816020860160208601610d7d565b601f01601f19169290920160200192915050565b60208152600061073c6020830184610da9565b600060208284031215610dfa57600080fd5b5035919050565b80356001600160a01b0381168114610e1857600080fd5b919050565b60008060408385031215610e3057600080fd5b610e3983610e01565b946020939093013593505050565b600080600060608486031215610e5c57600080fd5b610e6584610e01565b9250610e7360208501610e01565b9150604084013590509250925092565b600060208284031215610e9557600080fd5b61073c82610e01565b60008060408385031215610eb157600080fd5b610eba83610e01565b915060208301358015158114610ecf57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610f0657600080fd5b610f0f85610e01565b9350610f1d60208601610e01565b925060408501359150606085013567ffffffffffffffff80821115610f4157600080fd5b818701915087601f830112610f5557600080fd5b813581811115610f6757610f67610eda565b604051601f8201601f19908116603f01168101908382118183101715610f8f57610f8f610eda565b816040528281528a6020848701011115610fa857600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610fdf57600080fd5b610fe883610e01565b9150610ff660208401610e01565b90509250929050565b600181811c9082168061101357607f821691505b60208210810361103357634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6000835161109c818460208801610d7d565b8351908301906110b0818360208801610d7d565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156110e1576110e16110b9565b500390565b600082198211156110f9576110f96110b9565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600060018201611162576111626110b9565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261118e5761118e611169565b500490565b6000826111a2576111a2611169565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906111f090830184610da9565b9695505050505050565b60006020828403121561120c57600080fd5b815161073c81610d4756fea2646970667358221220141897d05b6183e2287bee1b26ac89e81b55bb1774ec3fadeaddde1981f70b7664736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD60 JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xDD5 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xE1D JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xE47 JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xE47 JUMP JUMPDEST PUSH2 0x4EC JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xE83 JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x605 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xE9E JUMP JUMPDEST PUSH2 0x614 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xEF0 JUMP JUMPDEST PUSH2 0x623 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x65B JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xFFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0xFFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B1 DUP3 PUSH2 0x507 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x41E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x43A JUMPI POP PUSH2 0x43A DUP2 CALLER PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x4B6 DUP4 DUP4 PUSH2 0x743 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4C5 CALLER DUP3 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x4E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x1039 JUMP JUMPDEST PUSH2 0x4B6 DUP4 DUP4 DUP4 PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x4B6 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x623 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xFFF JUMP JUMPDEST PUSH2 0x61F CALLER DUP4 DUP4 PUSH2 0xA44 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x62D CALLER DUP4 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x649 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x1039 JUMP JUMPDEST PUSH2 0x655 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB12 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F1 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x711 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x73C JUMP JUMPDEST DUP1 PUSH2 0x71B DUP5 PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x72C SWAP3 SWAP2 SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x778 DUP3 PUSH2 0x507 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x82A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x835 DUP4 PUSH2 0x507 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x87C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x8A0 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x895 DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8BB DUP3 PUSH2 0x507 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x91F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x981 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x98C PUSH1 0x0 DUP3 PUSH2 0x743 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9B5 SWAP1 DUP5 SWAP1 PUSH2 0x10CF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9E3 SWAP1 DUP5 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xAA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xB1D DUP5 DUP5 DUP5 PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0xB29 DUP5 DUP5 DUP5 DUP5 PUSH2 0xC46 JUMP JUMPDEST PUSH2 0x655 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0xB6C JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xB96 JUMPI DUP1 PUSH2 0xB80 DUP2 PUSH2 0x1150 JUMP JUMPDEST SWAP2 POP PUSH2 0xB8F SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x117F JUMP JUMPDEST SWAP2 POP PUSH2 0xB70 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBB1 JUMPI PUSH2 0xBB1 PUSH2 0xEDA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBDB JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x8A0 JUMPI PUSH2 0xBF0 PUSH1 0x1 DUP4 PUSH2 0x10CF JUMP JUMPDEST SWAP2 POP PUSH2 0xBFD PUSH1 0xA DUP7 PUSH2 0x1193 JUMP JUMPDEST PUSH2 0xC08 SWAP1 PUSH1 0x30 PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC1D JUMPI PUSH2 0xC1D PUSH2 0x11A7 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xC3F PUSH1 0xA DUP7 PUSH2 0x117F JUMP JUMPDEST SWAP5 POP PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xD3C JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC8A SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCC5 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCC2 SWAP2 DUP2 ADD SWAP1 PUSH2 0x11FA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD22 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xCF3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xD1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x10FE JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x8A0 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xD5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x73C DUP2 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD98 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD80 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x655 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xDC1 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xD7D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x73C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDA9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE39 DUP4 PUSH2 0xE01 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE65 DUP5 PUSH2 0xE01 JUMP JUMPDEST SWAP3 POP PUSH2 0xE73 PUSH1 0x20 DUP6 ADD PUSH2 0xE01 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x73C DUP3 PUSH2 0xE01 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEBA DUP4 PUSH2 0xE01 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xECF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xF06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF0F DUP6 PUSH2 0xE01 JUMP JUMPDEST SWAP4 POP PUSH2 0xF1D PUSH1 0x20 DUP7 ADD PUSH2 0xE01 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF67 JUMPI PUSH2 0xF67 PUSH2 0xEDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xF8F JUMPI PUSH2 0xF8F PUSH2 0xEDA JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xFA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFE8 DUP4 PUSH2 0xE01 JUMP JUMPDEST SWAP2 POP PUSH2 0xFF6 PUSH1 0x20 DUP5 ADD PUSH2 0xE01 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1013 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1033 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x109C DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xD7D JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x10B0 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xD7D JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x10E1 JUMPI PUSH2 0x10E1 PUSH2 0x10B9 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x10F9 JUMPI PUSH2 0x10F9 PUSH2 0x10B9 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1162 JUMPI PUSH2 0x1162 PUSH2 0x10B9 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x118E JUMPI PUSH2 0x118E PUSH2 0x1169 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11A2 JUMPI PUSH2 0x11A2 PUSH2 0x1169 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11F0 SWAP1 DUP4 ADD DUP5 PUSH2 0xDA9 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x120C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x73C DUP2 PUSH2 0xD47 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ XOR SWAP8 0xD0 JUMPDEST PUSH2 0x83E2 0x28 PUSH28 0xEE1B26AC89E81B55BB1774EC3FADEADDDE1981F70B7664736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "628:13658:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;:::i;:::-;;:::i;:::-;;;565:14:15;;558:22;540:41;;528:2;513:18;1570:300:3;;;;;;;;2488:98;;;:::i;:::-;;;;;;;:::i;4000:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:15;;;1674:51;;1662:2;1647:18;4000:217:3;1528:203:15;3538:401:3;;;;;;:::i;:::-;;:::i;:::-;;4727:330;;;;;;:::i;:::-;;:::i;5123:179::-;;;;;;:::i;:::-;;:::i;2191:235::-;;;;;;:::i;:::-;;:::i;1929:205::-;;;;;;:::i;:::-;;:::i;:::-;;;2843:25:15;;;2831:2;2816:18;1929:205:3;2697:177:15;2650:102:3;;;:::i;4284:153::-;;;;;;:::i;:::-;;:::i;5368:320::-;;;;;;:::i;:::-;;:::i;2818:329::-;;;;;;:::i;:::-;;:::i;4503:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4623:25:3;;;4600:4;4623:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4503:162;1570:300;1672:4;-1:-1:-1;;;;;;1707:40:3;;-1:-1:-1;;;1707:40:3;;:104;;-1:-1:-1;;;;;;;1763:48:3;;-1:-1:-1;;;1763:48:3;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:13;;;1827:36:3;1688:175;1570:300;-1:-1:-1;;1570:300:3:o;2488:98::-;2542:13;2574:5;2567:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2488:98;:::o;4000:217::-;4076:7;7248:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7248:16:3;4095:73;;;;-1:-1:-1;;;4095:73:3;;5358:2:15;4095:73:3;;;5340:21:15;5397:2;5377:18;;;5370:30;5436:34;5416:18;;;5409:62;-1:-1:-1;;;5487:18:15;;;5480:42;5539:19;;4095:73:3;;;;;;;;;-1:-1:-1;4186:24:3;;;;:15;:24;;;;;;-1:-1:-1;;;;;4186:24:3;;4000:217::o;3538:401::-;3618:13;3634:23;3649:7;3634:14;:23::i;:::-;3618:39;;3681:5;-1:-1:-1;;;;;3675:11:3;:2;-1:-1:-1;;;;;3675:11:3;;3667:57;;;;-1:-1:-1;;;3667:57:3;;5771:2:15;3667:57:3;;;5753:21:15;5810:2;5790:18;;;5783:30;5849:34;5829:18;;;5822:62;-1:-1:-1;;;5900:18:15;;;5893:31;5941:19;;3667:57:3;5569:397:15;3667:57:3;719:10:11;-1:-1:-1;;;;;3756:21:3;;;;:62;;-1:-1:-1;3781:37:3;3798:5;719:10:11;4503:162:3;:::i;3781:37::-;3735:165;;;;-1:-1:-1;;;3735:165:3;;6173:2:15;3735:165:3;;;6155:21:15;6212:2;6192:18;;;6185:30;6251:34;6231:18;;;6224:62;6322:26;6302:18;;;6295:54;6366:19;;3735:165:3;5971:420:15;3735:165:3;3911:21;3920:2;3924:7;3911:8;:21::i;:::-;3608:331;3538:401;;:::o;4727:330::-;4916:41;719:10:11;4949:7:3;4916:18;:41::i;:::-;4908:103;;;;-1:-1:-1;;;4908:103:3;;;;;;;:::i;:::-;5022:28;5032:4;5038:2;5042:7;5022:9;:28::i;5123:179::-;5256:39;5273:4;5279:2;5283:7;5256:39;;;;;;;;;;;;:16;:39::i;2191:235::-;2263:7;2298:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2298:16:3;;2324:73;;;;-1:-1:-1;;;2324:73:3;;7016:2:15;2324:73:3;;;6998:21:15;7055:2;7035:18;;;7028:30;7094:34;7074:18;;;7067:62;-1:-1:-1;;;7145:18:15;;;7138:39;7194:19;;2324:73:3;6814:405:15;1929:205:3;2001:7;-1:-1:-1;;;;;2028:19:3;;2020:74;;;;-1:-1:-1;;;2020:74:3;;7426:2:15;2020:74:3;;;7408:21:15;7465:2;7445:18;;;7438:30;7504:34;7484:18;;;7477:62;-1:-1:-1;;;7555:18:15;;;7548:40;7605:19;;2020:74:3;7224:406:15;2020:74:3;-1:-1:-1;;;;;;2111:16:3;;;;;:9;:16;;;;;;;1929:205::o;2650:102::-;2706:13;2738:7;2731:14;;;;;:::i;4284:153::-;4378:52;719:10:11;4411:8:3;4421;4378:18;:52::i;:::-;4284:153;;:::o;5368:320::-;5537:41;719:10:11;5570:7:3;5537:18;:41::i;:::-;5529:103;;;;-1:-1:-1;;;5529:103:3;;;;;;;:::i;:::-;5642:39;5656:4;5662:2;5666:7;5675:5;5642:13;:39::i;:::-;5368:320;;;;:::o;2818:329::-;7225:4;7248:16;;;:7;:16;;;;;;2891:13;;-1:-1:-1;;;;;7248:16:3;2916:76;;;;-1:-1:-1;;;2916:76:3;;7837:2:15;2916:76:3;;;7819:21:15;7876:2;7856:18;;;7849:30;7915:34;7895:18;;;7888:62;-1:-1:-1;;;7966:18:15;;;7959:45;8021:19;;2916:76:3;7635:411:15;2916:76:3;3003:21;3027:10;3465:9;;;;;;;;;-1:-1:-1;3465:9:3;;;3389:92;3027:10;3003:34;;3078:1;3060:7;3054:21;:25;:86;;;;;;;;;;;;;;;;;3106:7;3115:18;:7;:16;:18::i;:::-;3089:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3054:86;3047:93;2818:329;-1:-1:-1;;;2818:329:3:o;11169:171::-;11243:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11243:29:3;-1:-1:-1;;;;;11243:29:3;;;;;;;;:24;;11296:23;11243:24;11296:14;:23::i;:::-;-1:-1:-1;;;;;11287:46:3;;;;;;;;;;;11169:171;;:::o;7443:344::-;7536:4;7248:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7248:16:3;7552:73;;;;-1:-1:-1;;;7552:73:3;;8728:2:15;7552:73:3;;;8710:21:15;8767:2;8747:18;;;8740:30;8806:34;8786:18;;;8779:62;-1:-1:-1;;;8857:18:15;;;8850:42;8909:19;;7552:73:3;8526:408:15;7552:73:3;7635:13;7651:23;7666:7;7651:14;:23::i;:::-;7635:39;;7703:5;-1:-1:-1;;;;;7692:16:3;:7;-1:-1:-1;;;;;7692:16:3;;:52;;;-1:-1:-1;;;;;;4623:25:3;;;4600:4;4623:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7712:32;7692:87;;;;7772:7;-1:-1:-1;;;;;7748:31:3;:20;7760:7;7748:11;:20::i;:::-;-1:-1:-1;;;;;7748:31:3;;7692:87;7684:96;7443:344;-1:-1:-1;;;;7443:344:3:o;10453:605::-;10607:4;-1:-1:-1;;;;;10580:31:3;:23;10595:7;10580:14;:23::i;:::-;-1:-1:-1;;;;;10580:31:3;;10572:81;;;;-1:-1:-1;;;10572:81:3;;9141:2:15;10572:81:3;;;9123:21:15;9180:2;9160:18;;;9153:30;9219:34;9199:18;;;9192:62;-1:-1:-1;;;9270:18:15;;;9263:35;9315:19;;10572:81:3;8939:401:15;10572:81:3;-1:-1:-1;;;;;10671:16:3;;10663:65;;;;-1:-1:-1;;;10663:65:3;;9547:2:15;10663:65:3;;;9529:21:15;9586:2;9566:18;;;9559:30;9625:34;9605:18;;;9598:62;-1:-1:-1;;;9676:18:15;;;9669:34;9720:19;;10663:65:3;9345:400:15;10663:65:3;10840:29;10857:1;10861:7;10840:8;:29::i;:::-;-1:-1:-1;;;;;10880:15:3;;;;;;:9;:15;;;;;:20;;10899:1;;10880:15;:20;;10899:1;;10880:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10910:13:3;;;;;;:9;:13;;;;;:18;;10927:1;;10910:13;:18;;10927:1;;10910:18;:::i;:::-;;;;-1:-1:-1;;10938:16:3;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10938:21:3;-1:-1:-1;;;;;10938:21:3;;;;;;;;;10975:27;;10938:16;;10975:27;;;;;;;3608:331;3538:401;;:::o;11475:307::-;11625:8;-1:-1:-1;;;;;11616:17:3;:5;-1:-1:-1;;;;;11616:17:3;;11608:55;;;;-1:-1:-1;;;11608:55:3;;10347:2:15;11608:55:3;;;10329:21:15;10386:2;10366:18;;;10359:30;10425:27;10405:18;;;10398:55;10470:18;;11608:55:3;10145:349:15;11608:55:3;-1:-1:-1;;;;;11673:25:3;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11673:46:3;;;;;;;;;;11734:41;;540::15;;;11734::3;;513:18:15;11734:41:3;;;;;;;11475:307;;;:::o;6550:::-;6701:28;6711:4;6717:2;6721:7;6701:9;:28::i;:::-;6747:48;6770:4;6776:2;6780:7;6789:5;6747:22;:48::i;:::-;6739:111;;;;-1:-1:-1;;;6739:111:3;;;;;;;:::i;328:703:12:-;384:13;601:5;610:1;601:10;597:51;;-1:-1:-1;;627:10:12;;;;;;;;;;;;-1:-1:-1;;;627:10:12;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:12;;-1:-1:-1;773:2:12;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:12;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:12;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:12;;;;;;;;-1:-1:-1;972:11:12;981:2;972:11;;:::i;:::-;;;844:150;;12335:778:3;12485:4;-1:-1:-1;;;;;12505:13:3;;1465:19:10;:23;12501:606:3;;12540:72;;-1:-1:-1;;;12540:72:3;;-1:-1:-1;;;;;12540:36:3;;;;;:72;;719:10:11;;12591:4:3;;12597:7;;12606:5;;12540:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12540:72:3;;;;;;;;-1:-1:-1;;12540:72:3;;;;;;;;;;;;:::i;:::-;;;12536:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12779:6;:13;12796:1;12779:18;12775:266;;12821:60;;-1:-1:-1;;;12821:60:3;;;;;;;:::i;12775:266::-;12993:6;12987:13;12978:6;12974:2;12970:15;12963:38;12536:519;-1:-1:-1;;;;;;12662:51:3;-1:-1:-1;;;12662:51:3;;-1:-1:-1;12655:58:3;;12501:606;-1:-1:-1;13092:4:3;12335:778;;;;;;:::o;14:131:15:-;-1:-1:-1;;;;;;88:32:15;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:15;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:15;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:15:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:15;;1343:180;-1:-1:-1;1343:180:15:o;1736:173::-;1804:20;;-1:-1:-1;;;;;1853:31:15;;1843:42;;1833:70;;1899:1;1896;1889:12;1833:70;1736:173;;;:::o;1914:254::-;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:15:o;2173:328::-;2250:6;2258;2266;2319:2;2307:9;2298:7;2294:23;2290:32;2287:52;;;2335:1;2332;2325:12;2287:52;2358:29;2377:9;2358:29;:::i;:::-;2348:39;;2406:38;2440:2;2429:9;2425:18;2406:38;:::i;:::-;2396:48;;2491:2;2480:9;2476:18;2463:32;2453:42;;2173:328;;;;;:::o;2506:186::-;2565:6;2618:2;2606:9;2597:7;2593:23;2589:32;2586:52;;;2634:1;2631;2624:12;2586:52;2657:29;2676:9;2657:29;:::i;2879:347::-;2944:6;2952;3005:2;2993:9;2984:7;2980:23;2976:32;2973:52;;;3021:1;3018;3011:12;2973:52;3044:29;3063:9;3044:29;:::i;:::-;3034:39;;3123:2;3112:9;3108:18;3095:32;3170:5;3163:13;3156:21;3149:5;3146:32;3136:60;;3192:1;3189;3182:12;3136:60;3215:5;3205:15;;;2879:347;;;;;:::o;3231:127::-;3292:10;3287:3;3283:20;3280:1;3273:31;3323:4;3320:1;3313:15;3347:4;3344:1;3337:15;3363:1138;3458:6;3466;3474;3482;3535:3;3523:9;3514:7;3510:23;3506:33;3503:53;;;3552:1;3549;3542:12;3503:53;3575:29;3594:9;3575:29;:::i;:::-;3565:39;;3623:38;3657:2;3646:9;3642:18;3623:38;:::i;:::-;3613:48;;3708:2;3697:9;3693:18;3680:32;3670:42;;3763:2;3752:9;3748:18;3735:32;3786:18;3827:2;3819:6;3816:14;3813:34;;;3843:1;3840;3833:12;3813:34;3881:6;3870:9;3866:22;3856:32;;3926:7;3919:4;3915:2;3911:13;3907:27;3897:55;;3948:1;3945;3938:12;3897:55;3984:2;3971:16;4006:2;4002;3999:10;3996:36;;;4012:18;;:::i;:::-;4087:2;4081:9;4055:2;4141:13;;-1:-1:-1;;4137:22:15;;;4161:2;4133:31;4129:40;4117:53;;;4185:18;;;4205:22;;;4182:46;4179:72;;;4231:18;;:::i;:::-;4271:10;4267:2;4260:22;4306:2;4298:6;4291:18;4346:7;4341:2;4336;4332;4328:11;4324:20;4321:33;4318:53;;;4367:1;4364;4357:12;4318:53;4423:2;4418;4414;4410:11;4405:2;4397:6;4393:15;4380:46;4468:1;4463:2;4458;4450:6;4446:15;4442:24;4435:35;4489:6;4479:16;;;;;;;3363:1138;;;;;;;:::o;4506:260::-;4574:6;4582;4635:2;4623:9;4614:7;4610:23;4606:32;4603:52;;;4651:1;4648;4641:12;4603:52;4674:29;4693:9;4674:29;:::i;:::-;4664:39;;4722:38;4756:2;4745:9;4741:18;4722:38;:::i;:::-;4712:48;;4506:260;;;;;:::o;4771:380::-;4850:1;4846:12;;;;4893;;;4914:61;;4968:4;4960:6;4956:17;4946:27;;4914:61;5021:2;5013:6;5010:14;4990:18;4987:38;4984:161;;5067:10;5062:3;5058:20;5055:1;5048:31;5102:4;5099:1;5092:15;5130:4;5127:1;5120:15;4984:161;;4771:380;;;:::o;6396:413::-;6598:2;6580:21;;;6637:2;6617:18;;;6610:30;6676:34;6671:2;6656:18;;6649:62;-1:-1:-1;;;6742:2:15;6727:18;;6720:47;6799:3;6784:19;;6396:413::o;8051:470::-;8230:3;8268:6;8262:13;8284:53;8330:6;8325:3;8318:4;8310:6;8306:17;8284:53;:::i;:::-;8400:13;;8359:16;;;;8422:57;8400:13;8359:16;8456:4;8444:17;;8422:57;:::i;:::-;8495:20;;8051:470;-1:-1:-1;;;;8051:470:15:o;9750:127::-;9811:10;9806:3;9802:20;9799:1;9792:31;9842:4;9839:1;9832:15;9866:4;9863:1;9856:15;9882:125;9922:4;9950:1;9947;9944:8;9941:34;;;9955:18;;:::i;:::-;-1:-1:-1;9992:9:15;;9882:125::o;10012:128::-;10052:3;10083:1;10079:6;10076:1;10073:13;10070:39;;;10089:18;;:::i;:::-;-1:-1:-1;10125:9:15;;10012:128::o;10499:414::-;10701:2;10683:21;;;10740:2;10720:18;;;10713:30;10779:34;10774:2;10759:18;;10752:62;-1:-1:-1;;;10845:2:15;10830:18;;10823:48;10903:3;10888:19;;10499:414::o;10918:135::-;10957:3;10978:17;;;10975:43;;10998:18;;:::i;:::-;-1:-1:-1;11045:1:15;11034:13;;10918:135::o;11058:127::-;11119:10;11114:3;11110:20;11107:1;11100:31;11150:4;11147:1;11140:15;11174:4;11171:1;11164:15;11190:120;11230:1;11256;11246:35;;11261:18;;:::i;:::-;-1:-1:-1;11295:9:15;;11190:120::o;11315:112::-;11347:1;11373;11363:35;;11378:18;;:::i;:::-;-1:-1:-1;11412:9:15;;11315:112::o;11432:127::-;11493:10;11488:3;11484:20;11481:1;11474:31;11524:4;11521:1;11514:15;11548:4;11545:1;11538:15;11564:489;-1:-1:-1;;;;;11833:15:15;;;11815:34;;11885:15;;11880:2;11865:18;;11858:43;11932:2;11917:18;;11910:34;;;11980:3;11975:2;11960:18;;11953:31;;;11758:4;;12001:46;;12027:19;;12019:6;12001:46;:::i;:::-;11993:54;11564:489;-1:-1:-1;;;;;;11564:489:15:o;12058:249::-;12127:6;12180:2;12168:9;12159:7;12155:23;12151:32;12148:52;;;12196:1;12193;12186:12;12148:52;12228:9;12222:16;12247:30;12271:5;12247:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "937000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2634",
								"getApproved(uint256)": "4737",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "2579",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26705",
								"supportsInterface(bytes4)": "511",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,uint256)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(uint256)": "infinite",
								"_checkOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "infinite",
								"_isApprovedOrOwner(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_safeTransfer(address,address,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1456,
									"end": 1461,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1456,
									"end": 1461,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 15,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "tag",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMP",
									"source": 15,
									"value": "[in]"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 15,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMP",
									"source": 15,
									"value": "[in]"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 15,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 15,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 15,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 930,
									"end": 932,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 927,
									"end": 928,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 924,
									"end": 933,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 989,
									"end": 990,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 984,
									"end": 986,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 979,
									"end": 981,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 971,
									"end": 977,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 967,
									"end": 982,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 963,
									"end": 987,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 956,
									"end": 991,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "tag",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1019,
									"end": 1025,
									"name": "SWAP7",
									"source": 15
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "SWAP6",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMP",
									"source": 15,
									"value": "[out]"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "tag",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1135,
									"end": 1141,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1143,
									"end": 1149,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1196,
									"end": 1198,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 1184,
									"end": 1193,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1175,
									"end": 1182,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1171,
									"end": 1194,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 1167,
									"end": 1199,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1212,
									"end": 1213,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1209,
									"end": 1210,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1202,
									"end": 1214,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "tag",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1331,
									"end": 1332,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1328,
									"end": 1329,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1321,
									"end": 1333,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "tag",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "39"
								},
								{
									"begin": 1407,
									"end": 1414,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 1398,
									"end": 1404,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1387,
									"end": 1396,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 1383,
									"end": 1405,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMP",
									"source": 15,
									"value": "[in]"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "tag",
									"source": 15,
									"value": "39"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1461,
									"end": 1463,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1450,
									"end": 1459,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1446,
									"end": 1464,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1440,
									"end": 1465,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1490,
									"end": 1492,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1480,
									"end": 1488,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1477,
									"end": 1493,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1506,
									"end": 1507,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1503,
									"end": 1504,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1496,
									"end": 1508,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "tag",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 1584,
									"end": 1591,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1573,
									"end": 1581,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1562,
									"end": 1571,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 1558,
									"end": 1582,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMP",
									"source": 15,
									"value": "[in]"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "tag",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMP",
									"source": 15,
									"value": "[out]"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 15,
									"value": "11"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1682,
									"end": 1683,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1800,
									"end": 1804,
									"name": "PUSH",
									"source": 15,
									"value": "7F"
								},
								{
									"begin": 1792,
									"end": 1798,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1788,
									"end": 1805,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "tag",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1853,
									"end": 1855,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1845,
									"end": 1851,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1842,
									"end": 1856,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 1822,
									"end": 1840,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1819,
									"end": 1857,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "44"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1899,
									"end": 1909,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B71"
								},
								{
									"begin": 1894,
									"end": 1897,
									"name": "PUSH",
									"source": 15,
									"value": "E0"
								},
								{
									"begin": 1890,
									"end": 1910,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 1887,
									"end": 1888,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1880,
									"end": 1911,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1934,
									"end": 1938,
									"name": "PUSH",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 1931,
									"end": 1932,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 1924,
									"end": 1939,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1962,
									"end": 1966,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 1959,
									"end": 1960,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1952,
									"end": 1967,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "tag",
									"source": 15,
									"value": "44"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMP",
									"source": 15,
									"value": "[out]"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220141897d05b6183e2287bee1b26ac89e81b55bb1774ec3fadeaddde1981f70b7664736f6c634300080d0033",
									".code": [
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 3,
											"value": "6352211E"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 3,
											"value": "A22CB465"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 3,
											"value": "A22CB465"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 3,
											"value": "B88D4FDE"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 3,
											"value": "C87B56DD"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 3,
											"value": "E985E9C5"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 3,
											"value": "6352211E"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 3,
											"value": "95D89B41"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 3,
											"value": "1FFC9A7"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 3,
											"value": "6FDDE03"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 3,
											"value": "81812FC"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 3,
											"value": "42842E0E"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1674,
											"end": 1725,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1674,
											"end": 1725,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1662,
											"end": 1664,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1647,
											"end": 1665,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1528,
											"end": 1731,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2868,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2843,
											"end": 2868,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2843,
											"end": 2868,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2831,
											"end": 2833,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2816,
											"end": 2834,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2697,
											"end": 2874,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4600,
											"end": 4604,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1672,
											"end": 1676,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1688,
											"end": 1863,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2542,
											"end": 2555,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2574,
											"end": 2579,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4083,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7255,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5360,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5340,
											"end": 5361,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5397,
											"end": 5399,
											"name": "PUSH",
											"source": 15,
											"value": "2C"
										},
										{
											"begin": 5377,
											"end": 5395,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 5377,
											"end": 5395,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5377,
											"end": 5395,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5370,
											"end": 5400,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5436,
											"end": 5470,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
										},
										{
											"begin": 5416,
											"end": 5434,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 5416,
											"end": 5434,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5416,
											"end": 5434,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5409,
											"end": 5471,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5487,
											"end": 5505,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 5487,
											"end": 5505,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5487,
											"end": 5505,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5480,
											"end": 5522,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5539,
											"end": 5558,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 5539,
											"end": 5558,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4186,
											"end": 4201,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3618,
											"end": 3631,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 3649,
											"end": 3656,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3634,
											"end": 3657,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3634,
											"end": 3657,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 3634,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3618,
											"end": 3657,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3618,
											"end": 3657,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3681,
											"end": 3686,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3675,
											"end": 3686,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3675,
											"end": 3677,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3675,
											"end": 3686,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3675,
											"end": 3686,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5771,
											"end": 5773,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5753,
											"end": 5774,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5810,
											"end": 5812,
											"name": "PUSH",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 5790,
											"end": 5808,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 5790,
											"end": 5808,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5790,
											"end": 5808,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5783,
											"end": 5813,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5849,
											"end": 5883,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 5829,
											"end": 5847,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 5829,
											"end": 5847,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5829,
											"end": 5847,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5822,
											"end": 5884,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5900,
											"end": 5918,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 5900,
											"end": 5918,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5900,
											"end": 5918,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5893,
											"end": 5924,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5941,
											"end": 5960,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 5941,
											"end": 5960,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 5569,
											"end": 5966,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3756,
											"end": 3777,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3756,
											"end": 3777,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3756,
											"end": 3777,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3756,
											"end": 3777,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3756,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3756,
											"end": 3818,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3781,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3798,
											"end": 3803,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3781,
											"end": 3818,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3781,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6173,
											"end": 6175,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6155,
											"end": 6176,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6212,
											"end": 6214,
											"name": "PUSH",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 6192,
											"end": 6210,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 6192,
											"end": 6210,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6192,
											"end": 6210,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6185,
											"end": 6215,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6251,
											"end": 6285,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
										},
										{
											"begin": 6231,
											"end": 6249,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 6231,
											"end": 6249,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6231,
											"end": 6249,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6224,
											"end": 6286,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6322,
											"end": 6348,
											"name": "PUSH",
											"source": 15,
											"value": "6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
										},
										{
											"begin": 6302,
											"end": 6320,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 6302,
											"end": 6320,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6302,
											"end": 6320,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6295,
											"end": 6349,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6366,
											"end": 6385,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 6366,
											"end": 6385,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 5971,
											"end": 6391,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3911,
											"end": 3932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3920,
											"end": 3922,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3924,
											"end": 3931,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3911,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3911,
											"end": 3932,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3911,
											"end": 3932,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3911,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4916,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4949,
											"end": 4956,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4916,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 4916,
											"end": 4957,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4916,
											"end": 4957,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 4916,
											"end": 4957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 5032,
											"end": 5036,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5038,
											"end": 5040,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5042,
											"end": 5049,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 5022,
											"end": 5050,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 5273,
											"end": 5277,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5279,
											"end": 5281,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5283,
											"end": 5290,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5256,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2263,
											"end": 2270,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2298,
											"end": 2305,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7016,
											"end": 7018,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6998,
											"end": 7019,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7055,
											"end": 7057,
											"name": "PUSH",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 7035,
											"end": 7053,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7035,
											"end": 7053,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7035,
											"end": 7053,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7028,
											"end": 7058,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7094,
											"end": 7128,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
										},
										{
											"begin": 7074,
											"end": 7092,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 7074,
											"end": 7092,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7074,
											"end": 7092,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7067,
											"end": 7129,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7145,
											"end": 7163,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 7145,
											"end": 7163,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7145,
											"end": 7163,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7138,
											"end": 7177,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7194,
											"end": 7213,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 7194,
											"end": 7213,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 6814,
											"end": 7219,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2001,
											"end": 2008,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7426,
											"end": 7428,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7408,
											"end": 7429,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7465,
											"end": 7467,
											"name": "PUSH",
											"source": 15,
											"value": "2A"
										},
										{
											"begin": 7445,
											"end": 7463,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7445,
											"end": 7463,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7445,
											"end": 7463,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7438,
											"end": 7468,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7504,
											"end": 7538,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A2062616C616E636520717565727920666F7220746865207A65"
										},
										{
											"begin": 7484,
											"end": 7502,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 7484,
											"end": 7502,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7484,
											"end": 7502,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7477,
											"end": 7539,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7555,
											"end": 7573,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 7555,
											"end": 7573,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7555,
											"end": 7573,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7548,
											"end": 7588,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7605,
											"end": 7624,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 7605,
											"end": 7624,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 7224,
											"end": 7630,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2120,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2706,
											"end": 2719,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2738,
											"end": 2745,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4378,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4411,
											"end": 4419,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4421,
											"end": 4429,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4378,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 4378,
											"end": 4430,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4378,
											"end": 4430,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 4378,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5570,
											"end": 5577,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5555,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 5537,
											"end": 5578,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5537,
											"end": 5578,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 5537,
											"end": 5578,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5642,
											"end": 5681,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 5656,
											"end": 5660,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5664,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5666,
											"end": 5673,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5675,
											"end": 5680,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 5642,
											"end": 5681,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5642,
											"end": 5681,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 5642,
											"end": 5681,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7225,
											"end": 7229,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7255,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2891,
											"end": 2904,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2891,
											"end": 2904,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7837,
											"end": 7839,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7819,
											"end": 7840,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7876,
											"end": 7878,
											"name": "PUSH",
											"source": 15,
											"value": "2F"
										},
										{
											"begin": 7856,
											"end": 7874,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7856,
											"end": 7874,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7856,
											"end": 7874,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7849,
											"end": 7879,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7915,
											"end": 7949,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732314D657461646174613A2055524920717565727920666F72206E6F"
										},
										{
											"begin": 7895,
											"end": 7913,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 7895,
											"end": 7913,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7895,
											"end": 7913,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7888,
											"end": 7950,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3732BC34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7959,
											"end": 8004,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8021,
											"end": 8040,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 8021,
											"end": 8040,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 7635,
											"end": 8046,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3003,
											"end": 3024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3027,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3389,
											"end": 3481,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3027,
											"end": 3037,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 3027,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3003,
											"end": 3037,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3003,
											"end": 3037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3078,
											"end": 3079,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3060,
											"end": 3067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3075,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3079,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3106,
											"end": 3113,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 3115,
											"end": 3122,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 3115,
											"end": 3133,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3115,
											"end": 3133,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 3115,
											"end": 3133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3047,
											"end": 3140,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11169,
											"end": 11340,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 11169,
											"end": 11340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11258,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11296,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11296,
											"end": 11310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 11296,
											"end": 11319,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11296,
											"end": 11319,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 11296,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 11169,
											"end": 11340,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11169,
											"end": 11340,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11169,
											"end": 11340,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7443,
											"end": 7787,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 7443,
											"end": 7787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7536,
											"end": 7540,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7255,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8728,
											"end": 8730,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8710,
											"end": 8731,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8767,
											"end": 8769,
											"name": "PUSH",
											"source": 15,
											"value": "2C"
										},
										{
											"begin": 8747,
											"end": 8765,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 8747,
											"end": 8765,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8747,
											"end": 8765,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8740,
											"end": 8770,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8806,
											"end": 8840,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
										},
										{
											"begin": 8786,
											"end": 8804,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 8786,
											"end": 8804,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8786,
											"end": 8804,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8779,
											"end": 8841,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8857,
											"end": 8875,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 8857,
											"end": 8875,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8857,
											"end": 8875,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8850,
											"end": 8892,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8909,
											"end": 8928,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 8909,
											"end": 8928,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 8526,
											"end": 8934,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7635,
											"end": 7648,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7651,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 7666,
											"end": 7673,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7651,
											"end": 7665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 7651,
											"end": 7674,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7651,
											"end": 7674,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 7651,
											"end": 7674,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7635,
											"end": 7674,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7635,
											"end": 7674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7703,
											"end": 7708,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7692,
											"end": 7708,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7692,
											"end": 7699,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7692,
											"end": 7708,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7692,
											"end": 7708,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7692,
											"end": 7744,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7692,
											"end": 7744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 7692,
											"end": 7744,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4600,
											"end": 4604,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7712,
											"end": 7744,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 7712,
											"end": 7744,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7772,
											"end": 7779,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7748,
											"end": 7779,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7748,
											"end": 7768,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 7760,
											"end": 7767,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7748,
											"end": 7759,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 7748,
											"end": 7768,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7748,
											"end": 7768,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 7748,
											"end": 7768,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7748,
											"end": 7779,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7748,
											"end": 7779,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7684,
											"end": 7780,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 7443,
											"end": 7787,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7443,
											"end": 7787,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10453,
											"end": 11058,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 10453,
											"end": 11058,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10607,
											"end": 10611,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10580,
											"end": 10611,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10580,
											"end": 10603,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 10595,
											"end": 10602,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10580,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 10580,
											"end": 10603,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10580,
											"end": 10603,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 10580,
											"end": 10603,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10580,
											"end": 10611,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10580,
											"end": 10611,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9141,
											"end": 9143,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9123,
											"end": 9144,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9180,
											"end": 9182,
											"name": "PUSH",
											"source": 15,
											"value": "25"
										},
										{
											"begin": 9160,
											"end": 9178,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 9160,
											"end": 9178,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9160,
											"end": 9178,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9153,
											"end": 9183,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9219,
											"end": 9253,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A207472616E736665722066726F6D20696E636F727265637420"
										},
										{
											"begin": 9199,
											"end": 9217,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 9199,
											"end": 9217,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9199,
											"end": 9217,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9192,
											"end": 9254,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9270,
											"end": 9288,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 9270,
											"end": 9288,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9270,
											"end": 9288,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9263,
											"end": 9298,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9315,
											"end": 9334,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 9315,
											"end": 9334,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 8939,
											"end": 9340,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10671,
											"end": 10687,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10671,
											"end": 10687,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9547,
											"end": 9549,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9529,
											"end": 9550,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9586,
											"end": 9588,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 9566,
											"end": 9584,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9566,
											"end": 9584,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9566,
											"end": 9584,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9559,
											"end": 9589,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9625,
											"end": 9659,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9598,
											"end": 9660,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9676,
											"end": 9694,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 9676,
											"end": 9694,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9676,
											"end": 9694,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9669,
											"end": 9703,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9720,
											"end": 9739,
											"name": "PUSH",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 9720,
											"end": 9739,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 9345,
											"end": 9745,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10840,
											"end": 10869,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 10857,
											"end": 10858,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10861,
											"end": 10868,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10840,
											"end": 10848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 10840,
											"end": 10869,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10840,
											"end": 10869,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 10840,
											"end": 10869,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10880,
											"end": 10889,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 10899,
											"end": 10900,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10899,
											"end": 10900,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10899,
											"end": 10900,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10899,
											"end": 10900,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10910,
											"end": 10919,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 10927,
											"end": 10928,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10927,
											"end": 10928,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10927,
											"end": 10928,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10927,
											"end": 10928,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 10945,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11625,
											"end": 11633,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11616,
											"end": 11633,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11616,
											"end": 11621,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11616,
											"end": 11633,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11616,
											"end": 11633,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10347,
											"end": 10349,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10329,
											"end": 10350,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10386,
											"end": 10388,
											"name": "PUSH",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 10366,
											"end": 10384,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 10366,
											"end": 10384,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10366,
											"end": 10384,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10359,
											"end": 10389,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10425,
											"end": 10452,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 10405,
											"end": 10423,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 10405,
											"end": 10423,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10405,
											"end": 10423,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10398,
											"end": 10453,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10470,
											"end": 10488,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 10470,
											"end": 10488,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 10145,
											"end": 10494,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11691,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "PUSH",
											"source": 3,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6550,
											"end": 6857,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 6550,
											"end": 6857,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 6711,
											"end": 6715,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6717,
											"end": 6719,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6721,
											"end": 6728,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6701,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6747,
											"end": 6795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 6770,
											"end": 6774,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6776,
											"end": 6778,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6787,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6789,
											"end": 6794,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6747,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 6747,
											"end": 6795,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6747,
											"end": 6795,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 6747,
											"end": 6795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "tag",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 384,
											"end": 397,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 601,
											"end": 606,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 610,
											"end": 611,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 611,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 597,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 627,
											"end": 637,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 627,
											"end": 637,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 627,
											"end": 637,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 627,
											"end": 637,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 627,
											"end": 637,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "tag",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 657,
											"end": 669,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "tag",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 718,
											"end": 727,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 718,
											"end": 727,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 711,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 743,
											"end": 751,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 743,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 743,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "tag",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 743,
											"end": 751,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 765,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 773,
											"end": 775,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 765,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "tag",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 765,
											"end": 775,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 765,
											"end": 775,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 711,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 711,
											"end": 786,
											"name": "tag",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 795,
											"end": 814,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "tag",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 817,
											"end": 834,
											"name": "tag",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 817,
											"end": 834,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 795,
											"end": 834,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 795,
											"end": 834,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 844,
											"end": 994,
											"name": "tag",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 851,
											"end": 861,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 851,
											"end": 861,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 844,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 877,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 877,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "tag",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 877,
											"end": 888,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 945,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 953,
											"end": 955,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 945,
											"end": 950,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 945,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "tag",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 932,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 932,
											"end": 934,
											"name": "PUSH",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "tag",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 919,
											"end": 958,
											"name": "PUSH",
											"source": 12,
											"value": "F8"
										},
										{
											"begin": 919,
											"end": 958,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 902,
											"end": 908,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 909,
											"end": 915,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 902,
											"end": 916,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 902,
											"end": 916,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "tag",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 902,
											"end": 958,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 902,
											"end": 958,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 902,
											"end": 958,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 902,
											"end": 958,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 958,
											"name": "BYTE",
											"source": 12
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 902,
											"end": 958,
											"name": "MSTORE8",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 972,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 981,
											"end": 983,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 972,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "tag",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 972,
											"end": 983,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 972,
											"end": 983,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 844,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12485,
											"end": 12489,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12505,
											"end": 12518,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12505,
											"end": 12518,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12501,
											"end": 13107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 12501,
											"end": 13107,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12576,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12576,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12576,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12576,
											"name": "PUSH",
											"source": 3,
											"value": "150B7A02"
										},
										{
											"begin": 12540,
											"end": 12576,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12591,
											"end": 12595,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 12591,
											"end": 12595,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12606,
											"end": 12611,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 12606,
											"end": 12611,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12779,
											"end": 12785,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12779,
											"end": 12792,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12796,
											"end": 12797,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12779,
											"end": 12797,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12775,
											"end": 13041,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 12775,
											"end": 13041,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12775,
											"end": 13041,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 12775,
											"end": 13041,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12993,
											"end": 12999,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12987,
											"end": 13000,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12978,
											"end": 12984,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12974,
											"end": 12976,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12970,
											"end": 12985,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12963,
											"end": 13001,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12662,
											"end": 12713,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12662,
											"end": 12713,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 12662,
											"end": 12713,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12655,
											"end": 12713,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 12655,
											"end": 12713,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12501,
											"end": 13107,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 12501,
											"end": 13107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13092,
											"end": 13096,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 68,
											"end": 139,
											"name": "tag",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14,
											"end": 145,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "152"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 335,
											"end": 365,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 592,
											"end": 850,
											"name": "tag",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 592,
											"end": 850,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 664,
											"end": 665,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "tag",
											"source": 15,
											"value": "263"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 688,
											"end": 694,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 685,
											"end": 686,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 682,
											"end": 695,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 674,
											"end": 787,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 674,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 764,
											"end": 775,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 764,
											"end": 775,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 764,
											"end": 775,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 758,
											"end": 776,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 745,
											"end": 756,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 745,
											"end": 756,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 745,
											"end": 756,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 738,
											"end": 777,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 710,
											"end": 712,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 703,
											"end": 713,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 674,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "263"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 674,
											"end": 787,
											"name": "tag",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 805,
											"end": 811,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 802,
											"end": 803,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 799,
											"end": 812,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 796,
											"end": 844,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 796,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "142"
										},
										{
											"begin": 796,
											"end": 844,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 840,
											"end": 841,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 838,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 822,
											"end": 838,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 815,
											"end": 842,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 592,
											"end": 850,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "tag",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 897,
											"end": 900,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 935,
											"end": 940,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 929,
											"end": 941,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 962,
											"end": 968,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 957,
											"end": 960,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 950,
											"end": 969,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 1034,
											"end": 1040,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1027,
											"end": 1031,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1022,
											"end": 1025,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1018,
											"end": 1032,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1011,
											"end": 1015,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1004,
											"end": 1009,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1016,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "tag",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1095,
											"end": 1097,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1074,
											"end": 1089,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1070,
											"end": 1099,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1102,
											"end": 1106,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1057,
											"end": 1107,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1057,
											"end": 1107,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1118,
											"end": 1338,
											"name": "tag",
											"source": 15,
											"value": "27"
										},
										{
											"begin": 1118,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1267,
											"end": 1269,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1256,
											"end": 1265,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1249,
											"end": 1270,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1230,
											"end": 1234,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1287,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "152"
										},
										{
											"begin": 1328,
											"end": 1330,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1317,
											"end": 1326,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1313,
											"end": 1331,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1305,
											"end": 1311,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1287,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 1287,
											"end": 1332,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "tag",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1402,
											"end": 1408,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1457,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1443,
											"end": 1452,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1434,
											"end": 1441,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1430,
											"end": 1453,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1458,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1471,
											"end": 1472,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1469,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1461,
											"end": 1473,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "tag",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1494,
											"end": 1517,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1494,
											"end": 1517,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "tag",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1804,
											"end": 1824,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1804,
											"end": 1824,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1853,
											"end": 1884,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1853,
											"end": 1884,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1843,
											"end": 1885,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1843,
											"end": 1885,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1896,
											"end": 1897,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1889,
											"end": 1901,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "tag",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1914,
											"end": 2168,
											"name": "tag",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 1914,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1982,
											"end": 1988,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 1996,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2043,
											"end": 2045,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2031,
											"end": 2040,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2022,
											"end": 2029,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2018,
											"end": 2041,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2014,
											"end": 2046,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "277"
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2059,
											"end": 2060,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2057,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "tag",
											"source": 15,
											"value": "277"
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "tag",
											"source": 15,
											"value": "278"
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2072,
											"end": 2111,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 2158,
											"end": 2160,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2130,
											"end": 2162,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2130,
											"end": 2162,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1914,
											"end": 2168,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2173,
											"end": 2501,
											"name": "tag",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2173,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2250,
											"end": 2256,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2264,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2266,
											"end": 2272,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2321,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 2307,
											"end": 2316,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2298,
											"end": 2305,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2294,
											"end": 2317,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2290,
											"end": 2322,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2287,
											"end": 2339,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2287,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "280"
										},
										{
											"begin": 2287,
											"end": 2339,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2335,
											"end": 2336,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2332,
											"end": 2333,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2325,
											"end": 2337,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2287,
											"end": 2339,
											"name": "tag",
											"source": 15,
											"value": "280"
										},
										{
											"begin": 2287,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2358,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 2377,
											"end": 2386,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2358,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 2358,
											"end": 2387,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2358,
											"end": 2387,
											"name": "tag",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 2358,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2348,
											"end": 2387,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2348,
											"end": 2387,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2406,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 2440,
											"end": 2442,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2429,
											"end": 2438,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2406,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 2406,
											"end": 2444,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2406,
											"end": 2444,
											"name": "tag",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 2406,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2396,
											"end": 2444,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2396,
											"end": 2444,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2491,
											"end": 2493,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2480,
											"end": 2489,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2476,
											"end": 2494,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2463,
											"end": 2495,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2453,
											"end": 2495,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2453,
											"end": 2495,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2173,
											"end": 2501,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2173,
											"end": 2501,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2173,
											"end": 2501,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2173,
											"end": 2501,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2173,
											"end": 2501,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2173,
											"end": 2501,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2506,
											"end": 2692,
											"name": "tag",
											"source": 15,
											"value": "51"
										},
										{
											"begin": 2506,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2565,
											"end": 2571,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2620,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2606,
											"end": 2615,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2593,
											"end": 2616,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2589,
											"end": 2621,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2586,
											"end": 2638,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2586,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 2586,
											"end": 2638,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2634,
											"end": 2635,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2631,
											"end": 2632,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2624,
											"end": 2636,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2586,
											"end": 2638,
											"name": "tag",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 2586,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2657,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "152"
										},
										{
											"begin": 2676,
											"end": 2685,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2657,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 2657,
											"end": 2686,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "tag",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2944,
											"end": 2950,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2952,
											"end": 2958,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3005,
											"end": 3007,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2993,
											"end": 3002,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2984,
											"end": 2991,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2980,
											"end": 3003,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2976,
											"end": 3008,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3021,
											"end": 3022,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3019,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3011,
											"end": 3023,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "tag",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 3063,
											"end": 3072,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "tag",
											"source": 15,
											"value": "289"
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3034,
											"end": 3073,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3034,
											"end": 3073,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3123,
											"end": 3125,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3112,
											"end": 3121,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3108,
											"end": 3126,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3095,
											"end": 3127,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3170,
											"end": 3175,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3163,
											"end": 3176,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3156,
											"end": 3177,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3149,
											"end": 3154,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3146,
											"end": 3178,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 3136,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "290"
										},
										{
											"begin": 3136,
											"end": 3196,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3189,
											"end": 3190,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3136,
											"end": 3196,
											"name": "tag",
											"source": 15,
											"value": "290"
										},
										{
											"begin": 3136,
											"end": 3196,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3215,
											"end": 3220,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3205,
											"end": 3220,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3205,
											"end": 3220,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3205,
											"end": 3220,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 3231,
											"end": 3358,
											"name": "tag",
											"source": 15,
											"value": "213"
										},
										{
											"begin": 3231,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3292,
											"end": 3302,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 3287,
											"end": 3290,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 3283,
											"end": 3303,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 3280,
											"end": 3281,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3273,
											"end": 3304,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3323,
											"end": 3327,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 3320,
											"end": 3321,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 3313,
											"end": 3328,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3347,
											"end": 3351,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 3344,
											"end": 3345,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3337,
											"end": 3352,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "tag",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3458,
											"end": 3464,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3466,
											"end": 3472,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3474,
											"end": 3480,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3482,
											"end": 3488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3535,
											"end": 3538,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 3523,
											"end": 3532,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3514,
											"end": 3521,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 3510,
											"end": 3533,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3506,
											"end": 3539,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3552,
											"end": 3553,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "tag",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3575,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "294"
										},
										{
											"begin": 3594,
											"end": 3603,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3575,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 3575,
											"end": 3604,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3575,
											"end": 3604,
											"name": "tag",
											"source": 15,
											"value": "294"
										},
										{
											"begin": 3575,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3565,
											"end": 3604,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 3565,
											"end": 3604,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3623,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 3657,
											"end": 3659,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3646,
											"end": 3655,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3642,
											"end": 3660,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3623,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 3623,
											"end": 3661,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3623,
											"end": 3661,
											"name": "tag",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 3623,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3613,
											"end": 3661,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3613,
											"end": 3661,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3708,
											"end": 3710,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3697,
											"end": 3706,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3693,
											"end": 3711,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3680,
											"end": 3712,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3670,
											"end": 3712,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3670,
											"end": 3712,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3763,
											"end": 3765,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 3752,
											"end": 3761,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3748,
											"end": 3766,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3735,
											"end": 3767,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3786,
											"end": 3804,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3827,
											"end": 3829,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3819,
											"end": 3825,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3816,
											"end": 3830,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3813,
											"end": 3847,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3813,
											"end": 3847,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 3813,
											"end": 3847,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3843,
											"end": 3844,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3840,
											"end": 3841,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3833,
											"end": 3845,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3813,
											"end": 3847,
											"name": "tag",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 3813,
											"end": 3847,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3881,
											"end": 3887,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3870,
											"end": 3879,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 3866,
											"end": 3888,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3856,
											"end": 3888,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3856,
											"end": 3888,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 3919,
											"end": 3923,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 3915,
											"end": 3917,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3911,
											"end": 3924,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3907,
											"end": 3934,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3897,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "297"
										},
										{
											"begin": 3897,
											"end": 3952,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3948,
											"end": 3949,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3945,
											"end": 3946,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3938,
											"end": 3950,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3897,
											"end": 3952,
											"name": "tag",
											"source": 15,
											"value": "297"
										},
										{
											"begin": 3897,
											"end": 3952,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3984,
											"end": 3986,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3971,
											"end": 3987,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4006,
											"end": 4008,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4002,
											"end": 4004,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3999,
											"end": 4009,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3996,
											"end": 4032,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3996,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 3996,
											"end": 4032,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "213"
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "tag",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4087,
											"end": 4089,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4081,
											"end": 4090,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4055,
											"end": 4057,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 4141,
											"end": 4154,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4141,
											"end": 4154,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4137,
											"end": 4159,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4137,
											"end": 4159,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4137,
											"end": 4159,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4161,
											"end": 4163,
											"name": "PUSH",
											"source": 15,
											"value": "3F"
										},
										{
											"begin": 4133,
											"end": 4164,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4129,
											"end": 4169,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4117,
											"end": 4170,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4117,
											"end": 4170,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4117,
											"end": 4170,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4185,
											"end": 4203,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4185,
											"end": 4203,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4185,
											"end": 4203,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 4205,
											"end": 4227,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4205,
											"end": 4227,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4205,
											"end": 4227,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 4182,
											"end": 4228,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 4179,
											"end": 4251,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4179,
											"end": 4251,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "301"
										},
										{
											"begin": 4179,
											"end": 4251,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "301"
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "213"
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "tag",
											"source": 15,
											"value": "301"
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4271,
											"end": 4281,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4267,
											"end": 4269,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4260,
											"end": 4282,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4306,
											"end": 4308,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4298,
											"end": 4304,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4291,
											"end": 4309,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4346,
											"end": 4353,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 4341,
											"end": 4343,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4336,
											"end": 4338,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4332,
											"end": 4334,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 4328,
											"end": 4339,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4324,
											"end": 4344,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4321,
											"end": 4354,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4367,
											"end": 4368,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4364,
											"end": 4365,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4357,
											"end": 4369,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "tag",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4418,
											"end": 4420,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4414,
											"end": 4416,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4410,
											"end": 4421,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4405,
											"end": 4407,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4397,
											"end": 4403,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4393,
											"end": 4408,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4380,
											"end": 4426,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 4468,
											"end": 4469,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4463,
											"end": 4465,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4458,
											"end": 4460,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4450,
											"end": 4456,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4446,
											"end": 4461,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4442,
											"end": 4466,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4435,
											"end": 4470,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4489,
											"end": 4495,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "tag",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4574,
											"end": 4580,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4582,
											"end": 4588,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4635,
											"end": 4637,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4623,
											"end": 4632,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4614,
											"end": 4621,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4610,
											"end": 4633,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4606,
											"end": 4638,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4603,
											"end": 4655,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4603,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 4603,
											"end": 4655,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4651,
											"end": 4652,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4648,
											"end": 4649,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4641,
											"end": 4653,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4603,
											"end": 4655,
											"name": "tag",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 4603,
											"end": 4655,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "305"
										},
										{
											"begin": 4693,
											"end": 4702,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "tag",
											"source": 15,
											"value": "305"
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4722,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 4756,
											"end": 4758,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4745,
											"end": 4754,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4741,
											"end": 4759,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4722,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 4722,
											"end": 4760,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 4722,
											"end": 4760,
											"name": "tag",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 4722,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4712,
											"end": 4760,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4712,
											"end": 4760,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "tag",
											"source": 15,
											"value": "82"
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4850,
											"end": 4851,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 4846,
											"end": 4858,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4846,
											"end": 4858,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4846,
											"end": 4858,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 4846,
											"end": 4858,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4893,
											"end": 4905,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4893,
											"end": 4905,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4893,
											"end": 4905,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4914,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "308"
										},
										{
											"begin": 4914,
											"end": 4975,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4968,
											"end": 4972,
											"name": "PUSH",
											"source": 15,
											"value": "7F"
										},
										{
											"begin": 4960,
											"end": 4966,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4956,
											"end": 4973,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4946,
											"end": 4973,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4946,
											"end": 4973,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4914,
											"end": 4975,
											"name": "tag",
											"source": 15,
											"value": "308"
										},
										{
											"begin": 4914,
											"end": 4975,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5021,
											"end": 5023,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5013,
											"end": 5019,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5010,
											"end": 5024,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 4990,
											"end": 5008,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4987,
											"end": 5025,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4984,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 4984,
											"end": 5145,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5067,
											"end": 5077,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 5062,
											"end": 5065,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 5058,
											"end": 5078,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 5055,
											"end": 5056,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5048,
											"end": 5079,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5102,
											"end": 5106,
											"name": "PUSH",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 5099,
											"end": 5100,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 5092,
											"end": 5107,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5130,
											"end": 5134,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 5127,
											"end": 5128,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5120,
											"end": 5135,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4984,
											"end": 5145,
											"name": "tag",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 4984,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4984,
											"end": 5145,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 6396,
											"end": 6809,
											"name": "tag",
											"source": 15,
											"value": "114"
										},
										{
											"begin": 6396,
											"end": 6809,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6598,
											"end": 6600,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6580,
											"end": 6601,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6580,
											"end": 6601,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6580,
											"end": 6601,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6637,
											"end": 6639,
											"name": "PUSH",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 6617,
											"end": 6635,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6617,
											"end": 6635,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6617,
											"end": 6635,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6610,
											"end": 6640,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6676,
											"end": 6710,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
										},
										{
											"begin": 6671,
											"end": 6673,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6656,
											"end": 6674,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6656,
											"end": 6674,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6649,
											"end": 6711,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1DDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6742,
											"end": 6744,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 6727,
											"end": 6745,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6727,
											"end": 6745,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6720,
											"end": 6767,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6799,
											"end": 6802,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 6784,
											"end": 6803,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6784,
											"end": 6803,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6396,
											"end": 6809,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 8051,
											"end": 8521,
											"name": "tag",
											"source": 15,
											"value": "156"
										},
										{
											"begin": 8051,
											"end": 8521,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8230,
											"end": 8233,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8268,
											"end": 8274,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8262,
											"end": 8275,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 8284,
											"end": 8337,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 8330,
											"end": 8336,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8325,
											"end": 8328,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8318,
											"end": 8322,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8310,
											"end": 8316,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 8306,
											"end": 8323,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8284,
											"end": 8337,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 8284,
											"end": 8337,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 8284,
											"end": 8337,
											"name": "tag",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 8284,
											"end": 8337,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8400,
											"end": 8413,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8400,
											"end": 8413,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 8359,
											"end": 8375,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8359,
											"end": 8375,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8359,
											"end": 8375,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8359,
											"end": 8375,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8422,
											"end": 8479,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 8400,
											"end": 8413,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8359,
											"end": 8375,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8456,
											"end": 8460,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8444,
											"end": 8461,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 8444,
											"end": 8461,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8422,
											"end": 8479,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 8422,
											"end": 8479,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 8422,
											"end": 8479,
											"name": "tag",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 8422,
											"end": 8479,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8495,
											"end": 8515,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8495,
											"end": 8515,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 8051,
											"end": 8521,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8051,
											"end": 8521,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 9750,
											"end": 9877,
											"name": "tag",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 9750,
											"end": 9877,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9811,
											"end": 9821,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 9806,
											"end": 9809,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 9802,
											"end": 9822,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 9799,
											"end": 9800,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9792,
											"end": 9823,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9842,
											"end": 9846,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 9839,
											"end": 9840,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 9832,
											"end": 9847,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9866,
											"end": 9870,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 9863,
											"end": 9864,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9856,
											"end": 9871,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 9882,
											"end": 10007,
											"name": "tag",
											"source": 15,
											"value": "185"
										},
										{
											"begin": 9882,
											"end": 10007,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9922,
											"end": 9926,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9950,
											"end": 9951,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9947,
											"end": 9948,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9944,
											"end": 9952,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 9941,
											"end": 9975,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9941,
											"end": 9975,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 9941,
											"end": 9975,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9955,
											"end": 9973,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 9955,
											"end": 9973,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 9955,
											"end": 9973,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 9955,
											"end": 9973,
											"name": "tag",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 9955,
											"end": 9973,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9992,
											"end": 10001,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 9992,
											"end": 10001,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9882,
											"end": 10007,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 10012,
											"end": 10140,
											"name": "tag",
											"source": 15,
											"value": "187"
										},
										{
											"begin": 10012,
											"end": 10140,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10052,
											"end": 10055,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10083,
											"end": 10084,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10079,
											"end": 10085,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 10076,
											"end": 10077,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10073,
											"end": 10086,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 10070,
											"end": 10109,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10070,
											"end": 10109,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 10070,
											"end": 10109,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10089,
											"end": 10107,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 10089,
											"end": 10107,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 10089,
											"end": 10107,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 10089,
											"end": 10107,
											"name": "tag",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 10089,
											"end": 10107,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10125,
											"end": 10134,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10125,
											"end": 10134,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10012,
											"end": 10140,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 10499,
											"end": 10913,
											"name": "tag",
											"source": 15,
											"value": "201"
										},
										{
											"begin": 10499,
											"end": 10913,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10701,
											"end": 10703,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10683,
											"end": 10704,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10683,
											"end": 10704,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10683,
											"end": 10704,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10740,
											"end": 10742,
											"name": "PUSH",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 10720,
											"end": 10738,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10720,
											"end": 10738,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10720,
											"end": 10738,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10713,
											"end": 10743,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10779,
											"end": 10813,
											"name": "PUSH",
											"source": 15,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 10774,
											"end": 10776,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 10759,
											"end": 10777,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10759,
											"end": 10777,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10752,
											"end": 10814,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10845,
											"end": 10847,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 10830,
											"end": 10848,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10830,
											"end": 10848,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10823,
											"end": 10871,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10903,
											"end": 10906,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 10888,
											"end": 10907,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10888,
											"end": 10907,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10499,
											"end": 10913,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 10918,
											"end": 11053,
											"name": "tag",
											"source": 15,
											"value": "208"
										},
										{
											"begin": 10918,
											"end": 11053,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10957,
											"end": 10960,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10978,
											"end": 10995,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 10978,
											"end": 10995,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10978,
											"end": 10995,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10975,
											"end": 11018,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "334"
										},
										{
											"begin": 10975,
											"end": 11018,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10998,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "334"
										},
										{
											"begin": 10998,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 10998,
											"end": 11016,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 10998,
											"end": 11016,
											"name": "tag",
											"source": 15,
											"value": "334"
										},
										{
											"begin": 10998,
											"end": 11016,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11045,
											"end": 11046,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 11034,
											"end": 11047,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11034,
											"end": 11047,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10918,
											"end": 11053,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 11058,
											"end": 11185,
											"name": "tag",
											"source": 15,
											"value": "254"
										},
										{
											"begin": 11058,
											"end": 11185,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11119,
											"end": 11129,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 11114,
											"end": 11117,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 11110,
											"end": 11130,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 11107,
											"end": 11108,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11100,
											"end": 11131,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11150,
											"end": 11154,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 11147,
											"end": 11148,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 11140,
											"end": 11155,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11174,
											"end": 11178,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 11171,
											"end": 11172,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11164,
											"end": 11179,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 11190,
											"end": 11310,
											"name": "tag",
											"source": 15,
											"value": "210"
										},
										{
											"begin": 11190,
											"end": 11310,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11230,
											"end": 11231,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11256,
											"end": 11257,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11246,
											"end": 11281,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "338"
										},
										{
											"begin": 11246,
											"end": 11281,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11261,
											"end": 11279,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "338"
										},
										{
											"begin": 11261,
											"end": 11279,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "254"
										},
										{
											"begin": 11261,
											"end": 11279,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 11261,
											"end": 11279,
											"name": "tag",
											"source": 15,
											"value": "338"
										},
										{
											"begin": 11261,
											"end": 11279,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11295,
											"end": 11304,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 11295,
											"end": 11304,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11190,
											"end": 11310,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 11315,
											"end": 11427,
											"name": "tag",
											"source": 15,
											"value": "219"
										},
										{
											"begin": 11315,
											"end": 11427,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11347,
											"end": 11348,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11373,
											"end": 11374,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11363,
											"end": 11398,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "341"
										},
										{
											"begin": 11363,
											"end": 11398,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11378,
											"end": 11396,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "341"
										},
										{
											"begin": 11378,
											"end": 11396,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "254"
										},
										{
											"begin": 11378,
											"end": 11396,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 11378,
											"end": 11396,
											"name": "tag",
											"source": 15,
											"value": "341"
										},
										{
											"begin": 11378,
											"end": 11396,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11412,
											"end": 11421,
											"name": "MOD",
											"source": 15
										},
										{
											"begin": 11412,
											"end": 11421,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11315,
											"end": 11427,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 11432,
											"end": 11559,
											"name": "tag",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 11432,
											"end": 11559,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11493,
											"end": 11503,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 11488,
											"end": 11491,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 11484,
											"end": 11504,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 11481,
											"end": 11482,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11474,
											"end": 11505,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11524,
											"end": 11528,
											"name": "PUSH",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 11521,
											"end": 11522,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 11514,
											"end": 11529,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11548,
											"end": 11552,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 11545,
											"end": 11546,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11538,
											"end": 11553,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 11564,
											"end": 12053,
											"name": "tag",
											"source": 15,
											"value": "233"
										},
										{
											"begin": 11564,
											"end": 12053,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11833,
											"end": 11848,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 11833,
											"end": 11848,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11833,
											"end": 11848,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 11815,
											"end": 11849,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11815,
											"end": 11849,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11885,
											"end": 11900,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11885,
											"end": 11900,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 11880,
											"end": 11882,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11865,
											"end": 11883,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11865,
											"end": 11883,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11858,
											"end": 11901,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11932,
											"end": 11934,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 11917,
											"end": 11935,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11917,
											"end": 11935,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11910,
											"end": 11944,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11910,
											"end": 11944,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11910,
											"end": 11944,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11980,
											"end": 11983,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 11975,
											"end": 11977,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 11960,
											"end": 11978,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11960,
											"end": 11978,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11953,
											"end": 11984,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11953,
											"end": 11984,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11953,
											"end": 11984,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11758,
											"end": 11762,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11758,
											"end": 11762,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12001,
											"end": 12047,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "344"
										},
										{
											"begin": 12001,
											"end": 12047,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12027,
											"end": 12046,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12027,
											"end": 12046,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12019,
											"end": 12025,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12001,
											"end": 12047,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 12001,
											"end": 12047,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 12001,
											"end": 12047,
											"name": "tag",
											"source": 15,
											"value": "344"
										},
										{
											"begin": 12001,
											"end": 12047,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11993,
											"end": 12047,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 11564,
											"end": 12053,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11564,
											"end": 12053,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 12058,
											"end": 12307,
											"name": "tag",
											"source": 15,
											"value": "236"
										},
										{
											"begin": 12058,
											"end": 12307,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12127,
											"end": 12133,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12180,
											"end": 12182,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12168,
											"end": 12177,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12159,
											"end": 12166,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12155,
											"end": 12178,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 12151,
											"end": 12183,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 12148,
											"end": 12200,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12148,
											"end": 12200,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 12148,
											"end": 12200,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12196,
											"end": 12197,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12193,
											"end": 12194,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 12186,
											"end": 12198,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 12148,
											"end": 12200,
											"name": "tag",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 12148,
											"end": 12200,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12228,
											"end": 12237,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12222,
											"end": 12238,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 12247,
											"end": 12277,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "152"
										},
										{
											"begin": 12271,
											"end": 12276,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12247,
											"end": 12277,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 12247,
											"end": 12277,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x38ecbca9e6fb443b914b65ad115d20ab1ac3b675424591c549fcba1ff1147c9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd4bb8f45aaac22eec2165263a0bc3def8638af01e927ba677f8518af90af515\",\"dweb:/ipfs/QmeYhUpBbLa8vskLVAP7foGqk2oQS5PoodhpsvHHzGWkm2\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb0308d8c5873c6e6c9a712669d33f77f3eb04dfbd3559ed901fa8d799673d176\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0280faa8e071ed4648d8538354452be776b7e5ba5b965d4cf9b4d3f6509c920c\",\"dweb:/ipfs/QmT9qNNpCH6NLMheAwxRHinRvuQZvLdg3TsQmCnk1aMVaq\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb0308d8c5873c6e6c9a712669d33f77f3eb04dfbd3559ed901fa8d799673d176\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0280faa8e071ed4648d8538354452be776b7e5ba5b965d4cf9b4d3f6509c920c\",\"dweb:/ipfs/QmT9qNNpCH6NLMheAwxRHinRvuQZvLdg3TsQmCnk1aMVaq\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
				"ERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenByIndex(uint256)": {
								"details": "See {IERC721Enumerable-tokenByIndex}."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "See {IERC721Enumerable-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":\"ERC721Enumerable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x38ecbca9e6fb443b914b65ad115d20ab1ac3b675424591c549fcba1ff1147c9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd4bb8f45aaac22eec2165263a0bc3def8638af01e927ba677f8518af90af515\",\"dweb:/ipfs/QmeYhUpBbLa8vskLVAP7foGqk2oQS5PoodhpsvHHzGWkm2\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb0308d8c5873c6e6c9a712669d33f77f3eb04dfbd3559ed901fa8d799673d176\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0280faa8e071ed4648d8538354452be776b7e5ba5b965d4cf9b4d3f6509c920c\",\"dweb:/ipfs/QmT9qNNpCH6NLMheAwxRHinRvuQZvLdg3TsQmCnk1aMVaq\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afbedcf17f31db719e6fdc56caa8f458799c5fa2eb94cb1e94ef18f89af85768\",\"dweb:/ipfs/QmVmqRdBfbgYThpZSoAJ5o9mnAMjx8mCHHjv3Rh8cQAAg3\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ERC721URIStorage": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x38ecbca9e6fb443b914b65ad115d20ab1ac3b675424591c549fcba1ff1147c9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd4bb8f45aaac22eec2165263a0bc3def8638af01e927ba677f8518af90af515\",\"dweb:/ipfs/QmeYhUpBbLa8vskLVAP7foGqk2oQS5PoodhpsvHHzGWkm2\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb0308d8c5873c6e6c9a712669d33f77f3eb04dfbd3559ed901fa8d799673d176\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0280faa8e071ed4648d8538354452be776b7e5ba5b965d4cf9b4d3f6509c920c\",\"dweb:/ipfs/QmT9qNNpCH6NLMheAwxRHinRvuQZvLdg3TsQmCnk1aMVaq\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x1cbe42915bc66227970fe99bc0f783eb1de30f2b48f984af01ad45edb9658698\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2baa08eb67d9da46e6c4c049f17b7684a1c68c5268d0f466cfa0eb23ce2bf9b0\",\"dweb:/ipfs/Qmdnj8zj4PfErB2HM2eKmDt7FrqrhggsZ6Qd8MpD593tgj\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"IERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204c1f2e7c689e9fb910c41fe5538b4cbe7bcdc6ee27f07d20804a7adc9819c8fd64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204c1f2e7c689e9fb910c41fe5538b4cbe7bcdc6ee27f07d20804a7adc9819c8fd64736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C 0x1F 0x2E PUSH29 0x689E9FB910C41FE5538B4CBE7BCDC6EE27F07D20804A7ADC9819C8FD64 PUSH20 0x6F6C634300080D00330000000000000000000000 ",
							"sourceMap": "194:8061:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8061:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204c1f2e7c689e9fb910c41fe5538b4cbe7bcdc6ee27f07d20804a7adc9819c8fd64736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C 0x1F 0x2E PUSH29 0x689E9FB910C41FE5538B4CBE7BCDC6EE27F07D20804A7ADC9819C8FD64 PUSH20 0x6F6C634300080D00330000000000000000000000 ",
							"sourceMap": "194:8061:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204c1f2e7c689e9fb910c41fe5538b4cbe7bcdc6ee27f07d20804a7adc9819c8fd64736f6c634300080d0033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":146:2031  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":146:2031  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122034d0952addb5850181ff5eb122aefecf8e8fbd02a60daca82e2047e5a99f04bf64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122034d0952addb5850181ff5eb122aefecf8e8fbd02a60daca82e2047e5a99f04bf64736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE 0xD0 SWAP6 0x2A 0xDD 0xB5 DUP6 ADD DUP2 SELFDESTRUCT 0x5E 0xB1 0x22 0xAE INVALID 0xCF DUP15 DUP16 0xBD MUL 0xA6 0xD 0xAC 0xA8 0x2E KECCAK256 SELFBALANCE 0xE5 0xA9 SWAP16 DIV 0xBF PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "146:1885:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;146:1885:12;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122034d0952addb5850181ff5eb122aefecf8e8fbd02a60daca82e2047e5a99f04bf64736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE 0xD0 SWAP6 0x2A 0xDD 0xB5 DUP6 ADD DUP2 SELFDESTRUCT 0x5E 0xB1 0x22 0xAE INVALID 0xCF DUP15 DUP16 0xBD MUL 0xA6 0xD 0xAC 0xA8 0x2E KECCAK256 SELFBALANCE 0xE5 0xA9 SWAP16 DIV 0xBF PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "146:1885:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122034d0952addb5850181ff5eb122aefecf8e8fbd02a60daca82e2047e5a99f04bf64736f6c634300080d0033",
									".code": [
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/NFTCollection.sol:116:26:\n    |\n116 |     function royaltyInfo(uint256 _tokenId, uint256 _salePrice) external view\n    |                          ^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 4589,
					"file": "contracts/NFTCollection.sol",
					"start": 4573
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> contracts/NFTCollection.sol:43:5:\n   |\n43 |     function _baseURI() internal view override returns (string memory) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 1804,
					"file": "contracts/NFTCollection.sol",
					"start": 1677
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to view\n  --> contracts/NFTCollection.sol:59:5:\n   |\n59 |     function royaltiesReceiver() external returns(address) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 2327,
					"file": "contracts/NFTCollection.sol",
					"start": 2230
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/NFTCollection.sol": {
				"ast": {
					"absolutePath": "contracts/NFTCollection.sol",
					"exportedSymbols": {
						"Address": [
							2262
						],
						"Context": [
							2284
						],
						"ERC165": [
							2511
						],
						"ERC721": [
							1309
						],
						"ERC721Enumerable": [
							1781
						],
						"ERC721URIStorage": [
							1909
						],
						"IERC165": [
							2523
						],
						"IERC2981": [
							338
						],
						"IERC721": [
							1425
						],
						"IERC721Enumerable": [
							1940
						],
						"IERC721Metadata": [
							1967
						],
						"IERC721Receiver": [
							1443
						],
						"Ownable": [
							443
						],
						"Strings": [
							2487
						],
						"Token": [
							322
						]
					},
					"id": 323,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3:23:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 323,
							"sourceUnit": 1910,
							"src": "61:131:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 323,
							"sourceUnit": 1782,
							"src": "193:131:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interface/IERC2981.sol",
							"file": "./interface/IERC2981.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 323,
							"sourceUnit": 339,
							"src": "489:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 323,
							"sourceUnit": 444,
							"src": "659:105:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 443,
										"src": "884:7:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "884:7:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ERC721Enumerable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1781,
										"src": "893:16:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "893:16:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "ERC721URIStorage",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1909,
										"src": "911:16:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "911:16:0"
								}
							],
							"canonicalName": "Token",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "766:98:0",
								"text": " @title Sample NFT contract\n @dev Extends ERC-721 NFT contract and implements ERC-2981"
							},
							"fullyImplemented": true,
							"id": 322,
							"linearizedBaseContracts": [
								322,
								1909,
								1781,
								1940,
								1309,
								1967,
								1425,
								2511,
								2523,
								443,
								2284
							],
							"name": "Token",
							"nameLocation": "875:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 16,
									"mutability": "mutable",
									"name": "hashes",
									"nameLocation": "1025:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 322,
									"src": "1000:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint8_$",
										"typeString": "mapping(string => uint8)"
									},
									"typeName": {
										"id": 15,
										"keyType": {
											"id": 13,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "1008:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"nodeType": "Mapping",
										"src": "1000:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint8_$",
											"typeString": "mapping(string => uint8)"
										},
										"valueType": {
											"id": 14,
											"name": "uint8",
											"nodeType": "ElementaryTypeName",
											"src": "1018:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"functionSelector": "32cb6b0c",
									"id": 19,
									"mutability": "constant",
									"name": "MAX_SUPPLY",
									"nameLocation": "1103:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 322,
									"src": "1079:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 17,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1079:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "37373737",
										"id": 18,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1116:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_7777_by_1",
											"typeString": "int_const 7777"
										},
										"value": "7777"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 21,
									"mutability": "mutable",
									"name": "_royaltiesReceiver",
									"nameLocation": "1184:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 322,
									"src": "1168:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 20,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1168:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "2175c990",
									"id": 23,
									"mutability": "mutable",
									"name": "royaltiesPercentageInBips",
									"nameLocation": "1293:25:0",
									"nodeType": "VariableDeclaration",
									"scope": 322,
									"src": "1277:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 22,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1277:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "f3cea5493d790af0133817606f7350a91d7f154ea52eaa79d179d4d231e50102",
									"id": 29,
									"name": "Mint",
									"nameLocation": "1346:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1359:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "1351:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1376:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "1368:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1368:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1350:36:0"
									},
									"src": "1340:47:0"
								},
								{
									"body": {
										"id": 48,
										"nodeType": "Block",
										"src": "1496:126:0",
										"statements": [
											{
												"expression": {
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 40,
														"name": "royaltiesPercentageInBips",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "1506:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 41,
														"name": "_royaltiesPercentageInBips",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "1534:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1506:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1506:54:0"
											},
											{
												"expression": {
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 44,
														"name": "_royaltiesReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "1570:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 45,
														"name": "initialRoyaltiesReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "1591:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1570:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "1570:45:0"
											}
										]
									},
									"id": 49,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "53616d706c65204e4654",
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1475:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_8237589431b5f94a76eda868e6cf49cb9df9f8a0ac91bd6080ac41bd0453c4b4",
														"typeString": "literal_string \"Sample NFT\""
													},
													"value": "Sample NFT"
												},
												{
													"hexValue": "4e4654",
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1489:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_9c4138cd0a1311e4748f70d0fe3dc55f0f5f75e0f20db731225cbc3b8914016a",
														"typeString": "literal_string \"NFT\""
													},
													"value": "NFT"
												}
											],
											"id": 38,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 35,
												"name": "ERC721",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1309,
												"src": "1468:6:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1468:27:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "initialRoyaltiesReceiver",
												"nameLocation": "1409:24:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1401:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1401:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "_royaltiesPercentageInBips",
												"nameLocation": "1440:26:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1435:31:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1435:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1400:67:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1496:0:0"
									},
									"scope": 322,
									"src": "1389:233:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										660
									],
									"body": {
										"id": 58,
										"nodeType": "Block",
										"src": "1744:60:0",
										"statements": [
											{
												"expression": {
													"hexValue": "68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f",
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1761:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_9962ece65b578af633a4cd71e7e539261ebe22823aa4ca702ec34245d8300d7d",
														"typeString": "literal_string \"https://gateway.pinata.cloud/ipfs/\""
													},
													"value": "https://gateway.pinata.cloud/ipfs/"
												},
												"functionReturnParameters": 55,
												"id": 57,
												"nodeType": "Return",
												"src": "1754:43:0"
											}
										]
									},
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "1628:44:0",
										"text": "Overrides ERC-721's _baseURI function "
									},
									"id": 59,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "1686:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 52,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1711:8:0"
									},
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1729:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 53,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1729:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:0"
									},
									"scope": 322,
									"src": "1677:127:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1297,
										1619
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "1930:61:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 74,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "1967:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 75,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "1973:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 76,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 65,
															"src": "1977:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 71,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1940:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Token_$322_$",
																"typeString": "type(contract super Token)"
															}
														},
														"id": 73,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1619,
														"src": "1940:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1940:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "1940:44:0"
											}
										]
									},
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "1819:20:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 69,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 67,
												"name": "ERC721",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1309,
												"src": "1904:6:0"
											},
											{
												"id": 68,
												"name": "ERC721Enumerable",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1781,
												"src": "1912:16:0"
											}
										],
										"src": "1895:34:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1848:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "1840:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1840:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1862:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "1854:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1874:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "1866:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1839:42:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1930:0:0"
									},
									"scope": 322,
									"src": "1810:181:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1093,
										1908
									],
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "2077:37:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 91,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "2099:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 88,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2087:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Token_$322_$",
																"typeString": "type(contract super Token)"
															}
														},
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1908,
														"src": "2087:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2087:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "2087:20:0"
											}
										]
									},
									"id": 95,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "2006:5:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 86,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 84,
												"name": "ERC721",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1309,
												"src": "2051:6:0"
											},
											{
												"id": 85,
												"name": "ERC721URIStorage",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1909,
												"src": "2059:16:0"
											}
										],
										"src": "2042:34:0"
									},
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "2012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2011:17:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2077:0:0"
									},
									"scope": 322,
									"src": "1997:117:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "2285:42:0",
										"statements": [
											{
												"expression": {
													"id": 101,
													"name": "_royaltiesReceiver",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 21,
													"src": "2302:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 100,
												"id": 102,
												"nodeType": "Return",
												"src": "2295:25:0"
											}
										]
									},
									"documentation": {
										"id": 96,
										"nodeType": "StructuredDocumentation",
										"src": "2120:105:0",
										"text": "@notice Getter function for _royaltiesReceiver\n @return the address of the royalties recipient"
									},
									"functionSelector": "a3a51bd5",
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "royaltiesReceiver",
									"nameLocation": "2239:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2256:2:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2276:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2276:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2275:9:0"
									},
									"scope": 322,
									"src": "2230:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "2612:140:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 113,
																"name": "newRoyaltiesReceiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 107,
																"src": "2630:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 114,
																"name": "_royaltiesReceiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "2654:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2630:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 112,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2622:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2622:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "2622:51:0"
											},
											{
												"expression": {
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 118,
														"name": "_royaltiesReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "2704:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 119,
														"name": "newRoyaltiesReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "2725:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2704:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "2704:41:0"
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "2333:191:0",
										"text": "@notice Changes the royalties' recipient address (in case rights are\n         transferred for instance)\n @param newRoyaltiesReceiver - address of the new royalties recipient"
									},
									"functionSelector": "b5143715",
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 110,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 109,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 385,
												"src": "2602:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2602:9:0"
										}
									],
									"name": "setRoyaltiesReceiver",
									"nameLocation": "2538:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "newRoyaltiesReceiver",
												"nameLocation": "2567:20:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "2559:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2559:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:30:0"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2612:0:0"
									},
									"scope": 322,
									"src": "2529:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										651,
										1856
									],
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "3097:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 136,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "3129:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 134,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3114:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Token_$322_$",
																"typeString": "type(contract super Token)"
															}
														},
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1856,
														"src": "3114:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3114:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 133,
												"id": 138,
												"nodeType": "Return",
												"src": "3107:30:0"
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "2758:220:0",
										"text": "@notice Returns a token's URI\n @dev See {IERC721Metadata-tokenURI}.\n @param tokenId - the id of the token whose URI to return\n @return a string containing an URI pointing to the token's ressource"
									},
									"functionSelector": "c87b56dd",
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2992:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 130,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 128,
												"name": "ERC721",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1309,
												"src": "3043:6:0"
											},
											{
												"id": 129,
												"name": "ERC721URIStorage",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1909,
												"src": "3051:16:0"
											}
										],
										"src": "3034:34:0"
									},
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3009:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "3001:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3001:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3000:17:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "3082:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 131,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3082:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3081:15:0"
									},
									"scope": 322,
									"src": "2983:161:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										537,
										1493
									],
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3335:113:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 151,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "3352:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 153,
																		"name": "IERC2981",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 338,
																		"src": "3372:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC2981_$338_$",
																			"typeString": "type(contract IERC2981)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC2981_$338_$",
																			"typeString": "type(contract IERC2981)"
																		}
																	],
																	"id": 152,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "3367:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 154,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3367:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC2981_$338",
																	"typeString": "type(contract IERC2981)"
																}
															},
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "3367:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "3352:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 159,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "3429:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 157,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "3405:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_Token_$322_$",
																	"typeString": "type(contract super Token)"
																}
															},
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1493,
															"src": "3405:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 160,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3405:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3352:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 150,
												"id": 162,
												"nodeType": "Return",
												"src": "3345:96:0"
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "3150:63:0",
										"text": "@notice Informs callers that this contract supports ERC2981"
									},
									"functionSelector": "01ffc9a7",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3227:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 147,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 145,
												"name": "ERC721",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1309,
												"src": "3290:6:0"
											},
											{
												"id": 146,
												"name": "ERC721Enumerable",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1781,
												"src": "3298:16:0"
											}
										],
										"src": "3281:34:0"
									},
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3252:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3245:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 142,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3245:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3244:20:0"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3329:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 148,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3329:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3328:6:0"
									},
									"scope": 322,
									"src": "3218:230:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "3764:364:0",
										"statements": [
											{
												"assignments": [
													174
												],
												"declarations": [
													{
														"constant": false,
														"id": 174,
														"mutability": "mutable",
														"name": "tokenCount",
														"nameLocation": "3782:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 225,
														"src": "3774:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 173,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3774:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 178,
												"initialValue": {
													"arguments": [
														{
															"id": 176,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "3805:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 175,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 561,
														"src": "3795:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3795:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3774:38:0"
											},
											{
												"assignments": [
													183
												],
												"declarations": [
													{
														"constant": false,
														"id": 183,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "3839:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 225,
														"src": "3822:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 181,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3822:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 182,
															"nodeType": "ArrayTypeName",
															"src": "3822:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 189,
												"initialValue": {
													"arguments": [
														{
															"id": 187,
															"name": "tokenCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "3862:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3848:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 184,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3852:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 185,
															"nodeType": "ArrayTypeName",
															"src": "3852:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3848:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3822:51:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 190,
														"name": "tokenCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "3888:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3902:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3888:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 223,
													"nodeType": "Block",
													"src": "3959:163:0",
													"statements": [
														{
															"body": {
																"id": 219,
																"nodeType": "Block",
																"src": "4010:75:0",
																"statements": [
																	{
																		"expression": {
																			"id": 217,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 210,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 183,
																					"src": "4028:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 212,
																				"indexExpression": {
																					"id": 211,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 201,
																					"src": "4035:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "4028:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 214,
																						"name": "_owner",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 167,
																						"src": "4060:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"id": 215,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 201,
																						"src": "4068:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 213,
																					"name": "tokenOfOwnerByIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1521,
																					"src": "4040:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (address,uint256) view returns (uint256)"
																					}
																				},
																				"id": 216,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4040:30:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4028:42:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 218,
																		"nodeType": "ExpressionStatement",
																		"src": "4028:42:0"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 204,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "3991:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 205,
																	"name": "tokenCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 174,
																	"src": "3993:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3991:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 220,
															"initializationExpression": {
																"assignments": [
																	201
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 201,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "3986:1:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 220,
																		"src": "3978:9:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 200,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "3978:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 203,
																"initialValue": {
																	"hexValue": "30",
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3988:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "3978:11:0"
															},
															"loopExpression": {
																"expression": {
																	"id": 208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "4005:3:0",
																	"subExpression": {
																		"id": 207,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 201,
																		"src": "4005:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 209,
																"nodeType": "ExpressionStatement",
																"src": "4005:3:0"
															},
															"nodeType": "ForStatement",
															"src": "3973:112:0"
														},
														{
															"expression": {
																"id": 221,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "4105:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"functionReturnParameters": 172,
															"id": 222,
															"nodeType": "Return",
															"src": "4098:13:0"
														}
													]
												},
												"id": 224,
												"nodeType": "IfStatement",
												"src": "3884:238:0",
												"trueBody": {
													"id": 199,
													"nodeType": "Block",
													"src": "3905:48:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3940:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "3926:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (uint256[] memory)"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 193,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "3930:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 194,
																		"nodeType": "ArrayTypeName",
																		"src": "3930:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[]"
																		}
																	}
																},
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3926:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"functionReturnParameters": 172,
															"id": 198,
															"nodeType": "Return",
															"src": "3919:23:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3455:208:0",
										"text": "@notice Returns all the tokens owned by an address\n @param _owner - the address to query\n @return ownerTokens - an array containing the ids of all tokens\n         owned by the address"
									},
									"functionSelector": "8462151c",
									"id": 226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokensOfOwner",
									"nameLocation": "3677:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "3699:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3691:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3691:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3690:16:0"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "ownerTokens",
												"nameLocation": "3750:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3733:28:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 169,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3733:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 170,
													"nodeType": "ArrayTypeName",
													"src": "3733:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3732:31:0"
									},
									"scope": 322,
									"src": "3668:460:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "4679:134:0",
										"statements": [
											{
												"assignments": [
													239
												],
												"declarations": [
													{
														"constant": false,
														"id": 239,
														"mutability": "mutable",
														"name": "_royalties",
														"nameLocation": "4697:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 251,
														"src": "4689:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 238,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4689:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 240,
																	"name": "_salePrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 231,
																	"src": "4711:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 241,
																	"name": "royaltiesPercentageInBips",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "4724:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4711:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 243,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4710:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 244,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4753:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "4710:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4689:67:0"
											},
											{
												"expression": {
													"components": [
														{
															"id": 247,
															"name": "_royaltiesReceiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "4775:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 248,
															"name": "_royalties",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "4795:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 249,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4774:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,uint256)"
													}
												},
												"functionReturnParameters": 237,
												"id": 250,
												"nodeType": "Return",
												"src": "4767:39:0"
											}
										]
									},
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "4244:303:0",
										"text": "@param _tokenId - the NFT asset queried for royalty information\n @param _salePrice - sale price of the NFT asset specified by _tokenId\n @return receiver - address of who should be sent the royalty payment\n @return royaltyAmount - the royalty payment amount for _value sale price"
									},
									"functionSelector": "2a55205a",
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyInfo",
									"nameLocation": "4561:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "4581:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "4573:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4573:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "_salePrice",
												"nameLocation": "4599:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "4591:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4572:38:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "4646:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "4638:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4638:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "royaltyAmount",
												"nameLocation": "4664:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "4656:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4637:41:0"
									},
									"scope": 322,
									"src": "4552:261:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 320,
										"nodeType": "Block",
										"src": "5142:440:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 265,
																	"name": "totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1532,
																	"src": "5160:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5160:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 267,
																"name": "MAX_SUPPLY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "5177:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5160:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c6c20746f6b656e73206d696e746564",
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5189:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a400c07bb67a06c03f358edc1048982b27f79d13cec217cd075a5ae667872ec",
																"typeString": "literal_string \"All tokens minted\""
															},
															"value": "All tokens minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a400c07bb67a06c03f358edc1048982b27f79d13cec217cd075a5ae667872ec",
																"typeString": "literal_string \"All tokens minted\""
															}
														],
														"id": 264,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5152:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5152:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 271,
												"nodeType": "ExpressionStatement",
												"src": "5152:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 275,
																			"name": "hash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 257,
																			"src": "5233:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5227:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 273,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "5227:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5227:11:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "5227:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5248:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5227:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 272,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5219:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5219:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 281,
												"nodeType": "ExpressionStatement",
												"src": "5219:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 283,
																	"name": "hashes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5299:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint8_$",
																		"typeString": "mapping(string memory => uint8)"
																	}
																},
																"id": 285,
																"indexExpression": {
																	"id": 284,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 257,
																	"src": "5306:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5299:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "31",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5315:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "5299:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 282,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5291:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5291:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 289,
												"nodeType": "ExpressionStatement",
												"src": "5291:26:0"
											},
											{
												"expression": {
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 290,
															"name": "hashes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "5365:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint8_$",
																"typeString": "mapping(string memory => uint8)"
															}
														},
														"id": 292,
														"indexExpression": {
															"id": 291,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "5372:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5365:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 293,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5380:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "5365:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 295,
												"nodeType": "ExpressionStatement",
												"src": "5365:16:0"
											},
											{
												"assignments": [
													297
												],
												"declarations": [
													{
														"constant": false,
														"id": 297,
														"mutability": "mutable",
														"name": "newItemId",
														"nameLocation": "5399:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 320,
														"src": "5391:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 296,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5391:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 302,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 298,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "5411:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 299,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5411:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 300,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5427:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "5411:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5391:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 304,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "5448:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 305,
															"name": "newItemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5459:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 303,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															938,
															967
														],
														"referencedDeclaration": 938,
														"src": "5438:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5438:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "5438:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 309,
															"name": "newItemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5492:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 310,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "5503:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 308,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1878,
														"src": "5479:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5479:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "5479:29:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 314,
															"name": "newItemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5528:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 315,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "5539:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 313,
														"name": "Mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "5523:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5523:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "EmitStatement",
												"src": "5518:31:0"
											},
											{
												"expression": {
													"id": 318,
													"name": "newItemId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 297,
													"src": "5566:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 263,
												"id": 319,
												"nodeType": "Return",
												"src": "5559:16:0"
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "4820:207:0",
										"text": "@notice Mints tokens\n @param recipient - the address to which the token will be transfered\n @param hash - the IPFS hash of the token's resource\n @return tokenId - the id of the token"
									},
									"functionSelector": "d0def521",
									"id": 321,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 260,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 259,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 385,
												"src": "5098:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5098:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "5041:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5054:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "5046:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5046:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "5079:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "5065:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 256,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5065:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5045:39:0"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5129:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "5121:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5120:17:0"
									},
									"scope": 322,
									"src": "5032:550:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 323,
							"src": "866:4719:0",
							"usedErrors": []
						}
					],
					"src": "3:5583:0"
				},
				"id": 0
			},
			"contracts/interface/IERC2981.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IERC2981.sol",
					"exportedSymbols": {
						"IERC2981": [
							338
						]
					},
					"id": 339,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 324,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC2981",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 325,
								"nodeType": "StructuredDocumentation",
								"src": "326:56:1",
								"text": "\n @dev Interface for the NFT Royalty Standard"
							},
							"fullyImplemented": false,
							"id": 338,
							"linearizedBaseContracts": [
								338
							],
							"name": "IERC2981",
							"nameLocation": "392:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "825:300:1",
										"text": "@param _tokenId - the NFT asset queried for royalty information\n @param _salePrice - the sale price of the NFT asset specified by _tokenId\n @return receiver - address of who should be sent the royalty payment\n @return royaltyAmount - the royalty payment amount for _salePrice"
									},
									"functionSelector": "2a55205a",
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyInfo",
									"nameLocation": "1139:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "1168:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "1160:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1160:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "_salePrice",
												"nameLocation": "1194:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "1186:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1150:60:1"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1251:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "1243:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "royaltyAmount",
												"nameLocation": "1277:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "1269:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1269:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1233:63:1"
									},
									"scope": 338,
									"src": "1130:167:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 339,
							"src": "382:918:1",
							"usedErrors": []
						}
					],
					"src": "0:1300:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							2284
						],
						"Ownable": [
							443
						]
					},
					"id": 444,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 340,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:2"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 341,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 444,
							"sourceUnit": 2285,
							"src": "112:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 343,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2284,
										"src": "668:7:2"
									},
									"id": 344,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:2"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 342,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:2",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 443,
							"linearizedBaseContracts": [
								443,
								2284
							],
							"name": "Ownable",
							"nameLocation": "657:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 346,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 443,
									"src": "682:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 345,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 352,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "738:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "769:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:2"
									},
									"src": "711:84:2"
								},
								{
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "911:49:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 357,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2274,
																"src": "940:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 356,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "921:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "921:32:2"
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:2",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 362,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:2"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:2"
									},
									"scope": 443,
									"src": "897:63:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "1091:30:2",
										"statements": [
											{
												"expression": {
													"id": 368,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 346,
													"src": "1108:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 367,
												"id": 369,
												"nodeType": "Return",
												"src": "1101:13:2"
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:2",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:2"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1082:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:2"
									},
									"scope": 443,
									"src": "1036:85:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "1230:96:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 375,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 371,
																	"src": "1248:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 377,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2274,
																	"src": "1259:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 374,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:2"
											},
											{
												"id": 383,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:2"
											}
										]
									},
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:2",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 385,
									"name": "onlyOwner",
									"nameLocation": "1218:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:2"
									},
									"src": "1209:117:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "1722:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 392,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 391,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "1732:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:2",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 389,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 388,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 385,
												"src": "1712:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:2"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:2"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:2"
									},
									"scope": 443,
									"src": "1668:101:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "1988:128:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 408,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "2006:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 409,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 407,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 418,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "2100:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 417,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "2081:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:2"
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 405,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 404,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 385,
												"src": "1978:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:2"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "1945:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:2"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:2"
									},
									"scope": 443,
									"src": "1918:198:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "2333:124:2",
										"statements": [
											{
												"assignments": [
													429
												],
												"declarations": [
													{
														"constant": false,
														"id": 429,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 441,
														"src": "2343:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 428,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 431,
												"initialValue": {
													"id": 430,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 346,
													"src": "2362:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:2"
											},
											{
												"expression": {
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 432,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "2378:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 433,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "2387:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 437,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "2431:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 438,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "2441:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 436,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "2410:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 440,
												"nodeType": "EmitStatement",
												"src": "2405:45:2"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2298:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:2"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:2"
									},
									"scope": 443,
									"src": "2270:187:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 444,
							"src": "639:1820:2",
							"usedErrors": []
						}
					],
					"src": "87:2373:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Address": [
							2262
						],
						"Context": [
							2284
						],
						"ERC165": [
							2511
						],
						"ERC721": [
							1309
						],
						"IERC165": [
							2523
						],
						"IERC721": [
							1425
						],
						"IERC721Metadata": [
							1967
						],
						"IERC721Receiver": [
							1443
						],
						"Strings": [
							2487
						]
					},
					"id": 1310,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 445,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:3"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 446,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1310,
							"sourceUnit": 1426,
							"src": "132:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 447,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1310,
							"sourceUnit": 1444,
							"src": "156:31:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 448,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1310,
							"sourceUnit": 1968,
							"src": "188:42:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 449,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1310,
							"sourceUnit": 2263,
							"src": "231:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 450,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1310,
							"sourceUnit": 2285,
							"src": "265:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 451,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1310,
							"sourceUnit": 2488,
							"src": "299:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1310,
							"sourceUnit": 2512,
							"src": "333:46:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 454,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2284,
										"src": "647:7:3"
									},
									"id": 455,
									"nodeType": "InheritanceSpecifier",
									"src": "647:7:3"
								},
								{
									"baseName": {
										"id": 456,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2511,
										"src": "656:6:3"
									},
									"id": 457,
									"nodeType": "InheritanceSpecifier",
									"src": "656:6:3"
								},
								{
									"baseName": {
										"id": 458,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1425,
										"src": "664:7:3"
									},
									"id": 459,
									"nodeType": "InheritanceSpecifier",
									"src": "664:7:3"
								},
								{
									"baseName": {
										"id": 460,
										"name": "IERC721Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1967,
										"src": "673:15:3"
									},
									"id": 461,
									"nodeType": "InheritanceSpecifier",
									"src": "673:15:3"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 453,
								"nodeType": "StructuredDocumentation",
								"src": "381:246:3",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1309,
							"linearizedBaseContracts": [
								1309,
								1967,
								1425,
								2511,
								2523,
								2284
							],
							"name": "ERC721",
							"nameLocation": "637:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 464,
									"libraryName": {
										"id": 462,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2262,
										"src": "701:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "695:26:3",
									"typeName": {
										"id": 463,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "713:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 467,
									"libraryName": {
										"id": 465,
										"name": "Strings",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2487,
										"src": "732:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "726:26:3",
									"typeName": {
										"id": 466,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "744:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 469,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "791:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1309,
									"src": "776:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 468,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "776:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 471,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "838:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1309,
									"src": "823:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 470,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "823:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 475,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "934:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1309,
									"src": "898:43:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 474,
										"keyType": {
											"id": 472,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "906:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "898:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 473,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "917:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 479,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1028:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1309,
									"src": "992:45:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 478,
										"keyType": {
											"id": 476,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1000:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "992:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 477,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1011:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 483,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1129:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 1309,
									"src": "1093:51:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 482,
										"keyType": {
											"id": 480,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1101:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1093:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 481,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1112:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 489,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1252:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 1309,
									"src": "1199:71:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 488,
										"keyType": {
											"id": 484,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1207:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1199:44:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 487,
											"keyType": {
												"id": 485,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1226:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1218:24:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 486,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1237:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 505,
										"nodeType": "Block",
										"src": "1446:57:3",
										"statements": [
											{
												"expression": {
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 497,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 469,
														"src": "1456:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 498,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "1464:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1456:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 500,
												"nodeType": "ExpressionStatement",
												"src": "1456:13:3"
											},
											{
												"expression": {
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 501,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "1479:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 502,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "1489:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1479:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "1479:17:3"
											}
										]
									},
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "1277:108:3",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 506,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1416:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "1402:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 491,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1402:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1437:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "1423:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 493,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1423:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1401:44:3"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1446:0:3"
									},
									"scope": 1309,
									"src": "1390:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2510,
										2522
									],
									"body": {
										"id": 536,
										"nodeType": "Block",
										"src": "1678:192:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 517,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 509,
																"src": "1707:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 519,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1425,
																			"src": "1727:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1425_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1425_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 518,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1722:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1722:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1425",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 521,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1722:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1707:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 523,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 509,
																"src": "1763:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 525,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1967,
																			"src": "1783:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1967_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1967_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 524,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1778:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1778:21:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1967",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1778:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1763:48:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1707:104:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 532,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 509,
																"src": "1851:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 530,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1827:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1309_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2510,
															"src": "1827:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1827:36:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1707:156:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 516,
												"id": 535,
												"nodeType": "Return",
												"src": "1688:175:3"
											}
										]
									},
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "1509:56:3",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1579:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 513,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 511,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2511,
												"src": "1646:6:3"
											},
											{
												"id": 512,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2523,
												"src": "1654:7:3"
											}
										],
										"src": "1637:25:3"
									},
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1604:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "1597:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 508,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1597:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1596:20:3"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "1672:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 514,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1672:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1671:6:3"
									},
									"scope": 1309,
									"src": "1570:300:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1350
									],
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "2010:124:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 547,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 540,
																"src": "2028:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2045:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2037:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 548,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2037:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2037:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2028:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2049:44:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
																"typeString": "literal_string \"ERC721: balance query for the zero address\""
															},
															"value": "ERC721: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
																"typeString": "literal_string \"ERC721: balance query for the zero address\""
															}
														],
														"id": 546,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2020:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2020:74:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 555,
												"nodeType": "ExpressionStatement",
												"src": "2020:74:3"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 556,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "2111:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 558,
													"indexExpression": {
														"id": 557,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "2121:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2111:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 545,
												"id": 559,
												"nodeType": "Return",
												"src": "2104:23:3"
											}
										]
									},
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "1876:48:3",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1938:9:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 542,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1983:8:3"
									},
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1956:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "1948:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1948:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1947:15:3"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "2001:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2001:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2000:9:3"
									},
									"scope": 1309,
									"src": "1929:205:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1358
									],
									"body": {
										"id": 588,
										"nodeType": "Block",
										"src": "2272:154:3",
										"statements": [
											{
												"assignments": [
													571
												],
												"declarations": [
													{
														"constant": false,
														"id": 571,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2290:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 588,
														"src": "2282:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 570,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2282:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 575,
												"initialValue": {
													"baseExpression": {
														"id": 572,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "2298:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 574,
													"indexExpression": {
														"id": 573,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 564,
														"src": "2306:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2298:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2282:32:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 577,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 571,
																"src": "2332:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 580,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2349:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2341:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 578,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2341:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2341:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2332:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2353:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
																"typeString": "literal_string \"ERC721: owner query for nonexistent token\""
															},
															"value": "ERC721: owner query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
																"typeString": "literal_string \"ERC721: owner query for nonexistent token\""
															}
														],
														"id": 576,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2324:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2324:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 585,
												"nodeType": "ExpressionStatement",
												"src": "2324:73:3"
											},
											{
												"expression": {
													"id": 586,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 571,
													"src": "2414:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 569,
												"id": 587,
												"nodeType": "Return",
												"src": "2407:12:3"
											}
										]
									},
									"documentation": {
										"id": 562,
										"nodeType": "StructuredDocumentation",
										"src": "2140:46:3",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2200:7:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 566,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2245:8:3"
									},
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2216:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "2208:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2208:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2207:17:3"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "2263:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2263:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2262:9:3"
									},
									"scope": 1309,
									"src": "2191:235:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1952
									],
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "2557:29:3",
										"statements": [
											{
												"expression": {
													"id": 596,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 469,
													"src": "2574:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 595,
												"id": 597,
												"nodeType": "Return",
												"src": "2567:12:3"
											}
										]
									},
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "2432:51:3",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2497:4:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 592,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2524:8:3"
									},
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2501:2:3"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "2542:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 593,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2542:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2541:15:3"
									},
									"scope": 1309,
									"src": "2488:98:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1958
									],
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "2721:31:3",
										"statements": [
											{
												"expression": {
													"id": 606,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 471,
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 605,
												"id": 607,
												"nodeType": "Return",
												"src": "2731:14:3"
											}
										]
									},
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "2592:53:3",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2659:6:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 602,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2688:8:3"
									},
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2665:2:3"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "2706:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 603,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2706:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2705:15:3"
									},
									"scope": 1309,
									"src": "2650:102:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1966
									],
									"body": {
										"id": 650,
										"nodeType": "Block",
										"src": "2906:241:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 620,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "2932:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 619,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 882,
																"src": "2924:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2924:16:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2942:49:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																"typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
															},
															"value": "ERC721Metadata: URI query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																"typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
															}
														],
														"id": 618,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2916:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2916:76:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 624,
												"nodeType": "ExpressionStatement",
												"src": "2916:76:3"
											},
											{
												"assignments": [
													626
												],
												"declarations": [
													{
														"constant": false,
														"id": 626,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "3017:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 650,
														"src": "3003:21:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 625,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3003:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 629,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 627,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 660,
														"src": "3027:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3027:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3003:34:3"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 632,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "3060:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3054:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 630,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3054:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3054:14:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3054:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3078:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3054:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 647,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3138:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3054:86:3",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 641,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "3106:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 642,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 612,
																				"src": "3115:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2369,
																			"src": "3115:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3115:18:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 639,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "3089:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "3089:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3089:45:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3082:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 637,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "3082:6:3",
																"typeDescriptions": {}
															}
														},
														"id": 646,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3082:53:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 617,
												"id": 649,
												"nodeType": "Return",
												"src": "3047:93:3"
											}
										]
									},
									"documentation": {
										"id": 610,
										"nodeType": "StructuredDocumentation",
										"src": "2758:55:3",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2827:8:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 614,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2873:8:3"
									},
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2844:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "2836:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:17:3"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "2891:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 615,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2891:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2890:15:3"
									},
									"scope": 1309,
									"src": "2818:329:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 659,
										"nodeType": "Block",
										"src": "3455:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3472:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 656,
												"id": 658,
												"nodeType": "Return",
												"src": "3465:9:3"
											}
										]
									},
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "3153:231:3",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3398:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3406:2:3"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "3440:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 654,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3440:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3439:15:3"
									},
									"scope": 1309,
									"src": "3389:92:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1386
									],
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "3608:331:3",
										"statements": [
											{
												"assignments": [
													670
												],
												"declarations": [
													{
														"constant": false,
														"id": 670,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3626:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 702,
														"src": "3618:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 669,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3618:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 675,
												"initialValue": {
													"arguments": [
														{
															"id": 673,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "3649:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 671,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "3634:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1309_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 672,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 589,
														"src": "3634:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3634:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3618:39:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 677,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "3675:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 678,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 670,
																"src": "3681:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3675:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3688:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															},
															"value": "ERC721: approval to current owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															}
														],
														"id": 676,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3667:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3667:57:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 682,
												"nodeType": "ExpressionStatement",
												"src": "3667:57:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 684,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2274,
																		"src": "3756:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3756:12:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 686,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 670,
																	"src": "3772:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3756:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 689,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 670,
																		"src": "3798:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 690,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2274,
																			"src": "3805:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3805:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 688,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 759,
																	"src": "3781:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3781:37:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3756:62:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3832:58:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
																"typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
															},
															"value": "ERC721: approve caller is not owner nor approved for all"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
																"typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
															}
														],
														"id": 683,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3735:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3735:165:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 696,
												"nodeType": "ExpressionStatement",
												"src": "3735:165:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 698,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "3920:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 699,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "3924:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 697,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "3911:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3911:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "3911:21:3"
											}
										]
									},
									"documentation": {
										"id": 661,
										"nodeType": "StructuredDocumentation",
										"src": "3487:46:3",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3547:7:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 667,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3599:8:3"
									},
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3563:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "3555:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3555:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3575:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "3567:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3567:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3554:29:3"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3608:0:3"
									},
									"scope": 1309,
									"src": "3538:401:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1394
									],
									"body": {
										"id": 723,
										"nodeType": "Block",
										"src": "4085:132:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 714,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 706,
																	"src": "4111:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 713,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 882,
																"src": "4103:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4103:16:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4121:46:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
																"typeString": "literal_string \"ERC721: approved query for nonexistent token\""
															},
															"value": "ERC721: approved query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
																"typeString": "literal_string \"ERC721: approved query for nonexistent token\""
															}
														],
														"id": 712,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4095:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4095:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "4095:73:3"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 719,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "4186:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 721,
													"indexExpression": {
														"id": 720,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "4202:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4186:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 711,
												"id": 722,
												"nodeType": "Return",
												"src": "4179:31:3"
											}
										]
									},
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "3945:50:3",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4009:11:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 708,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4058:8:3"
									},
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4029:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "4021:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4021:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4020:17:3"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "4076:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4075:9:3"
									},
									"scope": 1309,
									"src": "4000:217:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1402
									],
									"body": {
										"id": 740,
										"nodeType": "Block",
										"src": "4368:69:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 734,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2274,
																"src": "4397:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4397:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 736,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "4411:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 737,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "4421:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 733,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1224,
														"src": "4378:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4378:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "4378:52:3"
											}
										]
									},
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "4223:56:3",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4293:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 731,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4359:8:3"
									},
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4319:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "4311:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4311:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4334:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "4329:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 728,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4329:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4310:33:3"
									},
									"returnParameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4368:0:3"
									},
									"scope": 1309,
									"src": "4284:153:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1412
									],
									"body": {
										"id": 758,
										"nodeType": "Block",
										"src": "4606:59:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 752,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "4623:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 754,
														"indexExpression": {
															"id": 753,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "4642:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4623:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 756,
													"indexExpression": {
														"id": 755,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "4649:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4623:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 751,
												"id": 757,
												"nodeType": "Return",
												"src": "4616:42:3"
											}
										]
									},
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "4443:55:3",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4512:16:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 748,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4582:8:3"
									},
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4537:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "4529:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4529:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4552:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "4544:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4544:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4528:33:3"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "4600:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 749,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4600:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4599:6:3"
									},
									"scope": 1309,
									"src": "4503:162:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1378
									],
									"body": {
										"id": 785,
										"nodeType": "Block",
										"src": "4846:211:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 772,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2274,
																		"src": "4935:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4935:12:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 774,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 766,
																	"src": "4949:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 771,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 923,
																"src": "4916:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4916:41:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4959:51:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															},
															"value": "ERC721: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															}
														],
														"id": 770,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4908:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4908:103:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "4908:103:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 780,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "5032:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 781,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "5038:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 782,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "5042:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 779,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "5022:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5022:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 784,
												"nodeType": "ExpressionStatement",
												"src": "5022:28:3"
											}
										]
									},
									"documentation": {
										"id": 760,
										"nodeType": "StructuredDocumentation",
										"src": "4671:51:3",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4736:12:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 768,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4837:8:3"
									},
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4766:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "4758:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4758:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4788:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "4780:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4780:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4808:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "4800:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4800:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4748:73:3"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4846:0:3"
									},
									"scope": 1309,
									"src": "4727:330:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1368
									],
									"body": {
										"id": 804,
										"nodeType": "Block",
										"src": "5246:56:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 798,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "5273:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 799,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "5279:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 800,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "5283:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5292:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 797,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															805,
															835
														],
														"referencedDeclaration": 835,
														"src": "5256:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5256:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 803,
												"nodeType": "ExpressionStatement",
												"src": "5256:39:3"
											}
										]
									},
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "5063:55:3",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5132:16:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 795,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5237:8:3"
									},
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5166:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "5158:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5158:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5188:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "5180:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5180:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5208:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "5200:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5200:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5148:73:3"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5246:0:3"
									},
									"scope": 1309,
									"src": "5123:179:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1424
									],
									"body": {
										"id": 834,
										"nodeType": "Block",
										"src": "5519:169:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 820,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2274,
																		"src": "5556:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5556:12:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 822,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 812,
																	"src": "5570:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 819,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 923,
																"src": "5537:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5537:41:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5580:51:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															},
															"value": "ERC721: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															}
														],
														"id": 818,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5529:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:103:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 826,
												"nodeType": "ExpressionStatement",
												"src": "5529:103:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 828,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "5656:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 829,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "5662:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 830,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "5666:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 831,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "5675:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 827,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "5642:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5642:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 833,
												"nodeType": "ExpressionStatement",
												"src": "5642:39:3"
											}
										]
									},
									"documentation": {
										"id": 806,
										"nodeType": "StructuredDocumentation",
										"src": "5308:55:3",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5377:16:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 816,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5510:8:3"
									},
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5411:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "5403:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5403:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5433:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "5425:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5425:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5453:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "5445:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "5483:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "5470:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 813,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5470:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5393:101:3"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5519:0:3"
									},
									"scope": 1309,
									"src": "5368:320:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 863,
										"nodeType": "Block",
										"src": "6691:166:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 848,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "6711:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 849,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "6717:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 850,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "6721:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 847,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "6701:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6701:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 852,
												"nodeType": "ExpressionStatement",
												"src": "6701:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 855,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 838,
																	"src": "6770:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 856,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 840,
																	"src": "6776:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 857,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 842,
																	"src": "6780:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 858,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 844,
																	"src": "6789:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 854,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1286,
																"src": "6747:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6747:48:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6797:52:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 853,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6739:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6739:111:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 862,
												"nodeType": "ExpressionStatement",
												"src": "6739:111:3"
											}
										]
									},
									"documentation": {
										"id": 836,
										"nodeType": "StructuredDocumentation",
										"src": "5694:851:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "6559:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6590:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "6582:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6612:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "6604:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6604:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6632:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "6624:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6624:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "6662:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "6649:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 843,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6649:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6572:101:3"
									},
									"returnParameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6691:0:3"
									},
									"scope": 1309,
									"src": "6550:307:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 881,
										"nodeType": "Block",
										"src": "7231:54:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 872,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "7248:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 874,
														"indexExpression": {
															"id": 873,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 867,
															"src": "7256:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7248:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7276:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7268:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 875,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7268:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 878,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7268:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7248:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 871,
												"id": 880,
												"nodeType": "Return",
												"src": "7241:37:3"
											}
										]
									},
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "6863:292:3",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
									},
									"id": 882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "7169:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7185:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "7177:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7177:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7176:17:3"
									},
									"returnParameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "7225:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 869,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7225:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7224:6:3"
									},
									"scope": 1309,
									"src": "7160:125:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 922,
										"nodeType": "Block",
										"src": "7542:245:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 894,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 887,
																	"src": "7568:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 893,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 882,
																"src": "7560:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7560:16:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7578:46:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
																"typeString": "literal_string \"ERC721: operator query for nonexistent token\""
															},
															"value": "ERC721: operator query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
																"typeString": "literal_string \"ERC721: operator query for nonexistent token\""
															}
														],
														"id": 892,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7552:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7552:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 898,
												"nodeType": "ExpressionStatement",
												"src": "7552:73:3"
											},
											{
												"assignments": [
													900
												],
												"declarations": [
													{
														"constant": false,
														"id": 900,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7643:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 922,
														"src": "7635:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 899,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7635:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 905,
												"initialValue": {
													"arguments": [
														{
															"id": 903,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "7666:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 901,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "7651:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1309_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 902,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 589,
														"src": "7651:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7651:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7635:39:3"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 906,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 885,
																		"src": "7692:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 907,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 900,
																		"src": "7703:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "7692:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 910,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 900,
																			"src": "7729:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 911,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 885,
																			"src": "7736:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 909,
																		"name": "isApprovedForAll",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 759,
																		"src": "7712:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address) view returns (bool)"
																		}
																	},
																	"id": 912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7712:32:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7692:52:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 915,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 887,
																			"src": "7760:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 914,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 724,
																		"src": "7748:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 916,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7748:20:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 917,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 885,
																	"src": "7772:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7748:31:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7692:87:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 920,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7691:89:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 891,
												"id": 921,
												"nodeType": "Return",
												"src": "7684:96:3"
											}
										]
									},
									"documentation": {
										"id": 883,
										"nodeType": "StructuredDocumentation",
										"src": "7291:147:3",
										"text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 923,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isApprovedOrOwner",
									"nameLocation": "7452:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7479:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "7471:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7496:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "7488:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7488:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7470:34:3"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "7536:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 889,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7536:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7535:6:3"
									},
									"scope": 1309,
									"src": "7443:344:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 937,
										"nodeType": "Block",
										"src": "8182:43:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 932,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "8202:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 933,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "8206:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8215:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 931,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															938,
															967
														],
														"referencedDeclaration": 967,
														"src": "8192:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8192:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 936,
												"nodeType": "ExpressionStatement",
												"src": "8192:26:3"
											}
										]
									},
									"documentation": {
										"id": 924,
										"nodeType": "StructuredDocumentation",
										"src": "7793:319:3",
										"text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8126:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8144:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "8136:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8136:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8156:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "8148:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8148:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8135:29:3"
									},
									"returnParameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8182:0:3"
									},
									"scope": 1309,
									"src": "8117:108:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 966,
										"nodeType": "Block",
										"src": "8561:196:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 949,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "8577:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 950,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "8581:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 948,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "8571:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8571:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 952,
												"nodeType": "ExpressionStatement",
												"src": "8571:18:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 957,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8651:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8643:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 955,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8643:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 958,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8643:10:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 959,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 941,
																	"src": "8655:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 960,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 943,
																	"src": "8659:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 961,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 945,
																	"src": "8668:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 954,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1286,
																"src": "8620:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8620:54:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8688:52:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 953,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8599:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8599:151:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 965,
												"nodeType": "ExpressionStatement",
												"src": "8599:151:3"
											}
										]
									},
									"documentation": {
										"id": 939,
										"nodeType": "StructuredDocumentation",
										"src": "8231:210:3",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8455:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8482:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "8474:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8474:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8502:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "8494:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8494:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "8532:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "8519:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 944,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8519:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8464:79:3"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8561:0:3"
									},
									"scope": 1309,
									"src": "8446:311:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "9140:366:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 976,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 970,
																"src": "9158:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9172:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9164:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 977,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9164:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 980,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9164:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9158:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9176:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															},
															"value": "ERC721: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															}
														],
														"id": 975,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9150:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9150:61:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 984,
												"nodeType": "ExpressionStatement",
												"src": "9150:61:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9229:17:3",
															"subExpression": {
																"arguments": [
																	{
																		"id": 987,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 972,
																		"src": "9238:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 986,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 882,
																	"src": "9230:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9230:16:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9248:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 985,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9221:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9221:58:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 992,
												"nodeType": "ExpressionStatement",
												"src": "9221:58:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9319:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9311:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 994,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9311:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9311:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 998,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "9323:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 999,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "9327:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 993,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "9290:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9290:45:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1001,
												"nodeType": "ExpressionStatement",
												"src": "9290:45:3"
											},
											{
												"expression": {
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1002,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "9346:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1004,
														"indexExpression": {
															"id": 1003,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "9356:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9346:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1005,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9363:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "9346:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "9346:18:3"
											},
											{
												"expression": {
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1008,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "9374:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1010,
														"indexExpression": {
															"id": 1009,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "9382:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9374:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1011,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "9393:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9374:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1013,
												"nodeType": "ExpressionStatement",
												"src": "9374:21:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1017,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9428:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1016,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9420:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1015,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9420:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9420:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1019,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "9432:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1020,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "9436:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1014,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "9411:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9411:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1022,
												"nodeType": "EmitStatement",
												"src": "9406:38:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1026,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9483:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9475:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1024,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9475:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9475:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1028,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "9487:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1029,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "9491:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1023,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1308,
														"src": "9455:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9455:44:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1031,
												"nodeType": "ExpressionStatement",
												"src": "9455:44:3"
											}
										]
									},
									"documentation": {
										"id": 968,
										"nodeType": "StructuredDocumentation",
										"src": "8763:311:3",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9088:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9102:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "9094:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9094:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9114:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "9106:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9106:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9093:29:3"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9140:0:3"
									},
									"scope": 1309,
									"src": "9079:427:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1092,
										"nodeType": "Block",
										"src": "9772:357:3",
										"statements": [
											{
												"assignments": [
													1040
												],
												"declarations": [
													{
														"constant": false,
														"id": 1040,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "9790:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 1092,
														"src": "9782:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1039,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9782:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1045,
												"initialValue": {
													"arguments": [
														{
															"id": 1043,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "9813:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1041,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "9798:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1309_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 1042,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 589,
														"src": "9798:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9798:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9782:39:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1047,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "9853:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9868:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9860:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1048,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9860:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9860:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1052,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "9872:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1046,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "9832:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9832:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1054,
												"nodeType": "ExpressionStatement",
												"src": "9832:48:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9935:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9927:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1056,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9927:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9927:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1060,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "9939:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1055,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "9918:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9918:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1062,
												"nodeType": "ExpressionStatement",
												"src": "9918:29:3"
											},
											{
												"expression": {
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1063,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "9958:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1065,
														"indexExpression": {
															"id": 1064,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "9968:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9958:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1066,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9978:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "9958:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "9958:21:3"
											},
											{
												"expression": {
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "9989:23:3",
													"subExpression": {
														"baseExpression": {
															"id": 1069,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "9996:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1071,
														"indexExpression": {
															"id": 1070,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "10004:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9996:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1073,
												"nodeType": "ExpressionStatement",
												"src": "9989:23:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1075,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "10037:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10052:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10044:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1076,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10044:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10044:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1080,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "10056:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1074,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "10028:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10028:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "EmitStatement",
												"src": "10023:41:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1084,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "10095:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10110:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1086,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10102:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1085,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10102:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10102:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1089,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "10114:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1083,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1308,
														"src": "10075:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10075:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1091,
												"nodeType": "ExpressionStatement",
												"src": "10075:47:3"
											}
										]
									},
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "9512:206:3",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1093,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9732:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9746:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "9738:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9737:17:3"
									},
									"returnParameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9772:0:3"
									},
									"scope": 1309,
									"src": "9723:406:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1167,
										"nodeType": "Block",
										"src": "10562:496:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1106,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1100,
																		"src": "10595:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1104,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1309,
																		"src": "10580:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$1309_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 1105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 589,
																	"src": "10580:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10580:23:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1108,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1096,
																"src": "10607:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10580:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10613:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 1103,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10572:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10572:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1112,
												"nodeType": "ExpressionStatement",
												"src": "10572:81:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1114,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1098,
																"src": "10671:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10685:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10677:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1115,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10677:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10677:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10671:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10689:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															},
															"value": "ERC721: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															}
														],
														"id": 1113,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10663:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10663:65:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1122,
												"nodeType": "ExpressionStatement",
												"src": "10663:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1124,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "10760:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1125,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "10766:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1126,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "10770:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1123,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "10739:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10739:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1128,
												"nodeType": "ExpressionStatement",
												"src": "10739:39:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10857:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10849:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1130,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10849:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10849:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1134,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "10861:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1129,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "10840:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10840:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1136,
												"nodeType": "ExpressionStatement",
												"src": "10840:29:3"
											},
											{
												"expression": {
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1137,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "10880:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1139,
														"indexExpression": {
															"id": 1138,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "10890:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10880:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1140,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10899:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "10880:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1142,
												"nodeType": "ExpressionStatement",
												"src": "10880:20:3"
											},
											{
												"expression": {
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1143,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "10910:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1145,
														"indexExpression": {
															"id": 1144,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "10920:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10910:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10927:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "10910:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1148,
												"nodeType": "ExpressionStatement",
												"src": "10910:18:3"
											},
											{
												"expression": {
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1149,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "10938:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1151,
														"indexExpression": {
															"id": 1150,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "10946:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10938:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1152,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1098,
														"src": "10957:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10938:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1154,
												"nodeType": "ExpressionStatement",
												"src": "10938:21:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1156,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "10984:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1157,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "10990:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1158,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "10994:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1155,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "10975:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10975:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1160,
												"nodeType": "EmitStatement",
												"src": "10970:32:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1162,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "11033:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1163,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "11039:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1164,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "11043:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1161,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1308,
														"src": "11013:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11013:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1166,
												"nodeType": "ExpressionStatement",
												"src": "11013:38:3"
											}
										]
									},
									"documentation": {
										"id": 1094,
										"nodeType": "StructuredDocumentation",
										"src": "10135:313:3",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "10462:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10489:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "10481:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10481:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10511:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "10503:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10503:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10531:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "10523:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10523:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10471:73:3"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10562:0:3"
									},
									"scope": 1309,
									"src": "10453:605:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1191,
										"nodeType": "Block",
										"src": "11233:107:3",
										"statements": [
											{
												"expression": {
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1176,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "11243:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1178,
														"indexExpression": {
															"id": 1177,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "11259:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11243:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1179,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "11270:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11243:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1181,
												"nodeType": "ExpressionStatement",
												"src": "11243:29:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1185,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1173,
																	"src": "11311:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1183,
																	"name": "ERC721",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1309,
																	"src": "11296:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC721_$1309_$",
																		"typeString": "type(contract ERC721)"
																	}
																},
																"id": 1184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "ownerOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 589,
																"src": "11296:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																	"typeString": "function (uint256) view returns (address)"
																}
															},
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11296:23:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1187,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "11321:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1188,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "11325:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1182,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1333,
														"src": "11287:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11287:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1190,
												"nodeType": "EmitStatement",
												"src": "11282:51:3"
											}
										]
									},
									"documentation": {
										"id": 1169,
										"nodeType": "StructuredDocumentation",
										"src": "11064:100:3",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
									},
									"id": 1192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "11178:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11195:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "11187:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11187:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11207:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "11199:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11199:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11186:29:3"
									},
									"returnParameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11233:0:3"
									},
									"scope": 1309,
									"src": "11169:171:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1223,
										"nodeType": "Block",
										"src": "11598:184:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1203,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1195,
																"src": "11616:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1204,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "11625:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11616:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11635:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															},
															"value": "ERC721: approve to caller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															}
														],
														"id": 1202,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11608:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11608:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1208,
												"nodeType": "ExpressionStatement",
												"src": "11608:55:3"
											},
											{
												"expression": {
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1209,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "11673:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1212,
															"indexExpression": {
																"id": 1210,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1195,
																"src": "11692:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11673:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1213,
														"indexExpression": {
															"id": 1211,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "11699:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11673:35:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1214,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "11711:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "11673:46:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1216,
												"nodeType": "ExpressionStatement",
												"src": "11673:46:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1218,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "11749:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1219,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "11756:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1220,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "11766:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1217,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1342,
														"src": "11734:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11734:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1222,
												"nodeType": "EmitStatement",
												"src": "11729:46:3"
											}
										]
									},
									"documentation": {
										"id": 1193,
										"nodeType": "StructuredDocumentation",
										"src": "11346:124:3",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
									},
									"id": 1224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "11484:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11520:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "11512:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11512:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "11543:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "11535:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11535:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "11566:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "11561:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1198,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11561:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11502:78:3"
									},
									"returnParameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11598:0:3"
									},
									"scope": 1309,
									"src": "11475:307:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1285,
										"nodeType": "Block",
										"src": "12491:622:3",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1238,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1229,
															"src": "12505:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1985,
														"src": "12505:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12505:15:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1283,
													"nodeType": "Block",
													"src": "13071:36:3",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13092:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1237,
															"id": 1282,
															"nodeType": "Return",
															"src": "13085:11:3"
														}
													]
												},
												"id": 1284,
												"nodeType": "IfStatement",
												"src": "12501:606:3",
												"trueBody": {
													"id": 1280,
													"nodeType": "Block",
													"src": "12522:543:3",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1260,
																		"nodeType": "Block",
																		"src": "12637:91:3",
																		"statements": [
																			{
																				"expression": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1258,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1254,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1252,
																						"src": "12662:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1255,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1443,
																								"src": "12672:15:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1443_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1256,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1442,
																							"src": "12672:32:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1257,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "12672:41:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "12662:51:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"functionReturnParameters": 1237,
																				"id": 1259,
																				"nodeType": "Return",
																				"src": "12655:58:3"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1261,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1253,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1252,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "12629:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1261,
																				"src": "12622:13:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1251,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "12622:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "12621:15:3"
																	},
																	"src": "12613:115:3"
																},
																{
																	"block": {
																		"id": 1277,
																		"nodeType": "Block",
																		"src": "12757:298:3",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1268,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1265,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1263,
																							"src": "12779:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1266,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "12779:13:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1267,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12796:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "12779:18:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1275,
																					"nodeType": "Block",
																					"src": "12906:135:3",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "12937:86:3",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "12974:2:3",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "12978:6:3"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "12970:3:3"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "12970:15:3"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "12993:6:3"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "12987:5:3"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "12987:13:3"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "12963:6:3"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "12963:38:3"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "12963:38:3"
																									}
																								]
																							},
																							"evmVersion": "london",
																							"externalReferences": [
																								{
																									"declaration": 1263,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "12978:6:3",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1263,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "12993:6:3",
																									"valueSize": 1
																								}
																							],
																							"id": 1274,
																							"nodeType": "InlineAssembly",
																							"src": "12928:95:3"
																						}
																					]
																				},
																				"id": 1276,
																				"nodeType": "IfStatement",
																				"src": "12775:266:3",
																				"trueBody": {
																					"id": 1273,
																					"nodeType": "Block",
																					"src": "12799:101:3",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
																										"id": 1270,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "12828:52:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										},
																										"value": "ERC721: transfer to non ERC721Receiver implementer"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										}
																									],
																									"id": 1269,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "12821:6:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1271,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "12821:60:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1272,
																							"nodeType": "ExpressionStatement",
																							"src": "12821:60:3"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1278,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1264,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1263,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "12749:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1278,
																				"src": "12736:19:3",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1262,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "12736:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "12735:21:3"
																	},
																	"src": "12729:326:3"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1245,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2274,
																			"src": "12577:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12577:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1247,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1227,
																		"src": "12591:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1248,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1231,
																		"src": "12597:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1249,
																		"name": "_data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1233,
																		"src": "12606:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1242,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1229,
																				"src": "12556:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1241,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1443,
																			"src": "12540:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1443_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12540:19:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1443",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1442,
																	"src": "12540:36:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12540:72:3",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1279,
															"nodeType": "TryStatement",
															"src": "12536:519:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1225,
										"nodeType": "StructuredDocumentation",
										"src": "11788:542:3",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 1286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "12344:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12384:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "12376:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12376:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12406:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "12398:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12398:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12426:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "12418:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12418:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "12456:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "12443:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1232,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12443:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12366:101:3"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "12485:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12485:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12484:6:3"
									},
									"scope": 1309,
									"src": "12335:778:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1296,
										"nodeType": "Block",
										"src": "13789:2:3",
										"statements": []
									},
									"documentation": {
										"id": 1287,
										"nodeType": "StructuredDocumentation",
										"src": "13119:545:3",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "13678:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13716:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "13708:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13708:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13738:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "13730:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13730:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13758:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "13750:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13750:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13698:73:3"
									},
									"returnParameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13789:0:3"
									},
									"scope": 1309,
									"src": "13669:122:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1307,
										"nodeType": "Block",
										"src": "14282:2:3",
										"statements": []
									},
									"documentation": {
										"id": 1298,
										"nodeType": "StructuredDocumentation",
										"src": "13797:361:3",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "14172:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14209:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "14201:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14201:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14231:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "14223:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14223:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14251:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "14243:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14243:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14191:73:3"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14282:0:3"
									},
									"scope": 1309,
									"src": "14163:121:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1310,
							"src": "628:13658:3",
							"usedErrors": []
						}
					],
					"src": "107:14180:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2523
						],
						"IERC721": [
							1425
						]
					},
					"id": 1426,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1311,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "93:23:4"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1312,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1426,
							"sourceUnit": 2524,
							"src": "118:47:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1314,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2523,
										"src": "256:7:4"
									},
									"id": 1315,
									"nodeType": "InheritanceSpecifier",
									"src": "256:7:4"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1313,
								"nodeType": "StructuredDocumentation",
								"src": "167:67:4",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1425,
							"linearizedBaseContracts": [
								1425,
								2523
							],
							"name": "IERC721",
							"nameLocation": "245:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1316,
										"nodeType": "StructuredDocumentation",
										"src": "270:88:4",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1324,
									"name": "Transfer",
									"nameLocation": "369:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "394:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "378:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1320,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "416:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "400:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "400:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "436:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "420:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:67:4"
									},
									"src": "363:82:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1325,
										"nodeType": "StructuredDocumentation",
										"src": "451:94:4",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1333,
									"name": "Approval",
									"nameLocation": "556:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "581:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "565:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "604:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "588:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "588:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "630:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "614:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "614:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:74:4"
									},
									"src": "550:89:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1334,
										"nodeType": "StructuredDocumentation",
										"src": "645:117:4",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1342,
									"name": "ApprovalForAll",
									"nameLocation": "773:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "804:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "788:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "788:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "827:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "811:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "811:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "842:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "837:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1339,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "837:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:64:4"
									},
									"src": "767:85:4"
								},
								{
									"documentation": {
										"id": 1343,
										"nodeType": "StructuredDocumentation",
										"src": "858:76:4",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1350,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "948:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "966:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "958:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "958:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "957:15:4"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1004:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "996:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "996:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "995:17:4"
									},
									"scope": 1425,
									"src": "939:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "1019:131:4",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1358,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1164:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1180:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "1172:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1172:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1171:17:4"
									},
									"returnParameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1220:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "1212:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1212:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1211:15:4"
									},
									"scope": 1425,
									"src": "1155:72:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1359,
										"nodeType": "StructuredDocumentation",
										"src": "1233:690:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1368,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1937:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1971:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "1963:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1963:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1993:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "1985:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1985:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2013:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "2005:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2005:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1953:73:4"
									},
									"returnParameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2035:0:4"
									},
									"scope": 1425,
									"src": "1928:108:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1369,
										"nodeType": "StructuredDocumentation",
										"src": "2042:504:4",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2560:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2590:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "2582:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2612:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "2604:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2604:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2632:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "2624:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2624:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2572:73:4"
									},
									"returnParameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2654:0:4"
									},
									"scope": 1425,
									"src": "2551:104:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1379,
										"nodeType": "StructuredDocumentation",
										"src": "2661:452:4",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1386,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3127:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3143:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "3135:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3155:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "3147:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3147:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:29:4"
									},
									"returnParameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3172:0:4"
									},
									"scope": 1425,
									"src": "3118:55:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1387,
										"nodeType": "StructuredDocumentation",
										"src": "3179:139:4",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1394,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3332:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3352:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "3344:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3344:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3343:17:4"
									},
									"returnParameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3392:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "3384:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3384:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:18:4"
									},
									"scope": 1425,
									"src": "3323:79:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1395,
										"nodeType": "StructuredDocumentation",
										"src": "3408:309:4",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1402,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3731:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3757:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "3749:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3749:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "3772:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "3767:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1398,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3767:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3748:34:4"
									},
									"returnParameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3791:0:4"
									},
									"scope": 1425,
									"src": "3722:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1403,
										"nodeType": "StructuredDocumentation",
										"src": "3798:138:4",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1412,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3950:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3975:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "3967:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3967:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3990:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "3982:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3982:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3966:33:4"
									},
									"returnParameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "4023:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1409,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4023:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4022:6:4"
									},
									"scope": 1425,
									"src": "3941:88:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1413,
										"nodeType": "StructuredDocumentation",
										"src": "4035:556:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1424,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4605:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4639:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "4631:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4661:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "4653:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4653:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4681:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "4673:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4673:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4713:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "4698:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1420,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4698:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4621:102:4"
									},
									"returnParameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4732:0:4"
									},
									"scope": 1425,
									"src": "4596:137:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1426,
							"src": "235:4500:4",
							"usedErrors": []
						}
					],
					"src": "93:4643:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1443
						]
					},
					"id": 1444,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1427,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1428,
								"nodeType": "StructuredDocumentation",
								"src": "126:152:5",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1443,
							"linearizedBaseContracts": [
								1443
							],
							"name": "IERC721Receiver",
							"nameLocation": "289:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1429,
										"nodeType": "StructuredDocumentation",
										"src": "311:493:5",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1442,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "818:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "852:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "844:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "878:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "870:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "870:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "900:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "892:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "932:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "917:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1436,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "917:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "834:108:5"
									},
									"returnParameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "961:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1439,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "961:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "960:8:5"
									},
									"scope": 1443,
									"src": "809:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1444,
							"src": "279:692:5",
							"usedErrors": []
						}
					],
					"src": "101:871:5"
				},
				"id": 5
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
					"exportedSymbols": {
						"Address": [
							2262
						],
						"Context": [
							2284
						],
						"ERC165": [
							2511
						],
						"ERC721": [
							1309
						],
						"ERC721Enumerable": [
							1781
						],
						"IERC165": [
							2523
						],
						"IERC721": [
							1425
						],
						"IERC721Enumerable": [
							1940
						],
						"IERC721Metadata": [
							1967
						],
						"IERC721Receiver": [
							1443
						],
						"Strings": [
							2487
						]
					},
					"id": 1782,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1445,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:6"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1446,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1782,
							"sourceUnit": 1310,
							"src": "138:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
							"file": "./IERC721Enumerable.sol",
							"id": 1447,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1782,
							"sourceUnit": 1941,
							"src": "162:33:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1449,
										"name": "ERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1309,
										"src": "435:6:6"
									},
									"id": 1450,
									"nodeType": "InheritanceSpecifier",
									"src": "435:6:6"
								},
								{
									"baseName": {
										"id": 1451,
										"name": "IERC721Enumerable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1940,
										"src": "443:17:6"
									},
									"id": 1452,
									"nodeType": "InheritanceSpecifier",
									"src": "443:17:6"
								}
							],
							"canonicalName": "ERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1448,
								"nodeType": "StructuredDocumentation",
								"src": "197:199:6",
								"text": " @dev This implements an optional extension of {ERC721} defined in the EIP that adds\n enumerability of all the token ids in the contract as well as all token ids owned by each\n account."
							},
							"fullyImplemented": false,
							"id": 1781,
							"linearizedBaseContracts": [
								1781,
								1940,
								1309,
								1967,
								1425,
								2511,
								2523,
								2284
							],
							"name": "ERC721Enumerable",
							"nameLocation": "415:16:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1458,
									"mutability": "mutable",
									"name": "_ownedTokens",
									"nameLocation": "576:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1781,
									"src": "520:68:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 1457,
										"keyType": {
											"id": 1453,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "528:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "520:47:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueType": {
											"id": 1456,
											"keyType": {
												"id": 1454,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "547:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "539:27:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueType": {
												"id": 1455,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "558:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1462,
									"mutability": "mutable",
									"name": "_ownedTokensIndex",
									"nameLocation": "694:17:6",
									"nodeType": "VariableDeclaration",
									"scope": 1781,
									"src": "658:53:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1461,
										"keyType": {
											"id": 1459,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "666:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "658:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 1460,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "677:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1465,
									"mutability": "mutable",
									"name": "_allTokens",
									"nameLocation": "790:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1781,
									"src": "772:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1463,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "772:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1464,
										"nodeType": "ArrayTypeName",
										"src": "772:9:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1469,
									"mutability": "mutable",
									"name": "_allTokensIndex",
									"nameLocation": "907:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1781,
									"src": "871:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1468,
										"keyType": {
											"id": 1466,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "879:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "871:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 1467,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "890:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										537,
										2522
									],
									"body": {
										"id": 1492,
										"nodeType": "Block",
										"src": "1098:114:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1485,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1480,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "1115:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1482,
																		"name": "IERC721Enumerable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1940,
																		"src": "1135:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$1940_$",
																			"typeString": "type(contract IERC721Enumerable)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$1940_$",
																			"typeString": "type(contract IERC721Enumerable)"
																		}
																	],
																	"id": 1481,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "1130:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1130:23:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Enumerable_$1940",
																	"typeString": "type(contract IERC721Enumerable)"
																}
															},
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "1130:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1115:50:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1488,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1472,
																"src": "1193:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1486,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1169:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$1781_$",
																	"typeString": "type(contract super ERC721Enumerable)"
																}
															},
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 537,
															"src": "1169:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1169:36:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1115:90:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1479,
												"id": 1491,
												"nodeType": "Return",
												"src": "1108:97:6"
											}
										]
									},
									"documentation": {
										"id": 1470,
										"nodeType": "StructuredDocumentation",
										"src": "929:56:6",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "999:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1476,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1474,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2523,
												"src": "1066:7:6"
											},
											{
												"id": 1475,
												"name": "ERC721",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1309,
												"src": "1075:6:6"
											}
										],
										"src": "1057:25:6"
									},
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1024:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "1017:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1471,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1017:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1016:20:6"
									},
									"returnParameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "1092:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1477,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1092:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1091:6:6"
									},
									"scope": 1781,
									"src": "990:222:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1931
									],
									"body": {
										"id": 1520,
										"nodeType": "Block",
										"src": "1397:147:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1505,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1498,
																"src": "1415:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1508,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1496,
																		"src": "1440:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1506,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1309,
																		"src": "1423:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$1309_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 1507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 561,
																	"src": "1423:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1423:23:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1415:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e6473",
															"id": 1511,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1448:45:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c",
																"typeString": "literal_string \"ERC721Enumerable: owner index out of bounds\""
															},
															"value": "ERC721Enumerable: owner index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c",
																"typeString": "literal_string \"ERC721Enumerable: owner index out of bounds\""
															}
														],
														"id": 1504,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1407:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1407:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1513,
												"nodeType": "ExpressionStatement",
												"src": "1407:87:6"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1514,
															"name": "_ownedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1458,
															"src": "1511:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(uint256 => uint256))"
															}
														},
														"id": 1516,
														"indexExpression": {
															"id": 1515,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1496,
															"src": "1524:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1511:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1518,
													"indexExpression": {
														"id": 1517,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1498,
														"src": "1531:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1511:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1503,
												"id": 1519,
												"nodeType": "Return",
												"src": "1504:33:6"
											}
										]
									},
									"documentation": {
										"id": 1494,
										"nodeType": "StructuredDocumentation",
										"src": "1218:68:6",
										"text": " @dev See {IERC721Enumerable-tokenOfOwnerByIndex}."
									},
									"functionSelector": "2f745c59",
									"id": 1521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "1300:19:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1500,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1370:8:6"
									},
									"parameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1328:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "1320:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1320:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1343:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "1335:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1335:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1319:30:6"
									},
									"returnParameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "1388:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1388:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1387:9:6"
									},
									"scope": 1781,
									"src": "1291:253:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1921
									],
									"body": {
										"id": 1531,
										"nodeType": "Block",
										"src": "1685:41:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1528,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1465,
														"src": "1702:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "1702:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1527,
												"id": 1530,
												"nodeType": "Return",
												"src": "1695:24:6"
											}
										]
									},
									"documentation": {
										"id": 1522,
										"nodeType": "StructuredDocumentation",
										"src": "1550:60:6",
										"text": " @dev See {IERC721Enumerable-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 1532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1624:11:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1524,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1658:8:6"
									},
									"parameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1635:2:6"
									},
									"returnParameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1532,
												"src": "1676:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1676:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1675:9:6"
									},
									"scope": 1781,
									"src": "1615:111:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1939
									],
									"body": {
										"id": 1554,
										"nodeType": "Block",
										"src": "1882:146:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1542,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1535,
																"src": "1900:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1543,
																		"name": "ERC721Enumerable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1781,
																		"src": "1908:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721Enumerable_$1781_$",
																			"typeString": "type(contract ERC721Enumerable)"
																		}
																	},
																	"id": 1544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1532,
																	"src": "1908:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1908:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1900:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473",
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1940:46:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc",
																"typeString": "literal_string \"ERC721Enumerable: global index out of bounds\""
															},
															"value": "ERC721Enumerable: global index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc",
																"typeString": "literal_string \"ERC721Enumerable: global index out of bounds\""
															}
														],
														"id": 1541,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1892:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1892:95:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1549,
												"nodeType": "ExpressionStatement",
												"src": "1892:95:6"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1550,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1465,
														"src": "2004:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1552,
													"indexExpression": {
														"id": 1551,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1535,
														"src": "2015:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2004:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1540,
												"id": 1553,
												"nodeType": "Return",
												"src": "1997:24:6"
											}
										]
									},
									"documentation": {
										"id": 1533,
										"nodeType": "StructuredDocumentation",
										"src": "1732:61:6",
										"text": " @dev See {IERC721Enumerable-tokenByIndex}."
									},
									"functionSelector": "4f6ccce7",
									"id": 1555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "1807:12:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1537,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1855:8:6"
									},
									"parameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1828:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "1820:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1820:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1819:15:6"
									},
									"returnParameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "1873:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1873:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1872:9:6"
									},
									"scope": 1781,
									"src": "1798:230:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1297
									],
									"body": {
										"id": 1618,
										"nodeType": "Block",
										"src": "2753:443:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1569,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1558,
															"src": "2790:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1570,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1560,
															"src": "2796:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1571,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1562,
															"src": "2800:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1566,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2763:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$1781_$",
																"typeString": "type(contract super ERC721Enumerable)"
															}
														},
														"id": 1568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1297,
														"src": "2763:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2763:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1573,
												"nodeType": "ExpressionStatement",
												"src": "2763:45:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1574,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1558,
														"src": "2823:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2839:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2831:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1575,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2831:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1578,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2831:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2823:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1587,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1585,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1558,
															"src": "2918:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1586,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1560,
															"src": "2926:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2918:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1594,
													"nodeType": "IfStatement",
													"src": "2914:88:6",
													"trueBody": {
														"id": 1593,
														"nodeType": "Block",
														"src": "2930:72:6",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1589,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1558,
																			"src": "2977:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1590,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1562,
																			"src": "2983:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1588,
																		"name": "_removeTokenFromOwnerEnumeration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1732,
																		"src": "2944:32:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 1591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2944:47:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1592,
																"nodeType": "ExpressionStatement",
																"src": "2944:47:6"
															}
														]
													}
												},
												"id": 1595,
												"nodeType": "IfStatement",
												"src": "2819:183:6",
												"trueBody": {
													"id": 1584,
													"nodeType": "Block",
													"src": "2843:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1581,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1562,
																		"src": "2889:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1580,
																	"name": "_addTokenToAllTokensEnumeration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1669,
																	"src": "2857:31:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2857:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1583,
															"nodeType": "ExpressionStatement",
															"src": "2857:40:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1596,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1560,
														"src": "3015:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1599,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3029:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3021:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1597,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3021:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1600,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3021:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3015:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1607,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1560,
															"src": "3113:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1608,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1558,
															"src": "3119:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3113:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1616,
													"nodeType": "IfStatement",
													"src": "3109:81:6",
													"trueBody": {
														"id": 1615,
														"nodeType": "Block",
														"src": "3125:65:6",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1611,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1560,
																			"src": "3167:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1612,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1562,
																			"src": "3171:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1610,
																		"name": "_addTokenToOwnerEnumeration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1649,
																		"src": "3139:27:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 1613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3139:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1614,
																"nodeType": "ExpressionStatement",
																"src": "3139:40:6"
															}
														]
													}
												},
												"id": 1617,
												"nodeType": "IfStatement",
												"src": "3011:179:6",
												"trueBody": {
													"id": 1606,
													"nodeType": "Block",
													"src": "3033:70:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1603,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1562,
																		"src": "3084:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1602,
																	"name": "_removeTokenFromAllTokensEnumeration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1780,
																	"src": "3047:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3047:45:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1605,
															"nodeType": "ExpressionStatement",
															"src": "3047:45:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1556,
										"nodeType": "StructuredDocumentation",
										"src": "2034:585:6",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "2633:20:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1564,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2744:8:6"
									},
									"parameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2671:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "2663:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2663:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2693:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "2685:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2713:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "2705:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2653:73:6"
									},
									"returnParameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2753:0:6"
									},
									"scope": 1781,
									"src": "2624:572:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1648,
										"nodeType": "Block",
										"src": "3564:143:6",
										"statements": [
											{
												"assignments": [
													1628
												],
												"declarations": [
													{
														"constant": false,
														"id": 1628,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "3582:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1648,
														"src": "3574:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1627,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3574:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1633,
												"initialValue": {
													"arguments": [
														{
															"id": 1631,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1622,
															"src": "3608:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1629,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "3591:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1309_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 1630,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 561,
														"src": "3591:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3591:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3574:37:6"
											},
											{
												"expression": {
													"id": 1640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1634,
																"name": "_ownedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1458,
																"src": "3621:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1637,
															"indexExpression": {
																"id": 1635,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1622,
																"src": "3634:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3621:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1638,
														"indexExpression": {
															"id": 1636,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1628,
															"src": "3638:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3621:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1639,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1624,
														"src": "3648:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3621:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1641,
												"nodeType": "ExpressionStatement",
												"src": "3621:34:6"
											},
											{
												"expression": {
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1642,
															"name": "_ownedTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1462,
															"src": "3665:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1644,
														"indexExpression": {
															"id": 1643,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1624,
															"src": "3683:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3665:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1645,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1628,
														"src": "3694:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3665:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1647,
												"nodeType": "ExpressionStatement",
												"src": "3665:35:6"
											}
										]
									},
									"documentation": {
										"id": 1620,
										"nodeType": "StructuredDocumentation",
										"src": "3202:283:6",
										"text": " @dev Private function to add a token to this extension's ownership-tracking data structures.\n @param to address representing the new owner of the given token ID\n @param tokenId uint256 ID of the token to be added to the tokens list of the given address"
									},
									"id": 1649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addTokenToOwnerEnumeration",
									"nameLocation": "3499:27:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3535:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "3527:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3527:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3547:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "3539:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3526:29:6"
									},
									"returnParameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3564:0:6"
									},
									"scope": 1781,
									"src": "3490:217:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1668,
										"nodeType": "Block",
										"src": "3968:95:6",
										"statements": [
											{
												"expression": {
													"id": 1660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1655,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1469,
															"src": "3978:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1657,
														"indexExpression": {
															"id": 1656,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1652,
															"src": "3994:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3978:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1658,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1465,
															"src": "4005:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4005:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3978:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1661,
												"nodeType": "ExpressionStatement",
												"src": "3978:44:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1665,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1652,
															"src": "4048:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1662,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1465,
															"src": "4032:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1664,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4032:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4032:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1667,
												"nodeType": "ExpressionStatement",
												"src": "4032:24:6"
											}
										]
									},
									"documentation": {
										"id": 1650,
										"nodeType": "StructuredDocumentation",
										"src": "3713:184:6",
										"text": " @dev Private function to add a token to this extension's token tracking data structures.\n @param tokenId uint256 ID of the token to be added to the tokens list"
									},
									"id": 1669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addTokenToAllTokensEnumeration",
									"nameLocation": "3911:31:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3951:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "3943:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3943:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3942:17:6"
									},
									"returnParameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3968:0:6"
									},
									"scope": 1781,
									"src": "3902:161:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1731,
										"nodeType": "Block",
										"src": "4761:889:6",
										"statements": [
											{
												"assignments": [
													1678
												],
												"declarations": [
													{
														"constant": false,
														"id": 1678,
														"mutability": "mutable",
														"name": "lastTokenIndex",
														"nameLocation": "4950:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 1731,
														"src": "4942:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1677,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4942:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1685,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1681,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1672,
																"src": "4984:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1679,
																"name": "ERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1309,
																"src": "4967:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721_$1309_$",
																	"typeString": "type(contract ERC721)"
																}
															},
															"id": 1680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 561,
															"src": "4967:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1682,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4967:22:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1683,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4992:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4967:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4942:51:6"
											},
											{
												"assignments": [
													1687
												],
												"declarations": [
													{
														"constant": false,
														"id": 1687,
														"mutability": "mutable",
														"name": "tokenIndex",
														"nameLocation": "5011:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1731,
														"src": "5003:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1686,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5003:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1691,
												"initialValue": {
													"baseExpression": {
														"id": 1688,
														"name": "_ownedTokensIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "5024:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1690,
													"indexExpression": {
														"id": 1689,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1674,
														"src": "5042:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5024:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5003:47:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1692,
														"name": "tokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1687,
														"src": "5154:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1693,
														"name": "lastTokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1678,
														"src": "5168:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5154:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1718,
												"nodeType": "IfStatement",
												"src": "5150:323:6",
												"trueBody": {
													"id": 1717,
													"nodeType": "Block",
													"src": "5184:289:6",
													"statements": [
														{
															"assignments": [
																1696
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1696,
																	"mutability": "mutable",
																	"name": "lastTokenId",
																	"nameLocation": "5206:11:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1717,
																	"src": "5198:19:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1695,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5198:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1702,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1697,
																		"name": "_ownedTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1458,
																		"src": "5220:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 1699,
																	"indexExpression": {
																		"id": 1698,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1672,
																		"src": "5233:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5220:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1701,
																"indexExpression": {
																	"id": 1700,
																	"name": "lastTokenIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1678,
																	"src": "5239:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5220:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5198:56:6"
														},
														{
															"expression": {
																"id": 1709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1703,
																			"name": "_ownedTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1458,
																			"src": "5269:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 1706,
																		"indexExpression": {
																			"id": 1704,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1672,
																			"src": "5282:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5269:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1707,
																	"indexExpression": {
																		"id": 1705,
																		"name": "tokenIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1687,
																		"src": "5288:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5269:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1708,
																	"name": "lastTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1696,
																	"src": "5302:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5269:44:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1710,
															"nodeType": "ExpressionStatement",
															"src": "5269:44:6"
														},
														{
															"expression": {
																"id": 1715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1711,
																		"name": "_ownedTokensIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1462,
																		"src": "5385:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1713,
																	"indexExpression": {
																		"id": 1712,
																		"name": "lastTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1696,
																		"src": "5403:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5385:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1714,
																	"name": "tokenIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1687,
																	"src": "5418:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5385:43:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1716,
															"nodeType": "ExpressionStatement",
															"src": "5385:43:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "5559:33:6",
													"subExpression": {
														"baseExpression": {
															"id": 1719,
															"name": "_ownedTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1462,
															"src": "5566:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1721,
														"indexExpression": {
															"id": 1720,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1674,
															"src": "5584:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5566:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1723,
												"nodeType": "ExpressionStatement",
												"src": "5559:33:6"
											},
											{
												"expression": {
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "5602:41:6",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1724,
																"name": "_ownedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1458,
																"src": "5609:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1726,
															"indexExpression": {
																"id": 1725,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1672,
																"src": "5622:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5609:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1728,
														"indexExpression": {
															"id": 1727,
															"name": "lastTokenIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1678,
															"src": "5628:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5609:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1730,
												"nodeType": "ExpressionStatement",
												"src": "5602:41:6"
											}
										]
									},
									"documentation": {
										"id": 1670,
										"nodeType": "StructuredDocumentation",
										"src": "4069:606:6",
										"text": " @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n This has O(1) time complexity, but alters the order of the _ownedTokens array.\n @param from address representing the previous owner of the given token ID\n @param tokenId uint256 ID of the token to be removed from the tokens list of the given address"
									},
									"id": 1732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeTokenFromOwnerEnumeration",
									"nameLocation": "4689:32:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4730:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "4722:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4722:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4744:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "4736:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4736:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4721:31:6"
									},
									"returnParameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4761:0:6"
									},
									"scope": 1781,
									"src": "4680:970:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1779,
										"nodeType": "Block",
										"src": "6009:990:6",
										"statements": [
											{
												"assignments": [
													1739
												],
												"declarations": [
													{
														"constant": false,
														"id": 1739,
														"mutability": "mutable",
														"name": "lastTokenIndex",
														"nameLocation": "6195:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 1779,
														"src": "6187:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1738,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6187:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1744,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1740,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1465,
															"src": "6212:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1741,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6212:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1742,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6232:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6212:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6187:46:6"
											},
											{
												"assignments": [
													1746
												],
												"declarations": [
													{
														"constant": false,
														"id": 1746,
														"mutability": "mutable",
														"name": "tokenIndex",
														"nameLocation": "6251:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1779,
														"src": "6243:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1745,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6243:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1750,
												"initialValue": {
													"baseExpression": {
														"id": 1747,
														"name": "_allTokensIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1469,
														"src": "6264:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1749,
													"indexExpression": {
														"id": 1748,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1735,
														"src": "6280:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6264:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6243:45:6"
											},
											{
												"assignments": [
													1752
												],
												"declarations": [
													{
														"constant": false,
														"id": 1752,
														"mutability": "mutable",
														"name": "lastTokenId",
														"nameLocation": "6618:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1779,
														"src": "6610:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1751,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6610:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1756,
												"initialValue": {
													"baseExpression": {
														"id": 1753,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1465,
														"src": "6632:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1755,
													"indexExpression": {
														"id": 1754,
														"name": "lastTokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1739,
														"src": "6643:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6632:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6610:48:6"
											},
											{
												"expression": {
													"id": 1761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1757,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1465,
															"src": "6669:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1759,
														"indexExpression": {
															"id": 1758,
															"name": "tokenIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "6680:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6669:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1760,
														"name": "lastTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1752,
														"src": "6694:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6669:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1762,
												"nodeType": "ExpressionStatement",
												"src": "6669:36:6"
											},
											{
												"expression": {
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1763,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1469,
															"src": "6773:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1765,
														"indexExpression": {
															"id": 1764,
															"name": "lastTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1752,
															"src": "6789:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6773:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1766,
														"name": "tokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1746,
														"src": "6804:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6773:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1768,
												"nodeType": "ExpressionStatement",
												"src": "6773:41:6"
											},
											{
												"expression": {
													"id": 1772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "6935:31:6",
													"subExpression": {
														"baseExpression": {
															"id": 1769,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1469,
															"src": "6942:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1771,
														"indexExpression": {
															"id": 1770,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1735,
															"src": "6958:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6942:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1773,
												"nodeType": "ExpressionStatement",
												"src": "6935:31:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1774,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1465,
															"src": "6976:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "6976:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer)"
														}
													},
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6976:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1778,
												"nodeType": "ExpressionStatement",
												"src": "6976:16:6"
											}
										]
									},
									"documentation": {
										"id": 1733,
										"nodeType": "StructuredDocumentation",
										"src": "5656:277:6",
										"text": " @dev Private function to remove a token from this extension's token tracking data structures.\n This has O(1) time complexity, but alters the order of the _allTokens array.\n @param tokenId uint256 ID of the token to be removed from the tokens list"
									},
									"id": 1780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeTokenFromAllTokensEnumeration",
									"nameLocation": "5947:36:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5992:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "5984:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5984:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5983:17:6"
									},
									"returnParameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6009:0:6"
									},
									"scope": 1781,
									"src": "5938:1061:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1782,
							"src": "397:6604:6",
							"usedErrors": []
						}
					],
					"src": "113:6889:6"
				},
				"id": 6
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
					"exportedSymbols": {
						"Address": [
							2262
						],
						"Context": [
							2284
						],
						"ERC165": [
							2511
						],
						"ERC721": [
							1309
						],
						"ERC721URIStorage": [
							1909
						],
						"IERC165": [
							2523
						],
						"IERC721": [
							1425
						],
						"IERC721Metadata": [
							1967
						],
						"IERC721Receiver": [
							1443
						],
						"Strings": [
							2487
						]
					},
					"id": 1910,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1783,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:7"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1784,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1910,
							"sourceUnit": 1310,
							"src": "138:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1786,
										"name": "ERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1309,
										"src": "271:6:7"
									},
									"id": 1787,
									"nodeType": "InheritanceSpecifier",
									"src": "271:6:7"
								}
							],
							"canonicalName": "ERC721URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1785,
								"nodeType": "StructuredDocumentation",
								"src": "163:69:7",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": false,
							"id": 1909,
							"linearizedBaseContracts": [
								1909,
								1309,
								1967,
								1425,
								2511,
								2523,
								2284
							],
							"name": "ERC721URIStorage",
							"nameLocation": "251:16:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1790,
									"libraryName": {
										"id": 1788,
										"name": "Strings",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2487,
										"src": "290:7:7"
									},
									"nodeType": "UsingForDirective",
									"src": "284:26:7",
									"typeName": {
										"id": 1789,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "302:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1794,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "390:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1909,
									"src": "355:45:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 1793,
										"keyType": {
											"id": 1791,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "363:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "355:26:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueType": {
											"id": 1792,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "374:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										651
									],
									"body": {
										"id": 1855,
										"nodeType": "Block",
										"src": "555:575:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1805,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1797,
																	"src": "581:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1804,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 882,
																"src": "573:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 1806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "573:16:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524337323155524953746f726167653a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 1807,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "591:51:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a",
																"typeString": "literal_string \"ERC721URIStorage: URI query for nonexistent token\""
															},
															"value": "ERC721URIStorage: URI query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a",
																"typeString": "literal_string \"ERC721URIStorage: URI query for nonexistent token\""
															}
														],
														"id": 1803,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "565:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "565:78:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1809,
												"nodeType": "ExpressionStatement",
												"src": "565:78:7"
											},
											{
												"assignments": [
													1811
												],
												"declarations": [
													{
														"constant": false,
														"id": 1811,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "668:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1855,
														"src": "654:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1810,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "654:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1815,
												"initialValue": {
													"baseExpression": {
														"id": 1812,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1794,
														"src": "680:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 1814,
													"indexExpression": {
														"id": 1813,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1797,
														"src": "691:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "680:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "654:45:7"
											},
											{
												"assignments": [
													1817
												],
												"declarations": [
													{
														"constant": false,
														"id": 1817,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "723:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1855,
														"src": "709:18:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1816,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "709:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1820,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1818,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 660,
														"src": "730:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "730:10:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "709:31:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1823,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1817,
																	"src": "819:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1822,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "813:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1821,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "813:5:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "813:11:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1825,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "813:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1826,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "835:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "813:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1831,
												"nodeType": "IfStatement",
												"src": "809:70:7",
												"trueBody": {
													"id": 1830,
													"nodeType": "Block",
													"src": "838:41:7",
													"statements": [
														{
															"expression": {
																"id": 1828,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1811,
																"src": "859:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1802,
															"id": 1829,
															"nodeType": "Return",
															"src": "852:16:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1834,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1811,
																	"src": "987:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1833,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "981:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1832,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "981:5:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "981:16:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1836,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "981:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1007:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "981:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1849,
												"nodeType": "IfStatement",
												"src": "977:106:7",
												"trueBody": {
													"id": 1848,
													"nodeType": "Block",
													"src": "1010:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1843,
																				"name": "base",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1817,
																				"src": "1055:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			},
																			{
																				"id": 1844,
																				"name": "_tokenURI",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1811,
																				"src": "1061:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				},
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"expression": {
																				"id": 1841,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "1038:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1842,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "1038:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1038:33:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1031:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																		"typeString": "type(string storage pointer)"
																	},
																	"typeName": {
																		"id": 1839,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "1031:6:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1031:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1802,
															"id": 1847,
															"nodeType": "Return",
															"src": "1024:48:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1852,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1797,
															"src": "1115:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1850,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1100:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1909_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1851,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 651,
														"src": "1100:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1100:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1802,
												"id": 1854,
												"nodeType": "Return",
												"src": "1093:30:7"
											}
										]
									},
									"documentation": {
										"id": 1795,
										"nodeType": "StructuredDocumentation",
										"src": "407:55:7",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "476:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1799,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "522:8:7"
									},
									"parameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "493:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "485:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "485:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "484:17:7"
									},
									"returnParameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "540:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1800,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:7"
									},
									"scope": 1909,
									"src": "467:663:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1877,
										"nodeType": "Block",
										"src": "1358:133:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1866,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1859,
																	"src": "1384:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1865,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 882,
																"src": "1376:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 1867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1376:16:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524337323155524953746f726167653a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e",
															"id": 1868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1394:48:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4",
																"typeString": "literal_string \"ERC721URIStorage: URI set of nonexistent token\""
															},
															"value": "ERC721URIStorage: URI set of nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4",
																"typeString": "literal_string \"ERC721URIStorage: URI set of nonexistent token\""
															}
														],
														"id": 1864,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1368:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1368:75:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1870,
												"nodeType": "ExpressionStatement",
												"src": "1368:75:7"
											},
											{
												"expression": {
													"id": 1875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1871,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1794,
															"src": "1453:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1873,
														"indexExpression": {
															"id": 1872,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1859,
															"src": "1464:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1453:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1874,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1861,
														"src": "1475:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1453:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1876,
												"nodeType": "ExpressionStatement",
												"src": "1453:31:7"
											}
										]
									},
									"documentation": {
										"id": 1857,
										"nodeType": "StructuredDocumentation",
										"src": "1136:136:7",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 1878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "1286:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1307:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "1299:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "1330:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "1316:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1860,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1316:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1298:42:7"
									},
									"returnParameters": {
										"id": 1863,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:7"
									},
									"scope": 1909,
									"src": "1277:214:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1093
									],
									"body": {
										"id": 1907,
										"nodeType": "Block",
										"src": "1766:142:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1888,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1881,
															"src": "1788:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1885,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1776:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1909_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1093,
														"src": "1776:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1776:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1890,
												"nodeType": "ExpressionStatement",
												"src": "1776:20:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"baseExpression": {
																		"id": 1893,
																		"name": "_tokenURIs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1794,
																		"src": "1817:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																			"typeString": "mapping(uint256 => string storage ref)"
																		}
																	},
																	"id": 1895,
																	"indexExpression": {
																		"id": 1894,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1881,
																		"src": "1828:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1817:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																],
																"id": 1892,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1811:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1891,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1811:5:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1811:26:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes storage pointer"
															}
														},
														"id": 1897,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1811:33:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1898,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1848:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1811:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1906,
												"nodeType": "IfStatement",
												"src": "1807:95:7",
												"trueBody": {
													"id": 1905,
													"nodeType": "Block",
													"src": "1851:51:7",
													"statements": [
														{
															"expression": {
																"id": 1903,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "1865:26:7",
																"subExpression": {
																	"baseExpression": {
																		"id": 1900,
																		"name": "_tokenURIs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1794,
																		"src": "1872:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																			"typeString": "mapping(uint256 => string storage ref)"
																		}
																	},
																	"id": 1902,
																	"indexExpression": {
																		"id": 1901,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1881,
																		"src": "1883:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1872:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1904,
															"nodeType": "ExpressionStatement",
															"src": "1865:26:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1879,
										"nodeType": "StructuredDocumentation",
										"src": "1497:206:7",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "1717:5:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1883,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1757:8:7"
									},
									"parameters": {
										"id": 1882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1731:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "1723:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1723:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1722:17:7"
									},
									"returnParameters": {
										"id": 1884,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1766:0:7"
									},
									"scope": 1909,
									"src": "1708:200:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1910,
							"src": "233:1677:7",
							"usedErrors": []
						}
					],
					"src": "113:1798:7"
				},
				"id": 7
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
					"exportedSymbols": {
						"IERC165": [
							2523
						],
						"IERC721": [
							1425
						],
						"IERC721Enumerable": [
							1940
						]
					},
					"id": 1941,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1911,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "129:23:8"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1912,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1941,
							"sourceUnit": 1426,
							"src": "154:24:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1914,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1425,
										"src": "348:7:8"
									},
									"id": 1915,
									"nodeType": "InheritanceSpecifier",
									"src": "348:7:8"
								}
							],
							"canonicalName": "IERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1913,
								"nodeType": "StructuredDocumentation",
								"src": "180:136:8",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1940,
							"linearizedBaseContracts": [
								1940,
								1425,
								2523
							],
							"name": "IERC721Enumerable",
							"nameLocation": "327:17:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1916,
										"nodeType": "StructuredDocumentation",
										"src": "362:82:8",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 1921,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "458:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "469:2:8"
									},
									"returnParameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "495:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "494:9:8"
									},
									"scope": 1940,
									"src": "449:55:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1922,
										"nodeType": "StructuredDocumentation",
										"src": "510:171:8",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 1931,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "695:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "723:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "715:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "738:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "730:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "730:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "714:30:8"
									},
									"returnParameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1929,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "768:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "768:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "767:9:8"
									},
									"scope": 1940,
									"src": "686:91:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1932,
										"nodeType": "StructuredDocumentation",
										"src": "783:164:8",
										"text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
									},
									"functionSelector": "4f6ccce7",
									"id": 1939,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "961:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "982:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "974:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "974:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "973:15:8"
									},
									"returnParameters": {
										"id": 1938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "1012:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1011:9:8"
									},
									"scope": 1940,
									"src": "952:69:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1941,
							"src": "317:706:8",
							"usedErrors": []
						}
					],
					"src": "129:895:8"
				},
				"id": 8
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							2523
						],
						"IERC721": [
							1425
						],
						"IERC721Metadata": [
							1967
						]
					},
					"id": 1968,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1942,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:9"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1943,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1968,
							"sourceUnit": 1426,
							"src": "137:24:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1945,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1425,
										"src": "326:7:9"
									},
									"id": 1946,
									"nodeType": "InheritanceSpecifier",
									"src": "326:7:9"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1944,
								"nodeType": "StructuredDocumentation",
								"src": "163:133:9",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1967,
							"linearizedBaseContracts": [
								1967,
								1425,
								2523
							],
							"name": "IERC721Metadata",
							"nameLocation": "307:15:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1947,
										"nodeType": "StructuredDocumentation",
										"src": "340:58:9",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1952,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "412:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:2:9"
									},
									"returnParameters": {
										"id": 1951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1950,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "442:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1949,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "442:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:15:9"
									},
									"scope": 1967,
									"src": "403:54:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1953,
										"nodeType": "StructuredDocumentation",
										"src": "463:60:9",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1958,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "537:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "543:2:9"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "569:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1955,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:15:9"
									},
									"scope": 1967,
									"src": "528:56:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1959,
										"nodeType": "StructuredDocumentation",
										"src": "590:90:9",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1966,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "694:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "711:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "703:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:17:9"
									},
									"returnParameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "743:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1963,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "743:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:15:9"
									},
									"scope": 1967,
									"src": "685:73:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1968,
							"src": "297:463:9",
							"usedErrors": []
						}
					],
					"src": "112:649:9"
				},
				"id": 9
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							2262
						]
					},
					"id": 2263,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1969,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1970,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:10",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2262,
							"linearizedBaseContracts": [
								2262
							],
							"name": "Address",
							"nameLocation": "202:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1984,
										"nodeType": "Block",
										"src": "1241:254:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1978,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1973,
																"src": "1465:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1980,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1981,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1977,
												"id": 1983,
												"nodeType": "Return",
												"src": "1458:30:10"
											}
										]
									},
									"documentation": {
										"id": 1971,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:10",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "1195:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:10"
									},
									"returnParameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "1235:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1975,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:10"
									},
									"scope": 2262,
									"src": "1175:320:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2018,
										"nodeType": "Block",
										"src": "2483:241:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1996,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2262",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2262",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1995,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1994,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1998,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1999,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1990,
																"src": "2526:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 2001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1993,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2003,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:10"
											},
											{
												"assignments": [
													2005,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2005,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2018,
														"src": "2578:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2004,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2012,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 2010,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 2006,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1988,
																"src": "2596:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 2007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2009,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2008,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1990,
																"src": "2618:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2014,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2005,
															"src": "2647:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 2015,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 2013,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2017,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:10"
											}
										]
									},
									"documentation": {
										"id": 1986,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:10",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 2019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2019,
												"src": "2431:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:10",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2019,
												"src": "2458:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:10"
									},
									"returnParameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:10"
									},
									"scope": 2262,
									"src": "2412:312:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2035,
										"nodeType": "Block",
										"src": "3555:84:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2030,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2022,
															"src": "3585:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2031,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2024,
															"src": "3593:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 2032,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 2029,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2036,
															2056
														],
														"referencedDeclaration": 2056,
														"src": "3572:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2028,
												"id": 2034,
												"nodeType": "Return",
												"src": "3565:67:10"
											}
										]
									},
									"documentation": {
										"id": 2020,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:10",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 2036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "3488:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "3504:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2023,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:10"
									},
									"returnParameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "3541:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2026,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:10"
									},
									"scope": 2262,
									"src": "3466:173:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2055,
										"nodeType": "Block",
										"src": "4008:76:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2049,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2039,
															"src": "4047:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2050,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2041,
															"src": "4055:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 2051,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 2052,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2043,
															"src": "4064:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2048,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2076,
															2126
														],
														"referencedDeclaration": 2126,
														"src": "4025:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2047,
												"id": 2054,
												"nodeType": "Return",
												"src": "4018:59:10"
											}
										]
									},
									"documentation": {
										"id": 2037,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 2056,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "3892:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2041,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "3916:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2040,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2043,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "3943:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2042,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:10"
									},
									"returnParameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "3994:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2045,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:10"
									},
									"scope": 2262,
									"src": "3861:223:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2075,
										"nodeType": "Block",
										"src": "4589:111:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2069,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2059,
															"src": "4628:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2070,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2061,
															"src": "4636:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2071,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2063,
															"src": "4642:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 2072,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 2068,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2076,
															2126
														],
														"referencedDeclaration": 2126,
														"src": "4606:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2067,
												"id": 2074,
												"nodeType": "Return",
												"src": "4599:94:10"
											}
										]
									},
									"documentation": {
										"id": 2057,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 2076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2059,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "4486:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "4510:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2060,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "4537:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:10"
									},
									"returnParameters": {
										"id": 2067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "4575:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2065,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:10"
									},
									"scope": 2262,
									"src": "4446:254:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2125,
										"nodeType": "Block",
										"src": "5127:320:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2093,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2262",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2262",
																				"typeString": "library Address"
																			}
																		],
																		"id": 2092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2091,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2096,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2083,
																"src": "5170:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 2098,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 2090,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2100,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2103,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2079,
																	"src": "5247:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2102,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1985,
																"src": "5236:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 2105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 2101,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2107,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:10"
											},
											{
												"assignments": [
													2109,
													2111
												],
												"declarations": [
													{
														"constant": false,
														"id": 2109,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2125,
														"src": "5300:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2108,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2111,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 2125,
														"src": "5314:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2110,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2118,
												"initialValue": {
													"arguments": [
														{
															"id": 2116,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2081,
															"src": "5367:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2112,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2079,
																"src": "5341:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2115,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2114,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2083,
																"src": "5360:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2120,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2109,
															"src": "5406:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2121,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2111,
															"src": "5415:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2122,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2085,
															"src": "5427:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2119,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2261,
														"src": "5389:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 2123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2089,
												"id": 2124,
												"nodeType": "Return",
												"src": "5382:58:10"
											}
										]
									},
									"documentation": {
										"id": 2077,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:10",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 2126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2126,
												"src": "4988:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2126,
												"src": "5012:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2080,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2126,
												"src": "5039:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2126,
												"src": "5062:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2084,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:10"
									},
									"returnParameters": {
										"id": 2089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2126,
												"src": "5113:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2087,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:10"
									},
									"scope": 2262,
									"src": "4948:499:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2142,
										"nodeType": "Block",
										"src": "5724:97:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2137,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2129,
															"src": "5760:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2138,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2131,
															"src": "5768:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 2139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 2136,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2143,
															2178
														],
														"referencedDeclaration": 2178,
														"src": "5741:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2135,
												"id": 2141,
												"nodeType": "Return",
												"src": "5734:80:10"
											}
										]
									},
									"documentation": {
										"id": 2127,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2143,
												"src": "5652:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2131,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2143,
												"src": "5668:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2130,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:10"
									},
									"returnParameters": {
										"id": 2135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2143,
												"src": "5710:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2133,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:10"
									},
									"scope": 2262,
									"src": "5624:197:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2177,
										"nodeType": "Block",
										"src": "6163:228:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2157,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2146,
																	"src": "6192:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2156,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1985,
																"src": "6181:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 2159,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 2155,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2161,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:10"
											},
											{
												"assignments": [
													2163,
													2165
												],
												"declarations": [
													{
														"constant": false,
														"id": 2163,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2177,
														"src": "6252:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2162,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2165,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 2177,
														"src": "6266:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2164,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2170,
												"initialValue": {
													"arguments": [
														{
															"id": 2168,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2148,
															"src": "6311:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2166,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2146,
															"src": "6293:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2172,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2163,
															"src": "6350:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2173,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2165,
															"src": "6359:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2174,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2150,
															"src": "6371:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2171,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2261,
														"src": "6333:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 2175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2154,
												"id": 2176,
												"nodeType": "Return",
												"src": "6326:58:10"
											}
										]
									},
									"documentation": {
										"id": 2144,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2146,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2178,
												"src": "6042:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2148,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2178,
												"src": "6066:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2147,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2150,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2178,
												"src": "6093:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2149,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:10"
									},
									"returnParameters": {
										"id": 2154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2178,
												"src": "6149:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2152,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:10"
									},
									"scope": 2262,
									"src": "6005:386:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2194,
										"nodeType": "Block",
										"src": "6667:101:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2189,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2181,
															"src": "6705:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2190,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2183,
															"src": "6713:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 2191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 2188,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2195,
															2230
														],
														"referencedDeclaration": 2230,
														"src": "6684:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2187,
												"id": 2193,
												"nodeType": "Return",
												"src": "6677:84:10"
											}
										]
									},
									"documentation": {
										"id": 2179,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2181,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "6600:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2183,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "6616:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2182,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:10"
									},
									"returnParameters": {
										"id": 2187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2186,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "6653:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2185,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:10"
									},
									"scope": 2262,
									"src": "6570:198:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2229,
										"nodeType": "Block",
										"src": "7109:232:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2209,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2198,
																	"src": "7138:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2208,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1985,
																"src": "7127:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 2211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 2207,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2213,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:10"
											},
											{
												"assignments": [
													2215,
													2217
												],
												"declarations": [
													{
														"constant": false,
														"id": 2215,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2229,
														"src": "7200:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2214,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2217,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 2229,
														"src": "7214:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2216,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2222,
												"initialValue": {
													"arguments": [
														{
															"id": 2220,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2200,
															"src": "7261:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2218,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2198,
															"src": "7241:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2224,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "7300:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2225,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2217,
															"src": "7309:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2226,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2202,
															"src": "7321:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2223,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2261,
														"src": "7283:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 2227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2206,
												"id": 2228,
												"nodeType": "Return",
												"src": "7276:58:10"
											}
										]
									},
									"documentation": {
										"id": 2196,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2198,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "6993:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "7017:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2199,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "7044:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2201,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:10"
									},
									"returnParameters": {
										"id": 2206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "7095:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2204,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:10"
									},
									"scope": 2262,
									"src": "6954:387:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2260,
										"nodeType": "Block",
										"src": "7721:532:10",
										"statements": [
											{
												"condition": {
													"id": 2242,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2233,
													"src": "7735:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2258,
													"nodeType": "Block",
													"src": "7792:455:10",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2246,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2235,
																		"src": "7876:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2256,
																"nodeType": "Block",
																"src": "8184:53:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2253,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2237,
																					"src": "8209:12:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 2252,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 2254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2255,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:10"
																	}
																]
															},
															"id": 2257,
															"nodeType": "IfStatement",
															"src": "7872:365:10",
															"trueBody": {
																"id": 2251,
																"nodeType": "Block",
																"src": "7899:279:10",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:10",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:10",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:10"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:10"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:10",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:10",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:10"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:10"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:10"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:10"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:10"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 2235,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:10",
																				"valueSize": 1
																			},
																			{
																				"declaration": 2235,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:10",
																				"valueSize": 1
																			}
																		],
																		"id": 2250,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:10"
																	}
																]
															}
														}
													]
												},
												"id": 2259,
												"nodeType": "IfStatement",
												"src": "7731:516:10",
												"trueBody": {
													"id": 2245,
													"nodeType": "Block",
													"src": "7744:42:10",
													"statements": [
														{
															"expression": {
																"id": 2243,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2235,
																"src": "7765:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2241,
															"id": 2244,
															"nodeType": "Return",
															"src": "7758:17:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2231,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:10",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 2261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2233,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "7596:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2232,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "7618:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2234,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "7651:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2236,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:10"
									},
									"returnParameters": {
										"id": 2241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "7707:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:10"
									},
									"scope": 2262,
									"src": "7561:692:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2263,
							"src": "194:8061:10",
							"usedErrors": []
						}
					],
					"src": "101:8155:10"
				},
				"id": 10
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							2284
						]
					},
					"id": 2285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2264,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:11"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2265,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:11",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 2284,
							"linearizedBaseContracts": [
								2284
							],
							"name": "Context",
							"nameLocation": "626:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2273,
										"nodeType": "Block",
										"src": "702:34:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2270,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2269,
												"id": 2272,
												"nodeType": "Return",
												"src": "712:17:11"
											}
										]
									},
									"id": 2274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:11"
									},
									"returnParameters": {
										"id": 2269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "693:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:11"
									},
									"scope": 2284,
									"src": "640:96:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2282,
										"nodeType": "Block",
										"src": "809:32:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2279,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 2278,
												"id": 2281,
												"nodeType": "Return",
												"src": "819:15:11"
											}
										]
									},
									"id": 2283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:11"
									},
									"returnParameters": {
										"id": 2278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "793:14:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2276,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:11"
									},
									"scope": 2284,
									"src": "742:99:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2285,
							"src": "608:235:11",
							"usedErrors": []
						}
					],
					"src": "86:758:11"
				},
				"id": 11
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							2487
						]
					},
					"id": 2488,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2287,
								"nodeType": "StructuredDocumentation",
								"src": "111:34:12",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2487,
							"linearizedBaseContracts": [
								2487
							],
							"name": "Strings",
							"nameLocation": "154:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2290,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "193:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 2487,
									"src": "168:58:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 2288,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "168:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 2289,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "208:18:12",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2368,
										"nodeType": "Block",
										"src": "399:632:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2298,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2293,
														"src": "601:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2299,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "610:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "601:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2304,
												"nodeType": "IfStatement",
												"src": "597:51:12",
												"trueBody": {
													"id": 2303,
													"nodeType": "Block",
													"src": "613:35:12",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2301,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "634:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 2297,
															"id": 2302,
															"nodeType": "Return",
															"src": "627:10:12"
														}
													]
												}
											},
											{
												"assignments": [
													2306
												],
												"declarations": [
													{
														"constant": false,
														"id": 2306,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "665:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 2368,
														"src": "657:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2305,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "657:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2308,
												"initialValue": {
													"id": 2307,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2293,
													"src": "672:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "657:20:12"
											},
											{
												"assignments": [
													2310
												],
												"declarations": [
													{
														"constant": false,
														"id": 2310,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "695:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2368,
														"src": "687:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2309,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "687:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2311,
												"nodeType": "VariableDeclarationStatement",
												"src": "687:14:12"
											},
											{
												"body": {
													"id": 2322,
													"nodeType": "Block",
													"src": "729:57:12",
													"statements": [
														{
															"expression": {
																"id": 2316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "743:8:12",
																"subExpression": {
																	"id": 2315,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2310,
																	"src": "743:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2317,
															"nodeType": "ExpressionStatement",
															"src": "743:8:12"
														},
														{
															"expression": {
																"id": 2320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2318,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2306,
																	"src": "765:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 2319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "773:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "765:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2321,
															"nodeType": "ExpressionStatement",
															"src": "765:10:12"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2312,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2306,
														"src": "718:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2313,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "726:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "718:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2323,
												"nodeType": "WhileStatement",
												"src": "711:75:12"
											},
											{
												"assignments": [
													2325
												],
												"declarations": [
													{
														"constant": false,
														"id": 2325,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "808:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2368,
														"src": "795:19:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2324,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "795:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2330,
												"initialValue": {
													"arguments": [
														{
															"id": 2328,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2310,
															"src": "827:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "817:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2326,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "821:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "817:17:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "795:39:12"
											},
											{
												"body": {
													"id": 2361,
													"nodeType": "Block",
													"src": "863:131:12",
													"statements": [
														{
															"expression": {
																"id": 2336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2334,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2310,
																	"src": "877:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "887:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "877:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2337,
															"nodeType": "ExpressionStatement",
															"src": "877:11:12"
														},
														{
															"expression": {
																"id": 2355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2338,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2325,
																		"src": "902:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2340,
																	"indexExpression": {
																		"id": 2339,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2310,
																		"src": "909:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "902:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2352,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 2345,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "932:2:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2350,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2348,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2293,
																									"src": "945:5:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 2349,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "953:2:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "945:10:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 2347,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "937:7:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 2346,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "937:7:12",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 2351,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "937:19:12",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "932:24:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2344,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "926:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 2343,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "926:5:12",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2353,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "926:31:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 2342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "919:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 2341,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "919:6:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "919:39:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "902:56:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2356,
															"nodeType": "ExpressionStatement",
															"src": "902:56:12"
														},
														{
															"expression": {
																"id": 2359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2357,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2293,
																	"src": "972:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 2358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "981:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "972:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2360,
															"nodeType": "ExpressionStatement",
															"src": "972:11:12"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2331,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2293,
														"src": "851:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2332,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "860:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "851:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2362,
												"nodeType": "WhileStatement",
												"src": "844:150:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2365,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2325,
															"src": "1017:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2364,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1010:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2363,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1010:6:12",
															"typeDescriptions": {}
														}
													},
													"id": 2366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1010:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2297,
												"id": 2367,
												"nodeType": "Return",
												"src": "1003:21:12"
											}
										]
									},
									"documentation": {
										"id": 2291,
										"nodeType": "StructuredDocumentation",
										"src": "233:90:12",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 2369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "337:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2293,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "354:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "346:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:15:12"
									},
									"returnParameters": {
										"id": 2297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "384:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2295,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "384:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "383:15:12"
									},
									"scope": 2487,
									"src": "328:703:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2409,
										"nodeType": "Block",
										"src": "1210:255:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2377,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2372,
														"src": "1224:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2378,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1233:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1224:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2383,
												"nodeType": "IfStatement",
												"src": "1220:54:12",
												"trueBody": {
													"id": 2382,
													"nodeType": "Block",
													"src": "1236:38:12",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 2380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1257:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 2376,
															"id": 2381,
															"nodeType": "Return",
															"src": "1250:13:12"
														}
													]
												}
											},
											{
												"assignments": [
													2385
												],
												"declarations": [
													{
														"constant": false,
														"id": 2385,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1291:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 2409,
														"src": "1283:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2384,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1283:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2387,
												"initialValue": {
													"id": 2386,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2372,
													"src": "1298:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1283:20:12"
											},
											{
												"assignments": [
													2389
												],
												"declarations": [
													{
														"constant": false,
														"id": 2389,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1321:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2409,
														"src": "1313:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2388,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1313:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2391,
												"initialValue": {
													"hexValue": "30",
													"id": 2390,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1330:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1313:18:12"
											},
											{
												"body": {
													"id": 2402,
													"nodeType": "Block",
													"src": "1359:57:12",
													"statements": [
														{
															"expression": {
																"id": 2396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1373:8:12",
																"subExpression": {
																	"id": 2395,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2389,
																	"src": "1373:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2397,
															"nodeType": "ExpressionStatement",
															"src": "1373:8:12"
														},
														{
															"expression": {
																"id": 2400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2398,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2385,
																	"src": "1395:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 2399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1404:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1395:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2401,
															"nodeType": "ExpressionStatement",
															"src": "1395:10:12"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2392,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2385,
														"src": "1348:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1356:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1348:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2403,
												"nodeType": "WhileStatement",
												"src": "1341:75:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2405,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2372,
															"src": "1444:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2406,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2389,
															"src": "1451:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2404,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2410,
															2486
														],
														"referencedDeclaration": 2486,
														"src": "1432:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1432:26:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2376,
												"id": 2408,
												"nodeType": "Return",
												"src": "1425:33:12"
											}
										]
									},
									"documentation": {
										"id": 2370,
										"nodeType": "StructuredDocumentation",
										"src": "1037:94:12",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 2410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1145:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1165:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2410,
												"src": "1157:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:15:12"
									},
									"returnParameters": {
										"id": 2376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2410,
												"src": "1195:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2374,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1195:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:15:12"
									},
									"scope": 2487,
									"src": "1136:329:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2485,
										"nodeType": "Block",
										"src": "1678:351:12",
										"statements": [
											{
												"assignments": [
													2421
												],
												"declarations": [
													{
														"constant": false,
														"id": 2421,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1701:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2485,
														"src": "1688:19:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2420,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1688:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2430,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1720:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2425,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2415,
																	"src": "1724:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1720:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 2427,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1733:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1720:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2423,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1710:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2422,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1714:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1710:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1688:47:12"
											},
											{
												"expression": {
													"id": 2435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2431,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2421,
															"src": "1745:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2433,
														"indexExpression": {
															"hexValue": "30",
															"id": 2432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1752:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1745:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1745:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2436,
												"nodeType": "ExpressionStatement",
												"src": "1745:15:12"
											},
											{
												"expression": {
													"id": 2441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2437,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2421,
															"src": "1770:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2439,
														"indexExpression": {
															"hexValue": "31",
															"id": 2438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1777:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1770:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 2440,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1782:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1770:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2442,
												"nodeType": "ExpressionStatement",
												"src": "1770:15:12"
											},
											{
												"body": {
													"id": 2471,
													"nodeType": "Block",
													"src": "1840:87:12",
													"statements": [
														{
															"expression": {
																"id": 2465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2457,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2421,
																		"src": "1854:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2459,
																	"indexExpression": {
																		"id": 2458,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2444,
																		"src": "1861:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1854:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2460,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2290,
																		"src": "1866:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2464,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2461,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2413,
																			"src": "1879:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2462,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1887:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1879:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1866:25:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1854:37:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2466,
															"nodeType": "ExpressionStatement",
															"src": "1854:37:12"
														},
														{
															"expression": {
																"id": 2469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2467,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2413,
																	"src": "1905:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1905:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2470,
															"nodeType": "ExpressionStatement",
															"src": "1905:11:12"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2451,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2444,
														"src": "1828:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2452,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1832:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1828:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2472,
												"initializationExpression": {
													"assignments": [
														2444
													],
													"declarations": [
														{
															"constant": false,
															"id": 2444,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1808:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 2472,
															"src": "1800:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2443,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1800:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2450,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2445,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1812:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2446,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2415,
																"src": "1816:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1812:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2448,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1825:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1812:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1800:26:12"
												},
												"loopExpression": {
													"expression": {
														"id": 2455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1835:3:12",
														"subExpression": {
															"id": 2454,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2444,
															"src": "1837:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2456,
													"nodeType": "ExpressionStatement",
													"src": "1835:3:12"
												},
												"nodeType": "ForStatement",
												"src": "1795:132:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2474,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2413,
																"src": "1944:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2475,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1953:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1944:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 2477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1956:34:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 2473,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1936:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1936:55:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2479,
												"nodeType": "ExpressionStatement",
												"src": "1936:55:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2482,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2421,
															"src": "2015:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2481,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2008:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2480,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2008:6:12",
															"typeDescriptions": {}
														}
													},
													"id": 2483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2008:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2419,
												"id": 2484,
												"nodeType": "Return",
												"src": "2001:21:12"
											}
										]
									},
									"documentation": {
										"id": 2411,
										"nodeType": "StructuredDocumentation",
										"src": "1471:112:12",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1597:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2413,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1617:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "1609:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1609:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2415,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1632:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "1624:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1608:31:12"
									},
									"returnParameters": {
										"id": 2419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "1663:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2417,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1663:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:15:12"
									},
									"scope": 2487,
									"src": "1588:441:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2488,
							"src": "146:1885:12",
							"usedErrors": []
						}
					],
					"src": "86:1946:12"
				},
				"id": 12
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2511
						],
						"IERC165": [
							2523
						]
					},
					"id": 2512,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2489,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:13"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2490,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2512,
							"sourceUnit": 2524,
							"src": "124:23:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2492,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2523,
										"src": "754:7:13"
									},
									"id": 2493,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:13"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2491,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:13",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 2511,
							"linearizedBaseContracts": [
								2511,
								2523
							],
							"name": "ERC165",
							"nameLocation": "744:6:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2522
									],
									"body": {
										"id": 2509,
										"nodeType": "Block",
										"src": "920:64:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2502,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2496,
														"src": "937:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2504,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2523,
																	"src": "957:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2523_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2523_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2503,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2523",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2506,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2501,
												"id": 2508,
												"nodeType": "Return",
												"src": "930:47:13"
											}
										]
									},
									"documentation": {
										"id": 2494,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:13",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2498,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:13"
									},
									"parameters": {
										"id": 2497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2496,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2510,
												"src": "856:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2495,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:13"
									},
									"returnParameters": {
										"id": 2501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2510,
												"src": "914:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2499,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:13"
									},
									"scope": 2511,
									"src": "829:155:13",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2512,
							"src": "726:260:13",
							"usedErrors": []
						}
					],
					"src": "99:888:13"
				},
				"id": 13
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2523
						]
					},
					"id": 2524,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2513,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2514,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:14",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2523,
							"linearizedBaseContracts": [
								2523
							],
							"name": "IERC165",
							"nameLocation": "415:7:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2515,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:14",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2522,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2517,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2522,
												"src": "801:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2516,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:14"
									},
									"returnParameters": {
										"id": 2521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2522,
												"src": "844:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2519,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:14"
									},
									"scope": 2523,
									"src": "774:76:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2524,
							"src": "405:447:14",
							"usedErrors": []
						}
					],
					"src": "100:753:14"
				},
				"id": 14
			}
		}
	}
}